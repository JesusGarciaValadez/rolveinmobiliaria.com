webpackJsonp([1],{

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}],\"transform-object-rest-spread\"]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/assets/js/components/Client.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'client',\n  props: {\n    name: {\n      type: String,\n      default: '',\n      required: true\n    },\n    phoneOne: {\n      type: String,\n      default: '',\n      required: true\n    },\n    phoneTwo: {\n      type: String,\n      default: ''\n    },\n    business: {\n      type: String,\n      default: ''\n    },\n    emailOne: {\n      type: String,\n      default: ''\n    },\n    emailTwo: {\n      type: String,\n      default: ''\n    },\n    reference: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    hasPhoneOne: function hasPhoneOne() {\n      return this.phoneOne.length !== 0;\n    },\n    hasPhoneTwo: function hasPhoneTwo() {\n      return this.phoneTwo.length !== 0;\n    },\n    hasBusiness: function hasBusiness() {\n      return this.business.length !== 0;\n    },\n    hasEmailOne: function hasEmailOne() {\n      return this.emailOne.length !== 0;\n    },\n    hasEmailTwo: function hasEmailTwo() {\n      return this.emailTwo.length !== 0;\n    },\n    hasReference: function hasReference() {\n      return this.reference.length !== 0;\n    }\n  },\n  filters: {\n    mailto: function mailto(value) {\n      if (!value) return '';\n\n      return 'mailto:' + value;\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vcmVzb3VyY2VzL2Fzc2V0cy9qcy9jb21wb25lbnRzL0NsaWVudC52dWU/MDEyNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTRCQTtBQUNBLGdCQURBO0FBRUE7QUFDQTtBQUNBLGtCQURBO0FBRUEsaUJBRkE7QUFHQTtBQUhBLEtBREE7QUFNQTtBQUNBLGtCQURBO0FBRUEsaUJBRkE7QUFHQTtBQUhBLEtBTkE7QUFXQTtBQUNBLGtCQURBO0FBRUE7QUFGQSxLQVhBO0FBZUE7QUFDQSxrQkFEQTtBQUVBO0FBRkEsS0FmQTtBQW1CQTtBQUNBLGtCQURBO0FBRUE7QUFGQSxLQW5CQTtBQXVCQTtBQUNBLGtCQURBO0FBRUE7QUFGQSxLQXZCQTtBQTJCQTtBQUNBLGtCQURBO0FBRUE7QUFGQTtBQTNCQSxHQUZBO0FBa0NBO0FBQ0E7QUFDQTtBQUNBLEtBSEE7QUFJQTtBQUNBO0FBQ0EsS0FOQTtBQU9BO0FBQ0E7QUFDQSxLQVRBO0FBVUE7QUFDQTtBQUNBLEtBWkE7QUFhQTtBQUNBO0FBQ0EsS0FmQTtBQWdCQTtBQUNBO0FBQ0E7QUFsQkEsR0FsQ0E7QUFzREE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFMQTtBQXREQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzP3tcImNhY2hlRGlyZWN0b3J5XCI6dHJ1ZSxcInByZXNldHNcIjpbW1wiZW52XCIse1wibW9kdWxlc1wiOmZhbHNlLFwidGFyZ2V0c1wiOntcImJyb3dzZXJzXCI6W1wiPiAyJVwiXSxcInVnbGlmeVwiOnRydWV9fV1dLFwicGx1Z2luc1wiOltcInRyYW5zZm9ybS1vYmplY3QtcmVzdC1zcHJlYWRcIixbXCJ0cmFuc2Zvcm0tcnVudGltZVwiLHtcInBvbHlmaWxsXCI6ZmFsc2UsXCJoZWxwZXJzXCI6ZmFsc2V9XSxcInRyYW5zZm9ybS1vYmplY3QtcmVzdC1zcHJlYWRcIl19IS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9c2NyaXB0JmluZGV4PTAhLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2NvbXBvbmVudHMvQ2xpZW50LnZ1ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIjx0ZW1wbGF0ZT5cbiAgPGRpdj5cbiAgICA8cD48c3Ryb25nPkNsaWVudGU6IDwvc3Ryb25nPiB7eyBuYW1lIH19PC9wPlxuICAgIDxwIHYtc2hvdz1cImhhc1Bob25lT25lXCI+PHN0cm9uZz5UZWzDqWZvbm86PC9zdHJvbmc+IHt7IHBob25lT25lIH19PC9wPlxuICAgIDxwIHYtc2hvdz1cImhhc1Bob25lVHdvXCI+PHN0cm9uZz5UZWzDqWZvbm86PC9zdHJvbmc+IHt7IHBob25lVHdvIH19PC9wPlxuICAgIDxwIHYtc2hvdz1cImhhc0J1c2luZXNzXCI+PHN0cm9uZz5FbXByZXNhOjwvc3Ryb25nPiB7eyBidXNpbmVzcyB9fTwvcD5cbiAgICA8cCB2LXNob3c9XCJoYXNFbWFpbE9uZVwiPjxzdHJvbmc+RW1haWw6PC9zdHJvbmc+IDxhIDpocmVmPVwiZW1haWxPbmUgfCBtYWlsdG9cIiA6dGl0bGU9XCJlbWFpbE9uZVwiPnt7IGVtYWlsT25lIH19PC9hPjwvcD5cbiAgICA8cCB2LXNob3c9XCJoYXNFbWFpbFR3b1wiPjxzdHJvbmc+RW1haWw6PC9zdHJvbmc+IDxhIDpocmVmPVwiZW1haWxUd28gfCBtYWlsdG9cIiA6dGl0bGU9XCJlbWFpbFR3b1wiPnt7IGVtYWlsVHdvIH19PC9hPjwvcD5cbiAgICA8cCB2LXNob3c9XCJoYXNSZWZlcmVuY2VcIj48c3Ryb25nPlJlZmVyZW5jaWE6PC9zdHJvbmc+IHt7IHJlZmVyZW5jZSB9fTwvcD5cblxuICAgIDxwPlxuICAgICAgPHN0cm9uZyBjbGFzcz1cInRleHQtZGFuZ2VyXCI+XG4gICAgICAgIMK/Tm8gZXMgZWwgY2xpZW50ZSBxdWUgcXVlcsOtYXM/XG4gICAgICA8L3N0cm9uZz5cbiAgICAgIDxzdHJvbmc+XG4gICAgICAgIFNlbGVjY2lvbmEgb3RybyBvXG4gICAgICAgIDxhXG4gICAgICAgICAgaHJlZj1cIiNcIlxuICAgICAgICAgIHRpdGxlPVwiY3JlYSB1bm8gbnVldm9cIlxuICAgICAgICAgIHRhcmdldD1cIl9zZWxmXCJcbiAgICAgICAgICBkYXRhLXRvZ2dsZT1cIm1vZGFsXCJcbiAgICAgICAgICBkYXRhLXRhcmdldD1cIiNuZXdDbGllbnRcIj5jcmVhIHVubyBudWV2bzwvYT5cbiAgICAgIDwvc3Ryb25nPlxuICAgIDwvcD5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuICBleHBvcnQgZGVmYXVsdCB7XG4gICAgbmFtZTogJ2NsaWVudCcsXG4gICAgcHJvcHM6IHtcbiAgICAgIG5hbWU6IHtcbiAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICBkZWZhdWx0OiAnJyxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBwaG9uZU9uZToge1xuICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgIGRlZmF1bHQ6ICcnLFxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHBob25lVHdvOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgZGVmYXVsdDogJydcbiAgICAgIH0sXG4gICAgICBidXNpbmVzczoge1xuICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgIGRlZmF1bHQ6ICcnXG4gICAgICB9LFxuICAgICAgZW1haWxPbmU6IHtcbiAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICBkZWZhdWx0OiAnJ1xuICAgICAgfSxcbiAgICAgIGVtYWlsVHdvOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgZGVmYXVsdDogJydcbiAgICAgIH0sXG4gICAgICByZWZlcmVuY2U6IHtcbiAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICBkZWZhdWx0OiAnJ1xuICAgICAgfVxuICAgIH0sXG4gICAgY29tcHV0ZWQ6IHtcbiAgICAgIGhhc1Bob25lT25lOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBob25lT25lLmxlbmd0aCAhPT0gMFxuICAgICAgfSxcbiAgICAgIGhhc1Bob25lVHdvOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBob25lVHdvLmxlbmd0aCAhPT0gMFxuICAgICAgfSxcbiAgICAgIGhhc0J1c2luZXNzOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmJ1c2luZXNzLmxlbmd0aCAhPT0gMFxuICAgICAgfSxcbiAgICAgIGhhc0VtYWlsT25lOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVtYWlsT25lLmxlbmd0aCAhPT0gMFxuICAgICAgfSxcbiAgICAgIGhhc0VtYWlsVHdvOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVtYWlsVHdvLmxlbmd0aCAhPT0gMFxuICAgICAgfSxcbiAgICAgIGhhc1JlZmVyZW5jZTogZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5yZWZlcmVuY2UubGVuZ3RoICE9PSAwXG4gICAgICB9LFxuICAgIH0sXG4gICAgZmlsdGVyczoge1xuICAgICAgbWFpbHRvOiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgaWYgKCF2YWx1ZSkgcmV0dXJuICcnXG5cbiAgICAgICAgcmV0dXJuICdtYWlsdG86JyArIHZhbHVlXG4gICAgICB9XG4gICAgfVxuICB9XG48L3NjcmlwdD5cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyByZXNvdXJjZXMvYXNzZXRzL2pzL2NvbXBvbmVudHMvQ2xpZW50LnZ1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}],\"transform-object-rest-spread\"]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/assets/js/components/Client.vue\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}],\"transform-object-rest-spread\"]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/assets/js/components/Expedient.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(\"./node_modules/vue/dist/vue.common.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Client__ = __webpack_require__(\"./resources/assets/js/components/Client.vue\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__Client__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue___default.a.component('client', __WEBPACK_IMPORTED_MODULE_1__Client___default.a);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'expedient',\n  children: ['client'],\n  props: {\n    expedient: {\n      type: String,\n      default: '',\n      required: true\n    },\n    name: {\n      type: String,\n      default: '',\n      required: true\n    },\n    phoneOne: {\n      type: String,\n      default: '',\n      required: true\n    },\n    phoneTwo: {\n      type: String,\n      default: ''\n    },\n    business: {\n      type: String,\n      default: ''\n    },\n    emailOne: {\n      type: String,\n      default: ''\n    },\n    emailTwo: {\n      type: String,\n      default: ''\n    },\n    reference: {\n      type: String,\n      default: ''\n    },\n    hasClient: {\n      type: Boolean,\n      default: false,\n      required: true\n    },\n    empty: {\n      type: Boolean,\n      default: true,\n      required: false\n    }\n  },\n  computed: {\n    isEmpty: function isEmpty() {\n      return this.empty;\n    },\n    hasExpedient: function hasExpedient() {\n      return this.expedient.length !== 0;\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vcmVzb3VyY2VzL2Fzc2V0cy9qcy9jb21wb25lbnRzL0V4cGVkaWVudC52dWU/ZGQ3NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFtQkE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLG1CQURBO0FBRUEsc0JBRkE7QUFHQTtBQUNBO0FBQ0Esa0JBREE7QUFFQSxpQkFGQTtBQUdBO0FBSEEsS0FEQTtBQU1BO0FBQ0Esa0JBREE7QUFFQSxpQkFGQTtBQUdBO0FBSEEsS0FOQTtBQVdBO0FBQ0Esa0JBREE7QUFFQSxpQkFGQTtBQUdBO0FBSEEsS0FYQTtBQWdCQTtBQUNBLGtCQURBO0FBRUE7QUFGQSxLQWhCQTtBQW9CQTtBQUNBLGtCQURBO0FBRUE7QUFGQSxLQXBCQTtBQXdCQTtBQUNBLGtCQURBO0FBRUE7QUFGQSxLQXhCQTtBQTRCQTtBQUNBLGtCQURBO0FBRUE7QUFGQSxLQTVCQTtBQWdDQTtBQUNBLGtCQURBO0FBRUE7QUFGQSxLQWhDQTtBQW9DQTtBQUNBLG1CQURBO0FBRUEsb0JBRkE7QUFHQTtBQUhBLEtBcENBO0FBeUNBO0FBQ0EsbUJBREE7QUFFQSxtQkFGQTtBQUdBO0FBSEE7QUF6Q0EsR0FIQTtBQWtEQTtBQUNBO0FBQ0E7QUFDQSxLQUhBO0FBSUE7QUFDQTtBQUNBO0FBTkE7QUFsREEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz97XCJjYWNoZURpcmVjdG9yeVwiOnRydWUsXCJwcmVzZXRzXCI6W1tcImVudlwiLHtcIm1vZHVsZXNcIjpmYWxzZSxcInRhcmdldHNcIjp7XCJicm93c2Vyc1wiOltcIj4gMiVcIl0sXCJ1Z2xpZnlcIjp0cnVlfX1dXSxcInBsdWdpbnNcIjpbXCJ0cmFuc2Zvcm0tb2JqZWN0LXJlc3Qtc3ByZWFkXCIsW1widHJhbnNmb3JtLXJ1bnRpbWVcIix7XCJwb2x5ZmlsbFwiOmZhbHNlLFwiaGVscGVyc1wiOmZhbHNlfV0sXCJ0cmFuc2Zvcm0tb2JqZWN0LXJlc3Qtc3ByZWFkXCJdfSEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvci5qcz90eXBlPXNjcmlwdCZpbmRleD0wIS4vcmVzb3VyY2VzL2Fzc2V0cy9qcy9jb21wb25lbnRzL0V4cGVkaWVudC52dWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyI8dGVtcGxhdGU+XG4gIDxkaXYgY2xhc3M9XCJjbGVhcmZpeCBibG9jayBjb2wteHMtMTIgY29sLXNtLW9mZnNldC0zIGNvbC1zbS05IGNvbC1tZC1vZmZzZXQtMiBjb2wtbWQtOSBjb2wtbGctb2Zmc2V0LTIgY29sLWxnLTEwIGFsZXJ0IGFsZXJ0LWluZm9cIiB2LWlmPVwiIWlzRW1wdHlcIj5cbiAgICA8ZGl2PlxuICAgICAgPHAgdi1zaG93PVwiaGFzRXhwZWRpZW50XCI+PHN0cm9uZz5FeHBlZGllbnRlIGludGVybm86PC9zdHJvbmc+IHt7IGV4cGVkaWVudCB9fTwvcD5cbiAgICA8L2Rpdj5cblxuICAgIDxjbGllbnRcbiAgICAgIDpuYW1lPVwibmFtZVwiXG4gICAgICA6cGhvbmUtb25lPVwicGhvbmVPbmVcIlxuICAgICAgOnBob25lLXR3bz1cInBob25lVHdvXCJcbiAgICAgIDpidXNpbmVzcz1cImJ1c2luZXNzXCJcbiAgICAgIDplbWFpbC1vbmU9XCJlbWFpbE9uZVwiXG4gICAgICA6ZW1haWwtdHdvPVwiZW1haWxUd29cIlxuICAgICAgOnJlZmVyZW5jZT1cInJlZmVyZW5jZVwiXG4gICAgICB2LWlmPVwiaGFzQ2xpZW50XCI+PC9jbGllbnQ+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbiAgaW1wb3J0IFZ1ZSBmcm9tICd2dWUnXG4gIGltcG9ydCBjbGllbnQgZnJvbSAnLi9DbGllbnQnXG5cbiAgVnVlLmNvbXBvbmVudCgnY2xpZW50JywgY2xpZW50KVxuXG4gIGV4cG9ydCBkZWZhdWx0IHtcbiAgICBuYW1lOiAnZXhwZWRpZW50JyxcbiAgICBjaGlsZHJlbjogWydjbGllbnQnXSxcbiAgICBwcm9wczoge1xuICAgICAgZXhwZWRpZW50OiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgZGVmYXVsdDogJycsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgICB9LFxuICAgICAgbmFtZToge1xuICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgIGRlZmF1bHQ6ICcnLFxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHBob25lT25lOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgZGVmYXVsdDogJycsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgICB9LFxuICAgICAgcGhvbmVUd286IHtcbiAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICBkZWZhdWx0OiAnJ1xuICAgICAgfSxcbiAgICAgIGJ1c2luZXNzOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgZGVmYXVsdDogJydcbiAgICAgIH0sXG4gICAgICBlbWFpbE9uZToge1xuICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgIGRlZmF1bHQ6ICcnXG4gICAgICB9LFxuICAgICAgZW1haWxUd286IHtcbiAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICBkZWZhdWx0OiAnJ1xuICAgICAgfSxcbiAgICAgIHJlZmVyZW5jZToge1xuICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgIGRlZmF1bHQ6ICcnXG4gICAgICB9LFxuICAgICAgaGFzQ2xpZW50OiB7XG4gICAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICAgIGRlZmF1bHQ6IGZhbHNlLFxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGVtcHR5OiB7XG4gICAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICAgIGRlZmF1bHQ6IHRydWUsXG4gICAgICAgIHJlcXVpcmVkOiBmYWxzZVxuICAgICAgfVxuICAgIH0sXG4gICAgY29tcHV0ZWQ6IHtcbiAgICAgIGlzRW1wdHk6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZW1wdHlcbiAgICAgIH0sXG4gICAgICBoYXNFeHBlZGllbnQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZXhwZWRpZW50Lmxlbmd0aCAhPT0gMFxuICAgICAgfVxuICAgIH1cbiAgfVxuPC9zY3JpcHQ+XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gcmVzb3VyY2VzL2Fzc2V0cy9qcy9jb21wb25lbnRzL0V4cGVkaWVudC52dWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}],\"transform-object-rest-spread\"]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/assets/js/components/Expedient.vue\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}],\"transform-object-rest-spread\"]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/assets/js/components/Spinner.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n//\n//\n//\n//\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'spinner'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vcmVzb3VyY2VzL2Fzc2V0cy9qcy9jb21wb25lbnRzL1NwaW5uZXIudnVlPzhjOGQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBS0E7QUFDQTtBQURBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/e1wiY2FjaGVEaXJlY3RvcnlcIjp0cnVlLFwicHJlc2V0c1wiOltbXCJlbnZcIix7XCJtb2R1bGVzXCI6ZmFsc2UsXCJ0YXJnZXRzXCI6e1wiYnJvd3NlcnNcIjpbXCI+IDIlXCJdLFwidWdsaWZ5XCI6dHJ1ZX19XV0sXCJwbHVnaW5zXCI6W1widHJhbnNmb3JtLW9iamVjdC1yZXN0LXNwcmVhZFwiLFtcInRyYW5zZm9ybS1ydW50aW1lXCIse1wicG9seWZpbGxcIjpmYWxzZSxcImhlbHBlcnNcIjpmYWxzZX1dLFwidHJhbnNmb3JtLW9iamVjdC1yZXN0LXNwcmVhZFwiXX0hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zY3JpcHQmaW5kZXg9MCEuL3Jlc291cmNlcy9hc3NldHMvanMvY29tcG9uZW50cy9TcGlubmVyLnZ1ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIjx0ZW1wbGF0ZT5cbiAgPGRpdiBjbGFzcz1cImxvYWRlclwiPkNhcmdhbmRvLi4uPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuICBleHBvcnQgZGVmYXVsdCB7XG4gICAgbmFtZTogJ3NwaW5uZXInLFxuICB9XG48L3NjcmlwdD5cblxuPHN0eWxlPlxuLmxvYWRlcixcbi5sb2FkZXI6YWZ0ZXIge1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIHdpZHRoOiAxMGVtO1xuICBoZWlnaHQ6IDEwZW07XG59XG4ubG9hZGVyIHtcbiAgbWFyZ2luOiA5MHB4IGF1dG8gMzBweDtcbiAgZm9udC1zaXplOiAxMHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRleHQtaW5kZW50OiAtOTk5OWVtO1xuICBib3JkZXItdG9wOiAxLjFlbSBzb2xpZCByZ2JhKDU0LDczLDkzLCAwLjIpO1xuICBib3JkZXItcmlnaHQ6IDEuMWVtIHNvbGlkIHJnYmEoNTQsNzMsOTMsIDAuMik7XG4gIGJvcmRlci1ib3R0b206IDEuMWVtIHNvbGlkIHJnYmEoNTQsNzMsOTMsIDAuMik7XG4gIGJvcmRlci1sZWZ0OiAxLjFlbSBzb2xpZCAjMzY0OTVkO1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbiAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xuICAtd2Via2l0LWFuaW1hdGlvbjogbG9hZDggMS4xcyBpbmZpbml0ZSBsaW5lYXI7XG4gIGFuaW1hdGlvbjogbG9hZDggMS4xcyBpbmZpbml0ZSBsaW5lYXI7XG59XG5ALXdlYmtpdC1rZXlmcmFtZXMgbG9hZDgge1xuICAwJSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgfVxuICAxMDAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcbiAgfVxufVxuQGtleWZyYW1lcyBsb2FkOCB7XG4gIDAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICB9XG4gIDEwMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xuICB9XG59XG48L3N0eWxlPlxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHJlc291cmNlcy9hc3NldHMvanMvY29tcG9uZW50cy9TcGlubmVyLnZ1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}],\"transform-object-rest-spread\"]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/assets/js/components/Spinner.vue\n");

/***/ }),

/***/ "./node_modules/bootstrap-sass/assets/javascripts/bootstrap.js":
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(jQuery) {/*!\n * Bootstrap v3.3.7 (http://getbootstrap.com)\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under the MIT license\n */\n\nif (typeof jQuery === 'undefined') {\n  throw new Error('Bootstrap\\'s JavaScript requires jQuery')\n}\n\n+function ($) {\n  'use strict';\n  var version = $.fn.jquery.split(' ')[0].split('.')\n  if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1) || (version[0] > 3)) {\n    throw new Error('Bootstrap\\'s JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4')\n  }\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: transition.js v3.3.7\n * http://getbootstrap.com/javascript/#transitions\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\n  // ============================================================\n\n  function transitionEnd() {\n    var el = document.createElement('bootstrap')\n\n    var transEndEventNames = {\n      WebkitTransition : 'webkitTransitionEnd',\n      MozTransition    : 'transitionend',\n      OTransition      : 'oTransitionEnd otransitionend',\n      transition       : 'transitionend'\n    }\n\n    for (var name in transEndEventNames) {\n      if (el.style[name] !== undefined) {\n        return { end: transEndEventNames[name] }\n      }\n    }\n\n    return false // explicit for ie8 (  ._.)\n  }\n\n  // http://blog.alexmaccaw.com/css-transitions\n  $.fn.emulateTransitionEnd = function (duration) {\n    var called = false\n    var $el = this\n    $(this).one('bsTransitionEnd', function () { called = true })\n    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }\n    setTimeout(callback, duration)\n    return this\n  }\n\n  $(function () {\n    $.support.transition = transitionEnd()\n\n    if (!$.support.transition) return\n\n    $.event.special.bsTransitionEnd = {\n      bindType: $.support.transition.end,\n      delegateType: $.support.transition.end,\n      handle: function (e) {\n        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\n      }\n    }\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: alert.js v3.3.7\n * http://getbootstrap.com/javascript/#alerts\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // ALERT CLASS DEFINITION\n  // ======================\n\n  var dismiss = '[data-dismiss=\"alert\"]'\n  var Alert   = function (el) {\n    $(el).on('click', dismiss, this.close)\n  }\n\n  Alert.VERSION = '3.3.7'\n\n  Alert.TRANSITION_DURATION = 150\n\n  Alert.prototype.close = function (e) {\n    var $this    = $(this)\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = $(selector === '#' ? [] : selector)\n\n    if (e) e.preventDefault()\n\n    if (!$parent.length) {\n      $parent = $this.closest('.alert')\n    }\n\n    $parent.trigger(e = $.Event('close.bs.alert'))\n\n    if (e.isDefaultPrevented()) return\n\n    $parent.removeClass('in')\n\n    function removeElement() {\n      // detach from parent, fire event then clean up data\n      $parent.detach().trigger('closed.bs.alert').remove()\n    }\n\n    $.support.transition && $parent.hasClass('fade') ?\n      $parent\n        .one('bsTransitionEnd', removeElement)\n        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :\n      removeElement()\n  }\n\n\n  // ALERT PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.alert')\n\n      if (!data) $this.data('bs.alert', (data = new Alert(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.alert\n\n  $.fn.alert             = Plugin\n  $.fn.alert.Constructor = Alert\n\n\n  // ALERT NO CONFLICT\n  // =================\n\n  $.fn.alert.noConflict = function () {\n    $.fn.alert = old\n    return this\n  }\n\n\n  // ALERT DATA-API\n  // ==============\n\n  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: button.js v3.3.7\n * http://getbootstrap.com/javascript/#buttons\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // BUTTON PUBLIC CLASS DEFINITION\n  // ==============================\n\n  var Button = function (element, options) {\n    this.$element  = $(element)\n    this.options   = $.extend({}, Button.DEFAULTS, options)\n    this.isLoading = false\n  }\n\n  Button.VERSION  = '3.3.7'\n\n  Button.DEFAULTS = {\n    loadingText: 'loading...'\n  }\n\n  Button.prototype.setState = function (state) {\n    var d    = 'disabled'\n    var $el  = this.$element\n    var val  = $el.is('input') ? 'val' : 'html'\n    var data = $el.data()\n\n    state += 'Text'\n\n    if (data.resetText == null) $el.data('resetText', $el[val]())\n\n    // push to event loop to allow forms to submit\n    setTimeout($.proxy(function () {\n      $el[val](data[state] == null ? this.options[state] : data[state])\n\n      if (state == 'loadingText') {\n        this.isLoading = true\n        $el.addClass(d).attr(d, d).prop(d, true)\n      } else if (this.isLoading) {\n        this.isLoading = false\n        $el.removeClass(d).removeAttr(d).prop(d, false)\n      }\n    }, this), 0)\n  }\n\n  Button.prototype.toggle = function () {\n    var changed = true\n    var $parent = this.$element.closest('[data-toggle=\"buttons\"]')\n\n    if ($parent.length) {\n      var $input = this.$element.find('input')\n      if ($input.prop('type') == 'radio') {\n        if ($input.prop('checked')) changed = false\n        $parent.find('.active').removeClass('active')\n        this.$element.addClass('active')\n      } else if ($input.prop('type') == 'checkbox') {\n        if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false\n        this.$element.toggleClass('active')\n      }\n      $input.prop('checked', this.$element.hasClass('active'))\n      if (changed) $input.trigger('change')\n    } else {\n      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))\n      this.$element.toggleClass('active')\n    }\n  }\n\n\n  // BUTTON PLUGIN DEFINITION\n  // ========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.button')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.button', (data = new Button(this, options)))\n\n      if (option == 'toggle') data.toggle()\n      else if (option) data.setState(option)\n    })\n  }\n\n  var old = $.fn.button\n\n  $.fn.button             = Plugin\n  $.fn.button.Constructor = Button\n\n\n  // BUTTON NO CONFLICT\n  // ==================\n\n  $.fn.button.noConflict = function () {\n    $.fn.button = old\n    return this\n  }\n\n\n  // BUTTON DATA-API\n  // ===============\n\n  $(document)\n    .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      var $btn = $(e.target).closest('.btn')\n      Plugin.call($btn, 'toggle')\n      if (!($(e.target).is('input[type=\"radio\"], input[type=\"checkbox\"]'))) {\n        // Prevent double click on radios, and the double selections (so cancellation) on checkboxes\n        e.preventDefault()\n        // The target component still receive the focus\n        if ($btn.is('input,button')) $btn.trigger('focus')\n        else $btn.find('input:visible,button:visible').first().trigger('focus')\n      }\n    })\n    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))\n    })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: carousel.js v3.3.7\n * http://getbootstrap.com/javascript/#carousel\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CAROUSEL CLASS DEFINITION\n  // =========================\n\n  var Carousel = function (element, options) {\n    this.$element    = $(element)\n    this.$indicators = this.$element.find('.carousel-indicators')\n    this.options     = options\n    this.paused      = null\n    this.sliding     = null\n    this.interval    = null\n    this.$active     = null\n    this.$items      = null\n\n    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))\n\n    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element\n      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))\n      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))\n  }\n\n  Carousel.VERSION  = '3.3.7'\n\n  Carousel.TRANSITION_DURATION = 600\n\n  Carousel.DEFAULTS = {\n    interval: 5000,\n    pause: 'hover',\n    wrap: true,\n    keyboard: true\n  }\n\n  Carousel.prototype.keydown = function (e) {\n    if (/input|textarea/i.test(e.target.tagName)) return\n    switch (e.which) {\n      case 37: this.prev(); break\n      case 39: this.next(); break\n      default: return\n    }\n\n    e.preventDefault()\n  }\n\n  Carousel.prototype.cycle = function (e) {\n    e || (this.paused = false)\n\n    this.interval && clearInterval(this.interval)\n\n    this.options.interval\n      && !this.paused\n      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))\n\n    return this\n  }\n\n  Carousel.prototype.getItemIndex = function (item) {\n    this.$items = item.parent().children('.item')\n    return this.$items.index(item || this.$active)\n  }\n\n  Carousel.prototype.getItemForDirection = function (direction, active) {\n    var activeIndex = this.getItemIndex(active)\n    var willWrap = (direction == 'prev' && activeIndex === 0)\n                || (direction == 'next' && activeIndex == (this.$items.length - 1))\n    if (willWrap && !this.options.wrap) return active\n    var delta = direction == 'prev' ? -1 : 1\n    var itemIndex = (activeIndex + delta) % this.$items.length\n    return this.$items.eq(itemIndex)\n  }\n\n  Carousel.prototype.to = function (pos) {\n    var that        = this\n    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))\n\n    if (pos > (this.$items.length - 1) || pos < 0) return\n\n    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, \"slid\"\n    if (activeIndex == pos) return this.pause().cycle()\n\n    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))\n  }\n\n  Carousel.prototype.pause = function (e) {\n    e || (this.paused = true)\n\n    if (this.$element.find('.next, .prev').length && $.support.transition) {\n      this.$element.trigger($.support.transition.end)\n      this.cycle(true)\n    }\n\n    this.interval = clearInterval(this.interval)\n\n    return this\n  }\n\n  Carousel.prototype.next = function () {\n    if (this.sliding) return\n    return this.slide('next')\n  }\n\n  Carousel.prototype.prev = function () {\n    if (this.sliding) return\n    return this.slide('prev')\n  }\n\n  Carousel.prototype.slide = function (type, next) {\n    var $active   = this.$element.find('.item.active')\n    var $next     = next || this.getItemForDirection(type, $active)\n    var isCycling = this.interval\n    var direction = type == 'next' ? 'left' : 'right'\n    var that      = this\n\n    if ($next.hasClass('active')) return (this.sliding = false)\n\n    var relatedTarget = $next[0]\n    var slideEvent = $.Event('slide.bs.carousel', {\n      relatedTarget: relatedTarget,\n      direction: direction\n    })\n    this.$element.trigger(slideEvent)\n    if (slideEvent.isDefaultPrevented()) return\n\n    this.sliding = true\n\n    isCycling && this.pause()\n\n    if (this.$indicators.length) {\n      this.$indicators.find('.active').removeClass('active')\n      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])\n      $nextIndicator && $nextIndicator.addClass('active')\n    }\n\n    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\"\n    if ($.support.transition && this.$element.hasClass('slide')) {\n      $next.addClass(type)\n      $next[0].offsetWidth // force reflow\n      $active.addClass(direction)\n      $next.addClass(direction)\n      $active\n        .one('bsTransitionEnd', function () {\n          $next.removeClass([type, direction].join(' ')).addClass('active')\n          $active.removeClass(['active', direction].join(' '))\n          that.sliding = false\n          setTimeout(function () {\n            that.$element.trigger(slidEvent)\n          }, 0)\n        })\n        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)\n    } else {\n      $active.removeClass('active')\n      $next.addClass('active')\n      this.sliding = false\n      this.$element.trigger(slidEvent)\n    }\n\n    isCycling && this.cycle()\n\n    return this\n  }\n\n\n  // CAROUSEL PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.carousel')\n      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)\n      var action  = typeof option == 'string' ? option : options.slide\n\n      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))\n      if (typeof option == 'number') data.to(option)\n      else if (action) data[action]()\n      else if (options.interval) data.pause().cycle()\n    })\n  }\n\n  var old = $.fn.carousel\n\n  $.fn.carousel             = Plugin\n  $.fn.carousel.Constructor = Carousel\n\n\n  // CAROUSEL NO CONFLICT\n  // ====================\n\n  $.fn.carousel.noConflict = function () {\n    $.fn.carousel = old\n    return this\n  }\n\n\n  // CAROUSEL DATA-API\n  // =================\n\n  var clickHandler = function (e) {\n    var href\n    var $this   = $(this)\n    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) // strip for ie7\n    if (!$target.hasClass('carousel')) return\n    var options = $.extend({}, $target.data(), $this.data())\n    var slideIndex = $this.attr('data-slide-to')\n    if (slideIndex) options.interval = false\n\n    Plugin.call($target, options)\n\n    if (slideIndex) {\n      $target.data('bs.carousel').to(slideIndex)\n    }\n\n    e.preventDefault()\n  }\n\n  $(document)\n    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)\n    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)\n\n  $(window).on('load', function () {\n    $('[data-ride=\"carousel\"]').each(function () {\n      var $carousel = $(this)\n      Plugin.call($carousel, $carousel.data())\n    })\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: collapse.js v3.3.7\n * http://getbootstrap.com/javascript/#collapse\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n/* jshint latedef: false */\n\n+function ($) {\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse = function (element, options) {\n    this.$element      = $(element)\n    this.options       = $.extend({}, Collapse.DEFAULTS, options)\n    this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' +\n                           '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')\n    this.transitioning = null\n\n    if (this.options.parent) {\n      this.$parent = this.getParent()\n    } else {\n      this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n    }\n\n    if (this.options.toggle) this.toggle()\n  }\n\n  Collapse.VERSION  = '3.3.7'\n\n  Collapse.TRANSITION_DURATION = 350\n\n  Collapse.DEFAULTS = {\n    toggle: true\n  }\n\n  Collapse.prototype.dimension = function () {\n    var hasWidth = this.$element.hasClass('width')\n    return hasWidth ? 'width' : 'height'\n  }\n\n  Collapse.prototype.show = function () {\n    if (this.transitioning || this.$element.hasClass('in')) return\n\n    var activesData\n    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\n\n    if (actives && actives.length) {\n      activesData = actives.data('bs.collapse')\n      if (activesData && activesData.transitioning) return\n    }\n\n    var startEvent = $.Event('show.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    if (actives && actives.length) {\n      Plugin.call(actives, 'hide')\n      activesData || actives.data('bs.collapse', null)\n    }\n\n    var dimension = this.dimension()\n\n    this.$element\n      .removeClass('collapse')\n      .addClass('collapsing')[dimension](0)\n      .attr('aria-expanded', true)\n\n    this.$trigger\n      .removeClass('collapsed')\n      .attr('aria-expanded', true)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse in')[dimension]('')\n      this.transitioning = 0\n      this.$element\n        .trigger('shown.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    var scrollSize = $.camelCase(['scroll', dimension].join('-'))\n\n    this.$element\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])\n  }\n\n  Collapse.prototype.hide = function () {\n    if (this.transitioning || !this.$element.hasClass('in')) return\n\n    var startEvent = $.Event('hide.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    var dimension = this.dimension()\n\n    this.$element[dimension](this.$element[dimension]())[0].offsetHeight\n\n    this.$element\n      .addClass('collapsing')\n      .removeClass('collapse in')\n      .attr('aria-expanded', false)\n\n    this.$trigger\n      .addClass('collapsed')\n      .attr('aria-expanded', false)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.transitioning = 0\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse')\n        .trigger('hidden.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    this.$element\n      [dimension](0)\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n  }\n\n  Collapse.prototype.toggle = function () {\n    this[this.$element.hasClass('in') ? 'hide' : 'show']()\n  }\n\n  Collapse.prototype.getParent = function () {\n    return $(this.options.parent)\n      .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n      .each($.proxy(function (i, element) {\n        var $element = $(element)\n        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n      }, this))\n      .end()\n  }\n\n  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {\n    var isOpen = $element.hasClass('in')\n\n    $element.attr('aria-expanded', isOpen)\n    $trigger\n      .toggleClass('collapsed', !isOpen)\n      .attr('aria-expanded', isOpen)\n  }\n\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n\n\n  // COLLAPSE PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.collapse')\n      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.collapse\n\n  $.fn.collapse             = Plugin\n  $.fn.collapse.Constructor = Collapse\n\n\n  // COLLAPSE NO CONFLICT\n  // ====================\n\n  $.fn.collapse.noConflict = function () {\n    $.fn.collapse = old\n    return this\n  }\n\n\n  // COLLAPSE DATA-API\n  // =================\n\n  $(document).on('click.bs.collapse.data-api', '[data-toggle=\"collapse\"]', function (e) {\n    var $this   = $(this)\n\n    if (!$this.attr('data-target')) e.preventDefault()\n\n    var $target = getTargetFromTrigger($this)\n    var data    = $target.data('bs.collapse')\n    var option  = data ? 'toggle' : $this.data()\n\n    Plugin.call($target, option)\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: dropdown.js v3.3.7\n * http://getbootstrap.com/javascript/#dropdowns\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // DROPDOWN CLASS DEFINITION\n  // =========================\n\n  var backdrop = '.dropdown-backdrop'\n  var toggle   = '[data-toggle=\"dropdown\"]'\n  var Dropdown = function (element) {\n    $(element).on('click.bs.dropdown', this.toggle)\n  }\n\n  Dropdown.VERSION = '3.3.7'\n\n  function getParent($this) {\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = selector && $(selector)\n\n    return $parent && $parent.length ? $parent : $this.parent()\n  }\n\n  function clearMenus(e) {\n    if (e && e.which === 3) return\n    $(backdrop).remove()\n    $(toggle).each(function () {\n      var $this         = $(this)\n      var $parent       = getParent($this)\n      var relatedTarget = { relatedTarget: this }\n\n      if (!$parent.hasClass('open')) return\n\n      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return\n\n      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this.attr('aria-expanded', 'false')\n      $parent.removeClass('open').trigger($.Event('hidden.bs.dropdown', relatedTarget))\n    })\n  }\n\n  Dropdown.prototype.toggle = function (e) {\n    var $this = $(this)\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    clearMenus()\n\n    if (!isActive) {\n      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n        // if mobile we use a backdrop because click events don't delegate\n        $(document.createElement('div'))\n          .addClass('dropdown-backdrop')\n          .insertAfter($(this))\n          .on('click', clearMenus)\n      }\n\n      var relatedTarget = { relatedTarget: this }\n      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this\n        .trigger('focus')\n        .attr('aria-expanded', 'true')\n\n      $parent\n        .toggleClass('open')\n        .trigger($.Event('shown.bs.dropdown', relatedTarget))\n    }\n\n    return false\n  }\n\n  Dropdown.prototype.keydown = function (e) {\n    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return\n\n    var $this = $(this)\n\n    e.preventDefault()\n    e.stopPropagation()\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    if (!isActive && e.which != 27 || isActive && e.which == 27) {\n      if (e.which == 27) $parent.find(toggle).trigger('focus')\n      return $this.trigger('click')\n    }\n\n    var desc = ' li:not(.disabled):visible a'\n    var $items = $parent.find('.dropdown-menu' + desc)\n\n    if (!$items.length) return\n\n    var index = $items.index(e.target)\n\n    if (e.which == 38 && index > 0)                 index--         // up\n    if (e.which == 40 && index < $items.length - 1) index++         // down\n    if (!~index)                                    index = 0\n\n    $items.eq(index).trigger('focus')\n  }\n\n\n  // DROPDOWN PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.dropdown')\n\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.dropdown\n\n  $.fn.dropdown             = Plugin\n  $.fn.dropdown.Constructor = Dropdown\n\n\n  // DROPDOWN NO CONFLICT\n  // ====================\n\n  $.fn.dropdown.noConflict = function () {\n    $.fn.dropdown = old\n    return this\n  }\n\n\n  // APPLY TO STANDARD DROPDOWN ELEMENTS\n  // ===================================\n\n  $(document)\n    .on('click.bs.dropdown.data-api', clearMenus)\n    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })\n    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\n    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)\n    .on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown)\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: modal.js v3.3.7\n * http://getbootstrap.com/javascript/#modals\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // MODAL CLASS DEFINITION\n  // ======================\n\n  var Modal = function (element, options) {\n    this.options             = options\n    this.$body               = $(document.body)\n    this.$element            = $(element)\n    this.$dialog             = this.$element.find('.modal-dialog')\n    this.$backdrop           = null\n    this.isShown             = null\n    this.originalBodyPad     = null\n    this.scrollbarWidth      = 0\n    this.ignoreBackdropClick = false\n\n    if (this.options.remote) {\n      this.$element\n        .find('.modal-content')\n        .load(this.options.remote, $.proxy(function () {\n          this.$element.trigger('loaded.bs.modal')\n        }, this))\n    }\n  }\n\n  Modal.VERSION  = '3.3.7'\n\n  Modal.TRANSITION_DURATION = 300\n  Modal.BACKDROP_TRANSITION_DURATION = 150\n\n  Modal.DEFAULTS = {\n    backdrop: true,\n    keyboard: true,\n    show: true\n  }\n\n  Modal.prototype.toggle = function (_relatedTarget) {\n    return this.isShown ? this.hide() : this.show(_relatedTarget)\n  }\n\n  Modal.prototype.show = function (_relatedTarget) {\n    var that = this\n    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })\n\n    this.$element.trigger(e)\n\n    if (this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = true\n\n    this.checkScrollbar()\n    this.setScrollbar()\n    this.$body.addClass('modal-open')\n\n    this.escape()\n    this.resize()\n\n    this.$element.on('click.dismiss.bs.modal', '[data-dismiss=\"modal\"]', $.proxy(this.hide, this))\n\n    this.$dialog.on('mousedown.dismiss.bs.modal', function () {\n      that.$element.one('mouseup.dismiss.bs.modal', function (e) {\n        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true\n      })\n    })\n\n    this.backdrop(function () {\n      var transition = $.support.transition && that.$element.hasClass('fade')\n\n      if (!that.$element.parent().length) {\n        that.$element.appendTo(that.$body) // don't move modals dom position\n      }\n\n      that.$element\n        .show()\n        .scrollTop(0)\n\n      that.adjustDialog()\n\n      if (transition) {\n        that.$element[0].offsetWidth // force reflow\n      }\n\n      that.$element.addClass('in')\n\n      that.enforceFocus()\n\n      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })\n\n      transition ?\n        that.$dialog // wait for modal to slide in\n          .one('bsTransitionEnd', function () {\n            that.$element.trigger('focus').trigger(e)\n          })\n          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n        that.$element.trigger('focus').trigger(e)\n    })\n  }\n\n  Modal.prototype.hide = function (e) {\n    if (e) e.preventDefault()\n\n    e = $.Event('hide.bs.modal')\n\n    this.$element.trigger(e)\n\n    if (!this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = false\n\n    this.escape()\n    this.resize()\n\n    $(document).off('focusin.bs.modal')\n\n    this.$element\n      .removeClass('in')\n      .off('click.dismiss.bs.modal')\n      .off('mouseup.dismiss.bs.modal')\n\n    this.$dialog.off('mousedown.dismiss.bs.modal')\n\n    $.support.transition && this.$element.hasClass('fade') ?\n      this.$element\n        .one('bsTransitionEnd', $.proxy(this.hideModal, this))\n        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n      this.hideModal()\n  }\n\n  Modal.prototype.enforceFocus = function () {\n    $(document)\n      .off('focusin.bs.modal') // guard against infinite focus loop\n      .on('focusin.bs.modal', $.proxy(function (e) {\n        if (document !== e.target &&\n            this.$element[0] !== e.target &&\n            !this.$element.has(e.target).length) {\n          this.$element.trigger('focus')\n        }\n      }, this))\n  }\n\n  Modal.prototype.escape = function () {\n    if (this.isShown && this.options.keyboard) {\n      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {\n        e.which == 27 && this.hide()\n      }, this))\n    } else if (!this.isShown) {\n      this.$element.off('keydown.dismiss.bs.modal')\n    }\n  }\n\n  Modal.prototype.resize = function () {\n    if (this.isShown) {\n      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))\n    } else {\n      $(window).off('resize.bs.modal')\n    }\n  }\n\n  Modal.prototype.hideModal = function () {\n    var that = this\n    this.$element.hide()\n    this.backdrop(function () {\n      that.$body.removeClass('modal-open')\n      that.resetAdjustments()\n      that.resetScrollbar()\n      that.$element.trigger('hidden.bs.modal')\n    })\n  }\n\n  Modal.prototype.removeBackdrop = function () {\n    this.$backdrop && this.$backdrop.remove()\n    this.$backdrop = null\n  }\n\n  Modal.prototype.backdrop = function (callback) {\n    var that = this\n    var animate = this.$element.hasClass('fade') ? 'fade' : ''\n\n    if (this.isShown && this.options.backdrop) {\n      var doAnimate = $.support.transition && animate\n\n      this.$backdrop = $(document.createElement('div'))\n        .addClass('modal-backdrop ' + animate)\n        .appendTo(this.$body)\n\n      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {\n        if (this.ignoreBackdropClick) {\n          this.ignoreBackdropClick = false\n          return\n        }\n        if (e.target !== e.currentTarget) return\n        this.options.backdrop == 'static'\n          ? this.$element[0].focus()\n          : this.hide()\n      }, this))\n\n      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow\n\n      this.$backdrop.addClass('in')\n\n      if (!callback) return\n\n      doAnimate ?\n        this.$backdrop\n          .one('bsTransitionEnd', callback)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callback()\n\n    } else if (!this.isShown && this.$backdrop) {\n      this.$backdrop.removeClass('in')\n\n      var callbackRemove = function () {\n        that.removeBackdrop()\n        callback && callback()\n      }\n      $.support.transition && this.$element.hasClass('fade') ?\n        this.$backdrop\n          .one('bsTransitionEnd', callbackRemove)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callbackRemove()\n\n    } else if (callback) {\n      callback()\n    }\n  }\n\n  // these following methods are used to handle overflowing modals\n\n  Modal.prototype.handleUpdate = function () {\n    this.adjustDialog()\n  }\n\n  Modal.prototype.adjustDialog = function () {\n    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight\n\n    this.$element.css({\n      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',\n      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''\n    })\n  }\n\n  Modal.prototype.resetAdjustments = function () {\n    this.$element.css({\n      paddingLeft: '',\n      paddingRight: ''\n    })\n  }\n\n  Modal.prototype.checkScrollbar = function () {\n    var fullWindowWidth = window.innerWidth\n    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\n      var documentElementRect = document.documentElement.getBoundingClientRect()\n      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)\n    }\n    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth\n    this.scrollbarWidth = this.measureScrollbar()\n  }\n\n  Modal.prototype.setScrollbar = function () {\n    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)\n    this.originalBodyPad = document.body.style.paddingRight || ''\n    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)\n  }\n\n  Modal.prototype.resetScrollbar = function () {\n    this.$body.css('padding-right', this.originalBodyPad)\n  }\n\n  Modal.prototype.measureScrollbar = function () { // thx walsh\n    var scrollDiv = document.createElement('div')\n    scrollDiv.className = 'modal-scrollbar-measure'\n    this.$body.append(scrollDiv)\n    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth\n    this.$body[0].removeChild(scrollDiv)\n    return scrollbarWidth\n  }\n\n\n  // MODAL PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option, _relatedTarget) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.modal')\n      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))\n      if (typeof option == 'string') data[option](_relatedTarget)\n      else if (options.show) data.show(_relatedTarget)\n    })\n  }\n\n  var old = $.fn.modal\n\n  $.fn.modal             = Plugin\n  $.fn.modal.Constructor = Modal\n\n\n  // MODAL NO CONFLICT\n  // =================\n\n  $.fn.modal.noConflict = function () {\n    $.fn.modal = old\n    return this\n  }\n\n\n  // MODAL DATA-API\n  // ==============\n\n  $(document).on('click.bs.modal.data-api', '[data-toggle=\"modal\"]', function (e) {\n    var $this   = $(this)\n    var href    = $this.attr('href')\n    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) // strip for ie7\n    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())\n\n    if ($this.is('a')) e.preventDefault()\n\n    $target.one('show.bs.modal', function (showEvent) {\n      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown\n      $target.one('hidden.bs.modal', function () {\n        $this.is(':visible') && $this.trigger('focus')\n      })\n    })\n    Plugin.call($target, option, this)\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: tooltip.js v3.3.7\n * http://getbootstrap.com/javascript/#tooltip\n * Inspired by the original jQuery.tipsy by Jason Frame\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TOOLTIP PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Tooltip = function (element, options) {\n    this.type       = null\n    this.options    = null\n    this.enabled    = null\n    this.timeout    = null\n    this.hoverState = null\n    this.$element   = null\n    this.inState    = null\n\n    this.init('tooltip', element, options)\n  }\n\n  Tooltip.VERSION  = '3.3.7'\n\n  Tooltip.TRANSITION_DURATION = 150\n\n  Tooltip.DEFAULTS = {\n    animation: true,\n    placement: 'top',\n    selector: false,\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',\n    title: '',\n    delay: 0,\n    html: false,\n    container: false,\n    viewport: {\n      selector: 'body',\n      padding: 0\n    }\n  }\n\n  Tooltip.prototype.init = function (type, element, options) {\n    this.enabled   = true\n    this.type      = type\n    this.$element  = $(element)\n    this.options   = this.getOptions(options)\n    this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))\n    this.inState   = { click: false, hover: false, focus: false }\n\n    if (this.$element[0] instanceof document.constructor && !this.options.selector) {\n      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')\n    }\n\n    var triggers = this.options.trigger.split(' ')\n\n    for (var i = triggers.length; i--;) {\n      var trigger = triggers[i]\n\n      if (trigger == 'click') {\n        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n      } else if (trigger != 'manual') {\n        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\n        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\n\n        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n      }\n    }\n\n    this.options.selector ?\n      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n      this.fixTitle()\n  }\n\n  Tooltip.prototype.getDefaults = function () {\n    return Tooltip.DEFAULTS\n  }\n\n  Tooltip.prototype.getOptions = function (options) {\n    options = $.extend({}, this.getDefaults(), this.$element.data(), options)\n\n    if (options.delay && typeof options.delay == 'number') {\n      options.delay = {\n        show: options.delay,\n        hide: options.delay\n      }\n    }\n\n    return options\n  }\n\n  Tooltip.prototype.getDelegateOptions = function () {\n    var options  = {}\n    var defaults = this.getDefaults()\n\n    this._options && $.each(this._options, function (key, value) {\n      if (defaults[key] != value) options[key] = value\n    })\n\n    return options\n  }\n\n  Tooltip.prototype.enter = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true\n    }\n\n    if (self.tip().hasClass('in') || self.hoverState == 'in') {\n      self.hoverState = 'in'\n      return\n    }\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'in'\n\n    if (!self.options.delay || !self.options.delay.show) return self.show()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'in') self.show()\n    }, self.options.delay.show)\n  }\n\n  Tooltip.prototype.isInStateTrue = function () {\n    for (var key in this.inState) {\n      if (this.inState[key]) return true\n    }\n\n    return false\n  }\n\n  Tooltip.prototype.leave = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false\n    }\n\n    if (self.isInStateTrue()) return\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'out'\n\n    if (!self.options.delay || !self.options.delay.hide) return self.hide()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'out') self.hide()\n    }, self.options.delay.hide)\n  }\n\n  Tooltip.prototype.show = function () {\n    var e = $.Event('show.bs.' + this.type)\n\n    if (this.hasContent() && this.enabled) {\n      this.$element.trigger(e)\n\n      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])\n      if (e.isDefaultPrevented() || !inDom) return\n      var that = this\n\n      var $tip = this.tip()\n\n      var tipId = this.getUID(this.type)\n\n      this.setContent()\n      $tip.attr('id', tipId)\n      this.$element.attr('aria-describedby', tipId)\n\n      if (this.options.animation) $tip.addClass('fade')\n\n      var placement = typeof this.options.placement == 'function' ?\n        this.options.placement.call(this, $tip[0], this.$element[0]) :\n        this.options.placement\n\n      var autoToken = /\\s?auto?\\s?/i\n      var autoPlace = autoToken.test(placement)\n      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\n\n      $tip\n        .detach()\n        .css({ top: 0, left: 0, display: 'block' })\n        .addClass(placement)\n        .data('bs.' + this.type, this)\n\n      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n      this.$element.trigger('inserted.bs.' + this.type)\n\n      var pos          = this.getPosition()\n      var actualWidth  = $tip[0].offsetWidth\n      var actualHeight = $tip[0].offsetHeight\n\n      if (autoPlace) {\n        var orgPlacement = placement\n        var viewportDim = this.getPosition(this.$viewport)\n\n        placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :\n                    placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :\n                    placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :\n                    placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :\n                    placement\n\n        $tip\n          .removeClass(orgPlacement)\n          .addClass(placement)\n      }\n\n      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\n\n      this.applyPlacement(calculatedOffset, placement)\n\n      var complete = function () {\n        var prevHoverState = that.hoverState\n        that.$element.trigger('shown.bs.' + that.type)\n        that.hoverState = null\n\n        if (prevHoverState == 'out') that.leave(that)\n      }\n\n      $.support.transition && this.$tip.hasClass('fade') ?\n        $tip\n          .one('bsTransitionEnd', complete)\n          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n        complete()\n    }\n  }\n\n  Tooltip.prototype.applyPlacement = function (offset, placement) {\n    var $tip   = this.tip()\n    var width  = $tip[0].offsetWidth\n    var height = $tip[0].offsetHeight\n\n    // manually read margins because getBoundingClientRect includes difference\n    var marginTop = parseInt($tip.css('margin-top'), 10)\n    var marginLeft = parseInt($tip.css('margin-left'), 10)\n\n    // we must check for NaN for ie 8/9\n    if (isNaN(marginTop))  marginTop  = 0\n    if (isNaN(marginLeft)) marginLeft = 0\n\n    offset.top  += marginTop\n    offset.left += marginLeft\n\n    // $.fn.offset doesn't round pixel values\n    // so we use setOffset directly with our own function B-0\n    $.offset.setOffset($tip[0], $.extend({\n      using: function (props) {\n        $tip.css({\n          top: Math.round(props.top),\n          left: Math.round(props.left)\n        })\n      }\n    }, offset), 0)\n\n    $tip.addClass('in')\n\n    // check to see if placing tip in new offset caused the tip to resize itself\n    var actualWidth  = $tip[0].offsetWidth\n    var actualHeight = $tip[0].offsetHeight\n\n    if (placement == 'top' && actualHeight != height) {\n      offset.top = offset.top + height - actualHeight\n    }\n\n    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\n\n    if (delta.left) offset.left += delta.left\n    else offset.top += delta.top\n\n    var isVertical          = /top|bottom/.test(placement)\n    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\n\n    $tip.offset(offset)\n    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\n  }\n\n  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {\n    this.arrow()\n      .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n      .css(isVertical ? 'top' : 'left', '')\n  }\n\n  Tooltip.prototype.setContent = function () {\n    var $tip  = this.tip()\n    var title = this.getTitle()\n\n    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n    $tip.removeClass('fade in top bottom left right')\n  }\n\n  Tooltip.prototype.hide = function (callback) {\n    var that = this\n    var $tip = $(this.$tip)\n    var e    = $.Event('hide.bs.' + this.type)\n\n    function complete() {\n      if (that.hoverState != 'in') $tip.detach()\n      if (that.$element) { // TODO: Check whether guarding this code with this `if` is really necessary.\n        that.$element\n          .removeAttr('aria-describedby')\n          .trigger('hidden.bs.' + that.type)\n      }\n      callback && callback()\n    }\n\n    this.$element.trigger(e)\n\n    if (e.isDefaultPrevented()) return\n\n    $tip.removeClass('in')\n\n    $.support.transition && $tip.hasClass('fade') ?\n      $tip\n        .one('bsTransitionEnd', complete)\n        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n      complete()\n\n    this.hoverState = null\n\n    return this\n  }\n\n  Tooltip.prototype.fixTitle = function () {\n    var $e = this.$element\n    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {\n      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n    }\n  }\n\n  Tooltip.prototype.hasContent = function () {\n    return this.getTitle()\n  }\n\n  Tooltip.prototype.getPosition = function ($element) {\n    $element   = $element || this.$element\n\n    var el     = $element[0]\n    var isBody = el.tagName == 'BODY'\n\n    var elRect    = el.getBoundingClientRect()\n    if (elRect.width == null) {\n      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })\n    }\n    var isSvg = window.SVGElement && el instanceof window.SVGElement\n    // Avoid using $.offset() on SVGs since it gives incorrect results in jQuery 3.\n    // See https://github.com/twbs/bootstrap/issues/20280\n    var elOffset  = isBody ? { top: 0, left: 0 } : (isSvg ? null : $element.offset())\n    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\n    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null\n\n    return $.extend({}, elRect, scroll, outerDims, elOffset)\n  }\n\n  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }\n\n  }\n\n  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n    var delta = { top: 0, left: 0 }\n    if (!this.$viewport) return delta\n\n    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\n    var viewportDimensions = this.getPosition(this.$viewport)\n\n    if (/right|left/.test(placement)) {\n      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\n      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\n      if (topEdgeOffset < viewportDimensions.top) { // top overflow\n        delta.top = viewportDimensions.top - topEdgeOffset\n      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\n      }\n    } else {\n      var leftEdgeOffset  = pos.left - viewportPadding\n      var rightEdgeOffset = pos.left + viewportPadding + actualWidth\n      if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n        delta.left = viewportDimensions.left - leftEdgeOffset\n      } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\n      }\n    }\n\n    return delta\n  }\n\n  Tooltip.prototype.getTitle = function () {\n    var title\n    var $e = this.$element\n    var o  = this.options\n\n    title = $e.attr('data-original-title')\n      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n\n    return title\n  }\n\n  Tooltip.prototype.getUID = function (prefix) {\n    do prefix += ~~(Math.random() * 1000000)\n    while (document.getElementById(prefix))\n    return prefix\n  }\n\n  Tooltip.prototype.tip = function () {\n    if (!this.$tip) {\n      this.$tip = $(this.options.template)\n      if (this.$tip.length != 1) {\n        throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')\n      }\n    }\n    return this.$tip\n  }\n\n  Tooltip.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\n  }\n\n  Tooltip.prototype.enable = function () {\n    this.enabled = true\n  }\n\n  Tooltip.prototype.disable = function () {\n    this.enabled = false\n  }\n\n  Tooltip.prototype.toggleEnabled = function () {\n    this.enabled = !this.enabled\n  }\n\n  Tooltip.prototype.toggle = function (e) {\n    var self = this\n    if (e) {\n      self = $(e.currentTarget).data('bs.' + this.type)\n      if (!self) {\n        self = new this.constructor(e.currentTarget, this.getDelegateOptions())\n        $(e.currentTarget).data('bs.' + this.type, self)\n      }\n    }\n\n    if (e) {\n      self.inState.click = !self.inState.click\n      if (self.isInStateTrue()) self.enter(self)\n      else self.leave(self)\n    } else {\n      self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\n    }\n  }\n\n  Tooltip.prototype.destroy = function () {\n    var that = this\n    clearTimeout(this.timeout)\n    this.hide(function () {\n      that.$element.off('.' + that.type).removeData('bs.' + that.type)\n      if (that.$tip) {\n        that.$tip.detach()\n      }\n      that.$tip = null\n      that.$arrow = null\n      that.$viewport = null\n      that.$element = null\n    })\n  }\n\n\n  // TOOLTIP PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.tooltip')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tooltip\n\n  $.fn.tooltip             = Plugin\n  $.fn.tooltip.Constructor = Tooltip\n\n\n  // TOOLTIP NO CONFLICT\n  // ===================\n\n  $.fn.tooltip.noConflict = function () {\n    $.fn.tooltip = old\n    return this\n  }\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: popover.js v3.3.7\n * http://getbootstrap.com/javascript/#popovers\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // POPOVER PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Popover = function (element, options) {\n    this.init('popover', element, options)\n  }\n\n  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')\n\n  Popover.VERSION  = '3.3.7'\n\n  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {\n    placement: 'right',\n    trigger: 'click',\n    content: '',\n    template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n  })\n\n\n  // NOTE: POPOVER EXTENDS tooltip.js\n  // ================================\n\n  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)\n\n  Popover.prototype.constructor = Popover\n\n  Popover.prototype.getDefaults = function () {\n    return Popover.DEFAULTS\n  }\n\n  Popover.prototype.setContent = function () {\n    var $tip    = this.tip()\n    var title   = this.getTitle()\n    var content = this.getContent()\n\n    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)\n    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events\n      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'\n    ](content)\n\n    $tip.removeClass('fade top bottom left right in')\n\n    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n    // this manually by checking the contents.\n    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()\n  }\n\n  Popover.prototype.hasContent = function () {\n    return this.getTitle() || this.getContent()\n  }\n\n  Popover.prototype.getContent = function () {\n    var $e = this.$element\n    var o  = this.options\n\n    return $e.attr('data-content')\n      || (typeof o.content == 'function' ?\n            o.content.call($e[0]) :\n            o.content)\n  }\n\n  Popover.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))\n  }\n\n\n  // POPOVER PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.popover')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.popover\n\n  $.fn.popover             = Plugin\n  $.fn.popover.Constructor = Popover\n\n\n  // POPOVER NO CONFLICT\n  // ===================\n\n  $.fn.popover.noConflict = function () {\n    $.fn.popover = old\n    return this\n  }\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: scrollspy.js v3.3.7\n * http://getbootstrap.com/javascript/#scrollspy\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // SCROLLSPY CLASS DEFINITION\n  // ==========================\n\n  function ScrollSpy(element, options) {\n    this.$body          = $(document.body)\n    this.$scrollElement = $(element).is(document.body) ? $(window) : $(element)\n    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)\n    this.selector       = (this.options.target || '') + ' .nav li > a'\n    this.offsets        = []\n    this.targets        = []\n    this.activeTarget   = null\n    this.scrollHeight   = 0\n\n    this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this))\n    this.refresh()\n    this.process()\n  }\n\n  ScrollSpy.VERSION  = '3.3.7'\n\n  ScrollSpy.DEFAULTS = {\n    offset: 10\n  }\n\n  ScrollSpy.prototype.getScrollHeight = function () {\n    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)\n  }\n\n  ScrollSpy.prototype.refresh = function () {\n    var that          = this\n    var offsetMethod  = 'offset'\n    var offsetBase    = 0\n\n    this.offsets      = []\n    this.targets      = []\n    this.scrollHeight = this.getScrollHeight()\n\n    if (!$.isWindow(this.$scrollElement[0])) {\n      offsetMethod = 'position'\n      offsetBase   = this.$scrollElement.scrollTop()\n    }\n\n    this.$body\n      .find(this.selector)\n      .map(function () {\n        var $el   = $(this)\n        var href  = $el.data('target') || $el.attr('href')\n        var $href = /^#./.test(href) && $(href)\n\n        return ($href\n          && $href.length\n          && $href.is(':visible')\n          && [[$href[offsetMethod]().top + offsetBase, href]]) || null\n      })\n      .sort(function (a, b) { return a[0] - b[0] })\n      .each(function () {\n        that.offsets.push(this[0])\n        that.targets.push(this[1])\n      })\n  }\n\n  ScrollSpy.prototype.process = function () {\n    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset\n    var scrollHeight = this.getScrollHeight()\n    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()\n    var offsets      = this.offsets\n    var targets      = this.targets\n    var activeTarget = this.activeTarget\n    var i\n\n    if (this.scrollHeight != scrollHeight) {\n      this.refresh()\n    }\n\n    if (scrollTop >= maxScroll) {\n      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)\n    }\n\n    if (activeTarget && scrollTop < offsets[0]) {\n      this.activeTarget = null\n      return this.clear()\n    }\n\n    for (i = offsets.length; i--;) {\n      activeTarget != targets[i]\n        && scrollTop >= offsets[i]\n        && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])\n        && this.activate(targets[i])\n    }\n  }\n\n  ScrollSpy.prototype.activate = function (target) {\n    this.activeTarget = target\n\n    this.clear()\n\n    var selector = this.selector +\n      '[data-target=\"' + target + '\"],' +\n      this.selector + '[href=\"' + target + '\"]'\n\n    var active = $(selector)\n      .parents('li')\n      .addClass('active')\n\n    if (active.parent('.dropdown-menu').length) {\n      active = active\n        .closest('li.dropdown')\n        .addClass('active')\n    }\n\n    active.trigger('activate.bs.scrollspy')\n  }\n\n  ScrollSpy.prototype.clear = function () {\n    $(this.selector)\n      .parentsUntil(this.options.target, '.active')\n      .removeClass('active')\n  }\n\n\n  // SCROLLSPY PLUGIN DEFINITION\n  // ===========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.scrollspy')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.scrollspy\n\n  $.fn.scrollspy             = Plugin\n  $.fn.scrollspy.Constructor = ScrollSpy\n\n\n  // SCROLLSPY NO CONFLICT\n  // =====================\n\n  $.fn.scrollspy.noConflict = function () {\n    $.fn.scrollspy = old\n    return this\n  }\n\n\n  // SCROLLSPY DATA-API\n  // ==================\n\n  $(window).on('load.bs.scrollspy.data-api', function () {\n    $('[data-spy=\"scroll\"]').each(function () {\n      var $spy = $(this)\n      Plugin.call($spy, $spy.data())\n    })\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: tab.js v3.3.7\n * http://getbootstrap.com/javascript/#tabs\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TAB CLASS DEFINITION\n  // ====================\n\n  var Tab = function (element) {\n    // jscs:disable requireDollarBeforejQueryAssignment\n    this.element = $(element)\n    // jscs:enable requireDollarBeforejQueryAssignment\n  }\n\n  Tab.VERSION = '3.3.7'\n\n  Tab.TRANSITION_DURATION = 150\n\n  Tab.prototype.show = function () {\n    var $this    = this.element\n    var $ul      = $this.closest('ul:not(.dropdown-menu)')\n    var selector = $this.data('target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    if ($this.parent('li').hasClass('active')) return\n\n    var $previous = $ul.find('.active:last a')\n    var hideEvent = $.Event('hide.bs.tab', {\n      relatedTarget: $this[0]\n    })\n    var showEvent = $.Event('show.bs.tab', {\n      relatedTarget: $previous[0]\n    })\n\n    $previous.trigger(hideEvent)\n    $this.trigger(showEvent)\n\n    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\n\n    var $target = $(selector)\n\n    this.activate($this.closest('li'), $ul)\n    this.activate($target, $target.parent(), function () {\n      $previous.trigger({\n        type: 'hidden.bs.tab',\n        relatedTarget: $this[0]\n      })\n      $this.trigger({\n        type: 'shown.bs.tab',\n        relatedTarget: $previous[0]\n      })\n    })\n  }\n\n  Tab.prototype.activate = function (element, container, callback) {\n    var $active    = container.find('> .active')\n    var transition = callback\n      && $.support.transition\n      && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)\n\n    function next() {\n      $active\n        .removeClass('active')\n        .find('> .dropdown-menu > .active')\n          .removeClass('active')\n        .end()\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', false)\n\n      element\n        .addClass('active')\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', true)\n\n      if (transition) {\n        element[0].offsetWidth // reflow for transition\n        element.addClass('in')\n      } else {\n        element.removeClass('fade')\n      }\n\n      if (element.parent('.dropdown-menu').length) {\n        element\n          .closest('li.dropdown')\n            .addClass('active')\n          .end()\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', true)\n      }\n\n      callback && callback()\n    }\n\n    $active.length && transition ?\n      $active\n        .one('bsTransitionEnd', next)\n        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\n      next()\n\n    $active.removeClass('in')\n  }\n\n\n  // TAB PLUGIN DEFINITION\n  // =====================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.tab')\n\n      if (!data) $this.data('bs.tab', (data = new Tab(this)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tab\n\n  $.fn.tab             = Plugin\n  $.fn.tab.Constructor = Tab\n\n\n  // TAB NO CONFLICT\n  // ===============\n\n  $.fn.tab.noConflict = function () {\n    $.fn.tab = old\n    return this\n  }\n\n\n  // TAB DATA-API\n  // ============\n\n  var clickHandler = function (e) {\n    e.preventDefault()\n    Plugin.call($(this), 'show')\n  }\n\n  $(document)\n    .on('click.bs.tab.data-api', '[data-toggle=\"tab\"]', clickHandler)\n    .on('click.bs.tab.data-api', '[data-toggle=\"pill\"]', clickHandler)\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: affix.js v3.3.7\n * http://getbootstrap.com/javascript/#affix\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // AFFIX CLASS DEFINITION\n  // ======================\n\n  var Affix = function (element, options) {\n    this.options = $.extend({}, Affix.DEFAULTS, options)\n\n    this.$target = $(this.options.target)\n      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))\n      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))\n\n    this.$element     = $(element)\n    this.affixed      = null\n    this.unpin        = null\n    this.pinnedOffset = null\n\n    this.checkPosition()\n  }\n\n  Affix.VERSION  = '3.3.7'\n\n  Affix.RESET    = 'affix affix-top affix-bottom'\n\n  Affix.DEFAULTS = {\n    offset: 0,\n    target: window\n  }\n\n  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {\n    var scrollTop    = this.$target.scrollTop()\n    var position     = this.$element.offset()\n    var targetHeight = this.$target.height()\n\n    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false\n\n    if (this.affixed == 'bottom') {\n      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'\n      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'\n    }\n\n    var initializing   = this.affixed == null\n    var colliderTop    = initializing ? scrollTop : position.top\n    var colliderHeight = initializing ? targetHeight : height\n\n    if (offsetTop != null && scrollTop <= offsetTop) return 'top'\n    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'\n\n    return false\n  }\n\n  Affix.prototype.getPinnedOffset = function () {\n    if (this.pinnedOffset) return this.pinnedOffset\n    this.$element.removeClass(Affix.RESET).addClass('affix')\n    var scrollTop = this.$target.scrollTop()\n    var position  = this.$element.offset()\n    return (this.pinnedOffset = position.top - scrollTop)\n  }\n\n  Affix.prototype.checkPositionWithEventLoop = function () {\n    setTimeout($.proxy(this.checkPosition, this), 1)\n  }\n\n  Affix.prototype.checkPosition = function () {\n    if (!this.$element.is(':visible')) return\n\n    var height       = this.$element.height()\n    var offset       = this.options.offset\n    var offsetTop    = offset.top\n    var offsetBottom = offset.bottom\n    var scrollHeight = Math.max($(document).height(), $(document.body).height())\n\n    if (typeof offset != 'object')         offsetBottom = offsetTop = offset\n    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)\n    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)\n\n    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)\n\n    if (this.affixed != affix) {\n      if (this.unpin != null) this.$element.css('top', '')\n\n      var affixType = 'affix' + (affix ? '-' + affix : '')\n      var e         = $.Event(affixType + '.bs.affix')\n\n      this.$element.trigger(e)\n\n      if (e.isDefaultPrevented()) return\n\n      this.affixed = affix\n      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null\n\n      this.$element\n        .removeClass(Affix.RESET)\n        .addClass(affixType)\n        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')\n    }\n\n    if (affix == 'bottom') {\n      this.$element.offset({\n        top: scrollHeight - height - offsetBottom\n      })\n    }\n  }\n\n\n  // AFFIX PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.affix')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.affix\n\n  $.fn.affix             = Plugin\n  $.fn.affix.Constructor = Affix\n\n\n  // AFFIX NO CONFLICT\n  // =================\n\n  $.fn.affix.noConflict = function () {\n    $.fn.affix = old\n    return this\n  }\n\n\n  // AFFIX DATA-API\n  // ==============\n\n  $(window).on('load', function () {\n    $('[data-spy=\"affix\"]').each(function () {\n      var $spy = $(this)\n      var data = $spy.data()\n\n      data.offset = data.offset || {}\n\n      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom\n      if (data.offsetTop    != null) data.offset.top    = data.offsetTop\n\n      Plugin.call($spy, data)\n    })\n  })\n\n}(jQuery);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"./node_modules/jquery/dist/jquery.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/bootstrap-sass/assets/javascripts/bootstrap.js\n");

/***/ }),

/***/ "./node_modules/css-loader/index.js?sourceMap!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-36a7cc9c\",\"scoped\":false,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/assets/js/components/Spinner.vue":
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(\"./node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \"\\n.loader,\\n.loader:after {\\n  border-radius: 50%;\\n  width: 10em;\\n  height: 10em;\\n}\\n.loader {\\n  margin: 90px auto 30px;\\n  font-size: 10px;\\n  position: relative;\\n  text-indent: -9999em;\\n  border-top: 1.1em solid rgba(54,73,93, 0.2);\\n  border-right: 1.1em solid rgba(54,73,93, 0.2);\\n  border-bottom: 1.1em solid rgba(54,73,93, 0.2);\\n  border-left: 1.1em solid #36495d;\\n  -webkit-transform: translateZ(0);\\n  -ms-transform: translateZ(0);\\n  transform: translateZ(0);\\n  -webkit-animation: load8 1.1s infinite linear;\\n  animation: load8 1.1s infinite linear;\\n}\\n@-webkit-keyframes load8 {\\n0% {\\n    -webkit-transform: rotate(0deg);\\n    transform: rotate(0deg);\\n}\\n100% {\\n    -webkit-transform: rotate(360deg);\\n    transform: rotate(360deg);\\n}\\n}\\n@keyframes load8 {\\n0% {\\n    -webkit-transform: rotate(0deg);\\n    transform: rotate(0deg);\\n}\\n100% {\\n    -webkit-transform: rotate(360deg);\\n    transform: rotate(360deg);\\n}\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"/Users/JesusGarcia/Sites/rolveinmobiliaria.com/resources/assets/js/components/resources/assets/js/components/Spinner.vue\"],\"names\":[],\"mappings\":\";AAWA;;EAEA,mBAAA;EACA,YAAA;EACA,aAAA;CACA;AACA;EACA,uBAAA;EACA,gBAAA;EACA,mBAAA;EACA,qBAAA;EACA,4CAAA;EACA,8CAAA;EACA,+CAAA;EACA,iCAAA;EACA,iCAAA;EACA,6BAAA;EACA,yBAAA;EACA,8CAAA;EACA,sCAAA;CACA;AACA;AACA;IACA,gCAAA;IACA,wBAAA;CACA;AACA;IACA,kCAAA;IACA,0BAAA;CACA;CACA;AACA;AACA;IACA,gCAAA;IACA,wBAAA;CACA;AACA;IACA,kCAAA;IACA,0BAAA;CACA;CACA\",\"file\":\"Spinner.vue\",\"sourcesContent\":[\"<template>\\n  <div class=\\\"loader\\\">Cargando...</div>\\n</template>\\n\\n<script>\\n  export default {\\n    name: 'spinner',\\n  }\\n</script>\\n\\n<style>\\n.loader,\\n.loader:after {\\n  border-radius: 50%;\\n  width: 10em;\\n  height: 10em;\\n}\\n.loader {\\n  margin: 90px auto 30px;\\n  font-size: 10px;\\n  position: relative;\\n  text-indent: -9999em;\\n  border-top: 1.1em solid rgba(54,73,93, 0.2);\\n  border-right: 1.1em solid rgba(54,73,93, 0.2);\\n  border-bottom: 1.1em solid rgba(54,73,93, 0.2);\\n  border-left: 1.1em solid #36495d;\\n  -webkit-transform: translateZ(0);\\n  -ms-transform: translateZ(0);\\n  transform: translateZ(0);\\n  -webkit-animation: load8 1.1s infinite linear;\\n  animation: load8 1.1s infinite linear;\\n}\\n@-webkit-keyframes load8 {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n    transform: rotate(0deg);\\n  }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n    transform: rotate(360deg);\\n  }\\n}\\n@keyframes load8 {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n    transform: rotate(0deg);\\n  }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n    transform: rotate(360deg);\\n  }\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2NvbXBvbmVudHMvU3Bpbm5lci52dWU/YmE2MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOzs7QUFHQTtBQUNBLG9EQUFxRCx1QkFBdUIsZ0JBQWdCLGlCQUFpQixHQUFHLFdBQVcsMkJBQTJCLG9CQUFvQix1QkFBdUIseUJBQXlCLGdEQUFnRCxrREFBa0QsbURBQW1ELHFDQUFxQyxxQ0FBcUMsaUNBQWlDLDZCQUE2QixrREFBa0QsMENBQTBDLEdBQUcsNEJBQTRCLE1BQU0sc0NBQXNDLDhCQUE4QixHQUFHLFFBQVEsd0NBQXdDLGdDQUFnQyxHQUFHLEdBQUcsb0JBQW9CLE1BQU0sc0NBQXNDLDhCQUE4QixHQUFHLFFBQVEsd0NBQXdDLGdDQUFnQyxHQUFHLEdBQUcsVUFBVSwyS0FBMkssTUFBTSxXQUFXLFVBQVUsVUFBVSxLQUFLLEtBQUssV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxLQUFLLEtBQUssS0FBSyxXQUFXLFdBQVcsS0FBSyxLQUFLLFdBQVcsV0FBVyxLQUFLLEtBQUssS0FBSyxLQUFLLFdBQVcsV0FBVyxLQUFLLEtBQUssV0FBVyxXQUFXLEtBQUssZ0pBQWdKLDJCQUEyQixpREFBaUQsdUJBQXVCLGdCQUFnQixpQkFBaUIsR0FBRyxXQUFXLDJCQUEyQixvQkFBb0IsdUJBQXVCLHlCQUF5QixnREFBZ0Qsa0RBQWtELG1EQUFtRCxxQ0FBcUMscUNBQXFDLGlDQUFpQyw2QkFBNkIsa0RBQWtELDBDQUEwQyxHQUFHLDRCQUE0QixRQUFRLHNDQUFzQyw4QkFBOEIsS0FBSyxVQUFVLHdDQUF3QyxnQ0FBZ0MsS0FBSyxHQUFHLG9CQUFvQixRQUFRLHNDQUFzQyw4QkFBOEIsS0FBSyxVQUFVLHdDQUF3QyxnQ0FBZ0MsS0FBSyxHQUFHLCtCQUErQjs7QUFFcm5GIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLWNvbXBpbGVyL2luZGV4LmpzP3tcInZ1ZVwiOnRydWUsXCJpZFwiOlwiZGF0YS12LTM2YTdjYzljXCIsXCJzY29wZWRcIjpmYWxzZSxcImhhc0lubGluZUNvbmZpZ1wiOnRydWV9IS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9c3R5bGVzJmluZGV4PTAhLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2NvbXBvbmVudHMvU3Bpbm5lci52dWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiXFxuLmxvYWRlcixcXG4ubG9hZGVyOmFmdGVyIHtcXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcXG4gIHdpZHRoOiAxMGVtO1xcbiAgaGVpZ2h0OiAxMGVtO1xcbn1cXG4ubG9hZGVyIHtcXG4gIG1hcmdpbjogOTBweCBhdXRvIDMwcHg7XFxuICBmb250LXNpemU6IDEwcHg7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICB0ZXh0LWluZGVudDogLTk5OTllbTtcXG4gIGJvcmRlci10b3A6IDEuMWVtIHNvbGlkIHJnYmEoNTQsNzMsOTMsIDAuMik7XFxuICBib3JkZXItcmlnaHQ6IDEuMWVtIHNvbGlkIHJnYmEoNTQsNzMsOTMsIDAuMik7XFxuICBib3JkZXItYm90dG9tOiAxLjFlbSBzb2xpZCByZ2JhKDU0LDczLDkzLCAwLjIpO1xcbiAgYm9yZGVyLWxlZnQ6IDEuMWVtIHNvbGlkICMzNjQ5NWQ7XFxuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcXG4gIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCk7XFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCk7XFxuICAtd2Via2l0LWFuaW1hdGlvbjogbG9hZDggMS4xcyBpbmZpbml0ZSBsaW5lYXI7XFxuICBhbmltYXRpb246IGxvYWQ4IDEuMXMgaW5maW5pdGUgbGluZWFyO1xcbn1cXG5ALXdlYmtpdC1rZXlmcmFtZXMgbG9hZDgge1xcbjAlIHtcXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XFxufVxcbjEwMCUge1xcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XFxuICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XFxufVxcbn1cXG5Aa2V5ZnJhbWVzIGxvYWQ4IHtcXG4wJSB7XFxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XFxuICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xcbn1cXG4xMDAlIHtcXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xcbn1cXG59XFxuXCIsIFwiXCIsIHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIi9Vc2Vycy9KZXN1c0dhcmNpYS9TaXRlcy9yb2x2ZWlubW9iaWxpYXJpYS5jb20vcmVzb3VyY2VzL2Fzc2V0cy9qcy9jb21wb25lbnRzL3Jlc291cmNlcy9hc3NldHMvanMvY29tcG9uZW50cy9TcGlubmVyLnZ1ZVwiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiO0FBV0E7O0VBRUEsbUJBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtDQUNBO0FBQ0E7RUFDQSx1QkFBQTtFQUNBLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSxxQkFBQTtFQUNBLDRDQUFBO0VBQ0EsOENBQUE7RUFDQSwrQ0FBQTtFQUNBLGlDQUFBO0VBQ0EsaUNBQUE7RUFDQSw2QkFBQTtFQUNBLHlCQUFBO0VBQ0EsOENBQUE7RUFDQSxzQ0FBQTtDQUNBO0FBQ0E7QUFDQTtJQUNBLGdDQUFBO0lBQ0Esd0JBQUE7Q0FDQTtBQUNBO0lBQ0Esa0NBQUE7SUFDQSwwQkFBQTtDQUNBO0NBQ0E7QUFDQTtBQUNBO0lBQ0EsZ0NBQUE7SUFDQSx3QkFBQTtDQUNBO0FBQ0E7SUFDQSxrQ0FBQTtJQUNBLDBCQUFBO0NBQ0E7Q0FDQVwiLFwiZmlsZVwiOlwiU3Bpbm5lci52dWVcIixcInNvdXJjZXNDb250ZW50XCI6W1wiPHRlbXBsYXRlPlxcbiAgPGRpdiBjbGFzcz1cXFwibG9hZGVyXFxcIj5DYXJnYW5kby4uLjwvZGl2PlxcbjwvdGVtcGxhdGU+XFxuXFxuPHNjcmlwdD5cXG4gIGV4cG9ydCBkZWZhdWx0IHtcXG4gICAgbmFtZTogJ3NwaW5uZXInLFxcbiAgfVxcbjwvc2NyaXB0PlxcblxcbjxzdHlsZT5cXG4ubG9hZGVyLFxcbi5sb2FkZXI6YWZ0ZXIge1xcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgd2lkdGg6IDEwZW07XFxuICBoZWlnaHQ6IDEwZW07XFxufVxcbi5sb2FkZXIge1xcbiAgbWFyZ2luOiA5MHB4IGF1dG8gMzBweDtcXG4gIGZvbnQtc2l6ZTogMTBweDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHRleHQtaW5kZW50OiAtOTk5OWVtO1xcbiAgYm9yZGVyLXRvcDogMS4xZW0gc29saWQgcmdiYSg1NCw3Myw5MywgMC4yKTtcXG4gIGJvcmRlci1yaWdodDogMS4xZW0gc29saWQgcmdiYSg1NCw3Myw5MywgMC4yKTtcXG4gIGJvcmRlci1ib3R0b206IDEuMWVtIHNvbGlkIHJnYmEoNTQsNzMsOTMsIDAuMik7XFxuICBib3JkZXItbGVmdDogMS4xZW0gc29saWQgIzM2NDk1ZDtcXG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xcbiAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcXG4gIC13ZWJraXQtYW5pbWF0aW9uOiBsb2FkOCAxLjFzIGluZmluaXRlIGxpbmVhcjtcXG4gIGFuaW1hdGlvbjogbG9hZDggMS4xcyBpbmZpbml0ZSBsaW5lYXI7XFxufVxcbkAtd2Via2l0LWtleWZyYW1lcyBsb2FkOCB7XFxuICAwJSB7XFxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XFxuICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xcbiAgfVxcbiAgMTAwJSB7XFxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcXG4gIH1cXG59XFxuQGtleWZyYW1lcyBsb2FkOCB7XFxuICAwJSB7XFxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XFxuICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xcbiAgfVxcbiAgMTAwJSB7XFxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcXG4gIH1cXG59XFxuPC9zdHlsZT5cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcblxuLy8gZXhwb3J0c1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlcj9zb3VyY2VNYXAhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc3R5bGUtY29tcGlsZXI/e1widnVlXCI6dHJ1ZSxcImlkXCI6XCJkYXRhLXYtMzZhN2NjOWNcIixcInNjb3BlZFwiOmZhbHNlLFwiaGFzSW5saW5lQ29uZmlnXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL3Jlc291cmNlcy9hc3NldHMvanMvY29tcG9uZW50cy9TcGlubmVyLnZ1ZVxuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXAhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc3R5bGUtY29tcGlsZXIvaW5kZXguanM/e1widnVlXCI6dHJ1ZSxcImlkXCI6XCJkYXRhLXYtMzZhN2NjOWNcIixcInNjb3BlZFwiOmZhbHNlLFwiaGFzSW5saW5lQ29uZmlnXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL3Jlc291cmNlcy9hc3NldHMvanMvY29tcG9uZW50cy9TcGlubmVyLnZ1ZVxuLy8gbW9kdWxlIGNodW5rcyA9IDEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-loader/index.js?sourceMap!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-36a7cc9c\",\"scoped\":false,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/assets/js/components/Spinner.vue\n");

/***/ }),

/***/ "./node_modules/css-loader/lib/css-base.js":
/***/ (function(module, exports) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanM/MTU5ZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLGdCQUFnQjtBQUNuRCxJQUFJO0FBQ0o7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlCQUFpQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksb0JBQW9CO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxjQUFjOztBQUVsRTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHVzZVNvdXJjZU1hcCkge1xuXHR2YXIgbGlzdCA9IFtdO1xuXG5cdC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblx0bGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuXHRcdFx0dmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG5cdFx0XHRpZihpdGVtWzJdKSB7XG5cdFx0XHRcdHJldHVybiBcIkBtZWRpYSBcIiArIGl0ZW1bMl0gKyBcIntcIiArIGNvbnRlbnQgKyBcIn1cIjtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJldHVybiBjb250ZW50O1xuXHRcdFx0fVxuXHRcdH0pLmpvaW4oXCJcIik7XG5cdH07XG5cblx0Ly8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3Rcblx0bGlzdC5pID0gZnVuY3Rpb24obW9kdWxlcywgbWVkaWFRdWVyeSkge1xuXHRcdGlmKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKVxuXHRcdFx0bW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgXCJcIl1dO1xuXHRcdHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpZCA9IHRoaXNbaV1bMF07XG5cdFx0XHRpZih0eXBlb2YgaWQgPT09IFwibnVtYmVyXCIpXG5cdFx0XHRcdGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcblx0XHR9XG5cdFx0Zm9yKGkgPSAwOyBpIDwgbW9kdWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSBtb2R1bGVzW2ldO1xuXHRcdFx0Ly8gc2tpcCBhbHJlYWR5IGltcG9ydGVkIG1vZHVsZVxuXHRcdFx0Ly8gdGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBub3QgMTAwJSBwZXJmZWN0IGZvciB3ZWlyZCBtZWRpYSBxdWVyeSBjb21iaW5hdGlvbnNcblx0XHRcdC8vICB3aGVuIGEgbW9kdWxlIGlzIGltcG9ydGVkIG11bHRpcGxlIHRpbWVzIHdpdGggZGlmZmVyZW50IG1lZGlhIHF1ZXJpZXMuXG5cdFx0XHQvLyAgSSBob3BlIHRoaXMgd2lsbCBuZXZlciBvY2N1ciAoSGV5IHRoaXMgd2F5IHdlIGhhdmUgc21hbGxlciBidW5kbGVzKVxuXHRcdFx0aWYodHlwZW9mIGl0ZW1bMF0gIT09IFwibnVtYmVyXCIgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcblx0XHRcdFx0aWYobWVkaWFRdWVyeSAmJiAhaXRlbVsyXSkge1xuXHRcdFx0XHRcdGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuXHRcdFx0XHR9IGVsc2UgaWYobWVkaWFRdWVyeSkge1xuXHRcdFx0XHRcdGl0ZW1bMl0gPSBcIihcIiArIGl0ZW1bMl0gKyBcIikgYW5kIChcIiArIG1lZGlhUXVlcnkgKyBcIilcIjtcblx0XHRcdFx0fVxuXHRcdFx0XHRsaXN0LnB1c2goaXRlbSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXHRyZXR1cm4gbGlzdDtcbn07XG5cbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG5cdHZhciBjb250ZW50ID0gaXRlbVsxXSB8fCAnJztcblx0dmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXHRpZiAoIWNzc01hcHBpbmcpIHtcblx0XHRyZXR1cm4gY29udGVudDtcblx0fVxuXG5cdGlmICh1c2VTb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgPT09ICdmdW5jdGlvbicpIHtcblx0XHR2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKTtcblx0XHR2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuXHRcdFx0cmV0dXJuICcvKiMgc291cmNlVVJMPScgKyBjc3NNYXBwaW5nLnNvdXJjZVJvb3QgKyBzb3VyY2UgKyAnICovJ1xuXHRcdH0pO1xuXG5cdFx0cmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG5cdH1cblxuXHRyZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufVxuXG4vLyBBZGFwdGVkIGZyb20gY29udmVydC1zb3VyY2UtbWFwIChNSVQpXG5mdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuXHR2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcblx0dmFyIGRhdGEgPSAnc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsJyArIGJhc2U2NDtcblxuXHRyZXR1cm4gJy8qIyAnICsgZGF0YSArICcgKi8nO1xufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-loader/lib/css-base.js\n");

/***/ }),

/***/ "./node_modules/laravel-echo/dist/echo.js":
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Vue, axios, jQuery) {var asyncGenerator = function () {\n  function AwaitValue(value) {\n    this.value = value;\n  }\n\n  function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg);\n        var value = result.value;\n\n        if (value instanceof AwaitValue) {\n          Promise.resolve(value.value).then(function (arg) {\n            resume(\"next\", arg);\n          }, function (arg) {\n            resume(\"throw\", arg);\n          });\n        } else {\n          settle(result.done ? \"return\" : \"normal\", result.value);\n        }\n      } catch (err) {\n        settle(\"throw\", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case \"return\":\n          front.resolve({\n            value: value,\n            done: true\n          });\n          break;\n\n        case \"throw\":\n          front.reject(value);\n          break;\n\n        default:\n          front.resolve({\n            value: value,\n            done: false\n          });\n          break;\n      }\n\n      front = front.next;\n\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    if (typeof gen.return !== \"function\") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) {\n    return this._invoke(\"next\", arg);\n  };\n\n  AsyncGenerator.prototype.throw = function (arg) {\n    return this._invoke(\"throw\", arg);\n  };\n\n  AsyncGenerator.prototype.return = function (arg) {\n    return this._invoke(\"return\", arg);\n  };\n\n  return {\n    wrap: function (fn) {\n      return function () {\n        return new AsyncGenerator(fn.apply(this, arguments));\n      };\n    },\n    await: function (value) {\n      return new AwaitValue(value);\n    }\n  };\n}();\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar Connector = function () {\n    function Connector(options) {\n        classCallCheck(this, Connector);\n\n        this._defaultOptions = {\n            auth: {\n                headers: {}\n            },\n            authEndpoint: '/broadcasting/auth',\n            broadcaster: 'pusher',\n            csrfToken: null,\n            host: null,\n            key: null,\n            namespace: 'App.Events'\n        };\n        this.setOptions(options);\n        this.connect();\n    }\n\n    createClass(Connector, [{\n        key: 'setOptions',\n        value: function setOptions(options) {\n            this.options = _extends(this._defaultOptions, options);\n            if (this.csrfToken()) {\n                this.options.auth.headers['X-CSRF-TOKEN'] = this.csrfToken();\n            }\n            return options;\n        }\n    }, {\n        key: 'csrfToken',\n        value: function csrfToken() {\n            var selector = void 0;\n            if (typeof window !== 'undefined' && window['Laravel'] && window['Laravel'].csrfToken) {\n                return window['Laravel'].csrfToken;\n            } else if (this.options.csrfToken) {\n                return this.options.csrfToken;\n            } else if (typeof document !== 'undefined' && (selector = document.querySelector('meta[name=\"csrf-token\"]'))) {\n                return selector.getAttribute('content');\n            }\n            return null;\n        }\n    }]);\n    return Connector;\n}();\n\nvar Channel = function () {\n    function Channel() {\n        classCallCheck(this, Channel);\n    }\n\n    createClass(Channel, [{\n        key: 'notification',\n        value: function notification(callback) {\n            return this.listen('.Illuminate\\\\Notifications\\\\Events\\\\BroadcastNotificationCreated', callback);\n        }\n    }, {\n        key: 'listenForWhisper',\n        value: function listenForWhisper(event, callback) {\n            return this.listen('.client-' + event, callback);\n        }\n    }]);\n    return Channel;\n}();\n\nvar EventFormatter = function () {\n    function EventFormatter(namespace) {\n        classCallCheck(this, EventFormatter);\n\n        this.setNamespace(namespace);\n    }\n\n    createClass(EventFormatter, [{\n        key: 'format',\n        value: function format(event) {\n            if (event.charAt(0) === '.' || event.charAt(0) === '\\\\') {\n                return event.substr(1);\n            } else if (this.namespace) {\n                event = this.namespace + '.' + event;\n            }\n            return event.replace(/\\./g, '\\\\');\n        }\n    }, {\n        key: 'setNamespace',\n        value: function setNamespace(value) {\n            this.namespace = value;\n        }\n    }]);\n    return EventFormatter;\n}();\n\nvar PusherChannel = function (_Channel) {\n    inherits(PusherChannel, _Channel);\n\n    function PusherChannel(pusher, name, options) {\n        classCallCheck(this, PusherChannel);\n\n        var _this = possibleConstructorReturn(this, (PusherChannel.__proto__ || Object.getPrototypeOf(PusherChannel)).call(this));\n\n        _this.name = name;\n        _this.pusher = pusher;\n        _this.options = options;\n        _this.eventFormatter = new EventFormatter(_this.options.namespace);\n        _this.subscribe();\n        return _this;\n    }\n\n    createClass(PusherChannel, [{\n        key: 'subscribe',\n        value: function subscribe() {\n            this.subscription = this.pusher.subscribe(this.name);\n        }\n    }, {\n        key: 'unsubscribe',\n        value: function unsubscribe() {\n            this.pusher.unsubscribe(this.name);\n        }\n    }, {\n        key: 'listen',\n        value: function listen(event, callback) {\n            this.on(this.eventFormatter.format(event), callback);\n            return this;\n        }\n    }, {\n        key: 'stopListening',\n        value: function stopListening(event) {\n            this.subscription.unbind(this.eventFormatter.format(event));\n            return this;\n        }\n    }, {\n        key: 'on',\n        value: function on(event, callback) {\n            this.subscription.bind(event, callback);\n            return this;\n        }\n    }]);\n    return PusherChannel;\n}(Channel);\n\nvar PusherPrivateChannel = function (_PusherChannel) {\n    inherits(PusherPrivateChannel, _PusherChannel);\n\n    function PusherPrivateChannel() {\n        classCallCheck(this, PusherPrivateChannel);\n        return possibleConstructorReturn(this, (PusherPrivateChannel.__proto__ || Object.getPrototypeOf(PusherPrivateChannel)).apply(this, arguments));\n    }\n\n    createClass(PusherPrivateChannel, [{\n        key: 'whisper',\n        value: function whisper(eventName, data) {\n            this.pusher.channels.channels[this.name].trigger('client-' + eventName, data);\n            return this;\n        }\n    }]);\n    return PusherPrivateChannel;\n}(PusherChannel);\n\nvar PusherPresenceChannel = function (_PusherChannel) {\n    inherits(PusherPresenceChannel, _PusherChannel);\n\n    function PusherPresenceChannel() {\n        classCallCheck(this, PusherPresenceChannel);\n        return possibleConstructorReturn(this, (PusherPresenceChannel.__proto__ || Object.getPrototypeOf(PusherPresenceChannel)).apply(this, arguments));\n    }\n\n    createClass(PusherPresenceChannel, [{\n        key: 'here',\n        value: function here(callback) {\n            this.on('pusher:subscription_succeeded', function (data) {\n                callback(Object.keys(data.members).map(function (k) {\n                    return data.members[k];\n                }));\n            });\n            return this;\n        }\n    }, {\n        key: 'joining',\n        value: function joining(callback) {\n            this.on('pusher:member_added', function (member) {\n                callback(member.info);\n            });\n            return this;\n        }\n    }, {\n        key: 'leaving',\n        value: function leaving(callback) {\n            this.on('pusher:member_removed', function (member) {\n                callback(member.info);\n            });\n            return this;\n        }\n    }, {\n        key: 'whisper',\n        value: function whisper(eventName, data) {\n            this.pusher.channels.channels[this.name].trigger('client-' + eventName, data);\n            return this;\n        }\n    }]);\n    return PusherPresenceChannel;\n}(PusherChannel);\n\nvar SocketIoChannel = function (_Channel) {\n    inherits(SocketIoChannel, _Channel);\n\n    function SocketIoChannel(socket, name, options) {\n        classCallCheck(this, SocketIoChannel);\n\n        var _this = possibleConstructorReturn(this, (SocketIoChannel.__proto__ || Object.getPrototypeOf(SocketIoChannel)).call(this));\n\n        _this.events = {};\n        _this.name = name;\n        _this.socket = socket;\n        _this.options = options;\n        _this.eventFormatter = new EventFormatter(_this.options.namespace);\n        _this.subscribe();\n        _this.configureReconnector();\n        return _this;\n    }\n\n    createClass(SocketIoChannel, [{\n        key: 'subscribe',\n        value: function subscribe() {\n            this.socket.emit('subscribe', {\n                channel: this.name,\n                auth: this.options.auth || {}\n            });\n        }\n    }, {\n        key: 'unsubscribe',\n        value: function unsubscribe() {\n            this.unbind();\n            this.socket.emit('unsubscribe', {\n                channel: this.name,\n                auth: this.options.auth || {}\n            });\n        }\n    }, {\n        key: 'listen',\n        value: function listen(event, callback) {\n            this.on(this.eventFormatter.format(event), callback);\n            return this;\n        }\n    }, {\n        key: 'on',\n        value: function on(event, callback) {\n            var _this2 = this;\n\n            var listener = function listener(channel, data) {\n                if (_this2.name == channel) {\n                    callback(data);\n                }\n            };\n            this.socket.on(event, listener);\n            this.bind(event, listener);\n        }\n    }, {\n        key: 'configureReconnector',\n        value: function configureReconnector() {\n            var _this3 = this;\n\n            var listener = function listener() {\n                _this3.subscribe();\n            };\n            this.socket.on('reconnect', listener);\n            this.bind('reconnect', listener);\n        }\n    }, {\n        key: 'bind',\n        value: function bind(event, callback) {\n            this.events[event] = this.events[event] || [];\n            this.events[event].push(callback);\n        }\n    }, {\n        key: 'unbind',\n        value: function unbind() {\n            var _this4 = this;\n\n            Object.keys(this.events).forEach(function (event) {\n                _this4.events[event].forEach(function (callback) {\n                    _this4.socket.removeListener(event, callback);\n                });\n                delete _this4.events[event];\n            });\n        }\n    }]);\n    return SocketIoChannel;\n}(Channel);\n\nvar SocketIoPrivateChannel = function (_SocketIoChannel) {\n    inherits(SocketIoPrivateChannel, _SocketIoChannel);\n\n    function SocketIoPrivateChannel() {\n        classCallCheck(this, SocketIoPrivateChannel);\n        return possibleConstructorReturn(this, (SocketIoPrivateChannel.__proto__ || Object.getPrototypeOf(SocketIoPrivateChannel)).apply(this, arguments));\n    }\n\n    createClass(SocketIoPrivateChannel, [{\n        key: 'whisper',\n        value: function whisper(eventName, data) {\n            this.socket.emit('client event', {\n                channel: this.name,\n                event: 'client-' + eventName,\n                data: data\n            });\n            return this;\n        }\n    }]);\n    return SocketIoPrivateChannel;\n}(SocketIoChannel);\n\nvar SocketIoPresenceChannel = function (_SocketIoPrivateChann) {\n    inherits(SocketIoPresenceChannel, _SocketIoPrivateChann);\n\n    function SocketIoPresenceChannel() {\n        classCallCheck(this, SocketIoPresenceChannel);\n        return possibleConstructorReturn(this, (SocketIoPresenceChannel.__proto__ || Object.getPrototypeOf(SocketIoPresenceChannel)).apply(this, arguments));\n    }\n\n    createClass(SocketIoPresenceChannel, [{\n        key: 'here',\n        value: function here(callback) {\n            this.on('presence:subscribed', function (members) {\n                callback(members.map(function (m) {\n                    return m.user_info;\n                }));\n            });\n            return this;\n        }\n    }, {\n        key: 'joining',\n        value: function joining(callback) {\n            this.on('presence:joining', function (member) {\n                return callback(member.user_info);\n            });\n            return this;\n        }\n    }, {\n        key: 'leaving',\n        value: function leaving(callback) {\n            this.on('presence:leaving', function (member) {\n                return callback(member.user_info);\n            });\n            return this;\n        }\n    }]);\n    return SocketIoPresenceChannel;\n}(SocketIoPrivateChannel);\n\nvar NullChannel = function (_Channel) {\n    inherits(NullChannel, _Channel);\n\n    function NullChannel() {\n        classCallCheck(this, NullChannel);\n        return possibleConstructorReturn(this, (NullChannel.__proto__ || Object.getPrototypeOf(NullChannel)).apply(this, arguments));\n    }\n\n    createClass(NullChannel, [{\n        key: 'subscribe',\n        value: function subscribe() {}\n    }, {\n        key: 'unsubscribe',\n        value: function unsubscribe() {}\n    }, {\n        key: 'listen',\n        value: function listen(event, callback) {\n            return this;\n        }\n    }, {\n        key: 'stopListening',\n        value: function stopListening(event) {\n            return this;\n        }\n    }, {\n        key: 'on',\n        value: function on(event, callback) {\n            return this;\n        }\n    }]);\n    return NullChannel;\n}(Channel);\n\nvar NullPrivateChannel = function (_NullChannel) {\n    inherits(NullPrivateChannel, _NullChannel);\n\n    function NullPrivateChannel() {\n        classCallCheck(this, NullPrivateChannel);\n        return possibleConstructorReturn(this, (NullPrivateChannel.__proto__ || Object.getPrototypeOf(NullPrivateChannel)).apply(this, arguments));\n    }\n\n    createClass(NullPrivateChannel, [{\n        key: 'whisper',\n        value: function whisper(eventName, data) {\n            return this;\n        }\n    }]);\n    return NullPrivateChannel;\n}(NullChannel);\n\nvar NullPresenceChannel = function (_NullChannel) {\n    inherits(NullPresenceChannel, _NullChannel);\n\n    function NullPresenceChannel() {\n        classCallCheck(this, NullPresenceChannel);\n        return possibleConstructorReturn(this, (NullPresenceChannel.__proto__ || Object.getPrototypeOf(NullPresenceChannel)).apply(this, arguments));\n    }\n\n    createClass(NullPresenceChannel, [{\n        key: 'here',\n        value: function here(callback) {\n            return this;\n        }\n    }, {\n        key: 'joining',\n        value: function joining(callback) {\n            return this;\n        }\n    }, {\n        key: 'leaving',\n        value: function leaving(callback) {\n            return this;\n        }\n    }, {\n        key: 'whisper',\n        value: function whisper(eventName, data) {\n            return this;\n        }\n    }]);\n    return NullPresenceChannel;\n}(NullChannel);\n\nvar PusherConnector = function (_Connector) {\n    inherits(PusherConnector, _Connector);\n\n    function PusherConnector() {\n        var _ref;\n\n        classCallCheck(this, PusherConnector);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this = possibleConstructorReturn(this, (_ref = PusherConnector.__proto__ || Object.getPrototypeOf(PusherConnector)).call.apply(_ref, [this].concat(args)));\n\n        _this.channels = {};\n        return _this;\n    }\n\n    createClass(PusherConnector, [{\n        key: 'connect',\n        value: function connect() {\n            this.pusher = new Pusher(this.options.key, this.options);\n        }\n    }, {\n        key: 'listen',\n        value: function listen(name, event, callback) {\n            return this.channel(name).listen(event, callback);\n        }\n    }, {\n        key: 'channel',\n        value: function channel(name) {\n            if (!this.channels[name]) {\n                this.channels[name] = new PusherChannel(this.pusher, name, this.options);\n            }\n            return this.channels[name];\n        }\n    }, {\n        key: 'privateChannel',\n        value: function privateChannel(name) {\n            if (!this.channels['private-' + name]) {\n                this.channels['private-' + name] = new PusherPrivateChannel(this.pusher, 'private-' + name, this.options);\n            }\n            return this.channels['private-' + name];\n        }\n    }, {\n        key: 'presenceChannel',\n        value: function presenceChannel(name) {\n            if (!this.channels['presence-' + name]) {\n                this.channels['presence-' + name] = new PusherPresenceChannel(this.pusher, 'presence-' + name, this.options);\n            }\n            return this.channels['presence-' + name];\n        }\n    }, {\n        key: 'leave',\n        value: function leave(name) {\n            var _this2 = this;\n\n            var channels = [name, 'private-' + name, 'presence-' + name];\n            channels.forEach(function (name, index) {\n                if (_this2.channels[name]) {\n                    _this2.channels[name].unsubscribe();\n                    delete _this2.channels[name];\n                }\n            });\n        }\n    }, {\n        key: 'socketId',\n        value: function socketId() {\n            return this.pusher.connection.socket_id;\n        }\n    }, {\n        key: 'disconnect',\n        value: function disconnect() {\n            this.pusher.disconnect();\n        }\n    }]);\n    return PusherConnector;\n}(Connector);\n\nvar SocketIoConnector = function (_Connector) {\n    inherits(SocketIoConnector, _Connector);\n\n    function SocketIoConnector() {\n        var _ref;\n\n        classCallCheck(this, SocketIoConnector);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this = possibleConstructorReturn(this, (_ref = SocketIoConnector.__proto__ || Object.getPrototypeOf(SocketIoConnector)).call.apply(_ref, [this].concat(args)));\n\n        _this.channels = {};\n        return _this;\n    }\n\n    createClass(SocketIoConnector, [{\n        key: 'connect',\n        value: function connect() {\n            var io = this.getSocketIO();\n            this.socket = io(this.options.host, this.options);\n            return this.socket;\n        }\n    }, {\n        key: 'getSocketIO',\n        value: function getSocketIO() {\n            if (typeof io !== 'undefined') {\n                return io;\n            }\n            if (this.options.client !== 'undefined') {\n                return this.options.client;\n            }\n            throw new Error('Socket.io client not found. Should be globally available or passed via options.client');\n        }\n    }, {\n        key: 'listen',\n        value: function listen(name, event, callback) {\n            return this.channel(name).listen(event, callback);\n        }\n    }, {\n        key: 'channel',\n        value: function channel(name) {\n            if (!this.channels[name]) {\n                this.channels[name] = new SocketIoChannel(this.socket, name, this.options);\n            }\n            return this.channels[name];\n        }\n    }, {\n        key: 'privateChannel',\n        value: function privateChannel(name) {\n            if (!this.channels['private-' + name]) {\n                this.channels['private-' + name] = new SocketIoPrivateChannel(this.socket, 'private-' + name, this.options);\n            }\n            return this.channels['private-' + name];\n        }\n    }, {\n        key: 'presenceChannel',\n        value: function presenceChannel(name) {\n            if (!this.channels['presence-' + name]) {\n                this.channels['presence-' + name] = new SocketIoPresenceChannel(this.socket, 'presence-' + name, this.options);\n            }\n            return this.channels['presence-' + name];\n        }\n    }, {\n        key: 'leave',\n        value: function leave(name) {\n            var _this2 = this;\n\n            var channels = [name, 'private-' + name, 'presence-' + name];\n            channels.forEach(function (name) {\n                if (_this2.channels[name]) {\n                    _this2.channels[name].unsubscribe();\n                    delete _this2.channels[name];\n                }\n            });\n        }\n    }, {\n        key: 'socketId',\n        value: function socketId() {\n            return this.socket.id;\n        }\n    }, {\n        key: 'disconnect',\n        value: function disconnect() {\n            this.socket.disconnect();\n        }\n    }]);\n    return SocketIoConnector;\n}(Connector);\n\nvar NullConnector = function (_Connector) {\n    inherits(NullConnector, _Connector);\n\n    function NullConnector() {\n        var _ref;\n\n        classCallCheck(this, NullConnector);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this = possibleConstructorReturn(this, (_ref = NullConnector.__proto__ || Object.getPrototypeOf(NullConnector)).call.apply(_ref, [this].concat(args)));\n\n        _this.channels = {};\n        return _this;\n    }\n\n    createClass(NullConnector, [{\n        key: 'connect',\n        value: function connect() {}\n    }, {\n        key: 'listen',\n        value: function listen(name, event, callback) {\n            return new NullChannel();\n        }\n    }, {\n        key: 'channel',\n        value: function channel(name) {\n            return new NullChannel();\n        }\n    }, {\n        key: 'privateChannel',\n        value: function privateChannel(name) {\n            return new NullPrivateChannel();\n        }\n    }, {\n        key: 'presenceChannel',\n        value: function presenceChannel(name) {\n            return new NullPresenceChannel();\n        }\n    }, {\n        key: 'leave',\n        value: function leave(name) {}\n    }, {\n        key: 'socketId',\n        value: function socketId() {\n            return 'fake-socket-id';\n        }\n    }, {\n        key: 'disconnect',\n        value: function disconnect() {}\n    }]);\n    return NullConnector;\n}(Connector);\n\nvar Echo = function () {\n    function Echo(options) {\n        classCallCheck(this, Echo);\n\n        this.options = options;\n        if (typeof Vue === 'function' && Vue.http) {\n            this.registerVueRequestInterceptor();\n        }\n        if (typeof axios === 'function') {\n            this.registerAxiosRequestInterceptor();\n        }\n        if (typeof jQuery === 'function') {\n            this.registerjQueryAjaxSetup();\n        }\n        if (this.options.broadcaster == 'pusher') {\n            this.connector = new PusherConnector(this.options);\n        } else if (this.options.broadcaster == 'socket.io') {\n            this.connector = new SocketIoConnector(this.options);\n        } else if (this.options.broadcaster == 'null') {\n            this.connector = new NullConnector(this.options);\n        }\n    }\n\n    createClass(Echo, [{\n        key: 'registerVueRequestInterceptor',\n        value: function registerVueRequestInterceptor() {\n            var _this = this;\n\n            Vue.http.interceptors.push(function (request, next) {\n                if (_this.socketId()) {\n                    request.headers.set('X-Socket-ID', _this.socketId());\n                }\n                next();\n            });\n        }\n    }, {\n        key: 'registerAxiosRequestInterceptor',\n        value: function registerAxiosRequestInterceptor() {\n            var _this2 = this;\n\n            axios.interceptors.request.use(function (config) {\n                if (_this2.socketId()) {\n                    config.headers['X-Socket-Id'] = _this2.socketId();\n                }\n                return config;\n            });\n        }\n    }, {\n        key: 'registerjQueryAjaxSetup',\n        value: function registerjQueryAjaxSetup() {\n            var _this3 = this;\n\n            if (typeof jQuery.ajax != 'undefined') {\n                jQuery.ajaxSetup({\n                    beforeSend: function beforeSend(xhr) {\n                        if (_this3.socketId()) {\n                            xhr.setRequestHeader('X-Socket-Id', _this3.socketId());\n                        }\n                    }\n                });\n            }\n        }\n    }, {\n        key: 'listen',\n        value: function listen(channel, event, callback) {\n            return this.connector.listen(channel, event, callback);\n        }\n    }, {\n        key: 'channel',\n        value: function channel(_channel) {\n            return this.connector.channel(_channel);\n        }\n    }, {\n        key: 'private',\n        value: function _private(channel) {\n            return this.connector.privateChannel(channel);\n        }\n    }, {\n        key: 'join',\n        value: function join(channel) {\n            return this.connector.presenceChannel(channel);\n        }\n    }, {\n        key: 'leave',\n        value: function leave(channel) {\n            this.connector.leave(channel);\n        }\n    }, {\n        key: 'socketId',\n        value: function socketId() {\n            return this.connector.socketId();\n        }\n    }, {\n        key: 'disconnect',\n        value: function disconnect() {\n            this.connector.disconnect();\n        }\n    }]);\n    return Echo;\n}();\n\nmodule.exports = Echo;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"./node_modules/vue/dist/vue.common.js\"), __webpack_require__(\"./node_modules/axios/index.js\"), __webpack_require__(\"./node_modules/jquery/dist/jquery.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/laravel-echo/dist/echo.js\n");

/***/ }),

/***/ "./node_modules/pusher-js/dist/web/pusher.js":
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n * Pusher JavaScript Library v4.3.0\n * https://pusher.com/\n *\n * Copyright 2017, Pusher\n * Released under the MIT licence.\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pusher\"] = factory();\n\telse\n\t\troot[\"Pusher\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar pusher_1 = __webpack_require__(1);\n\tmodule.exports = pusher_1[\"default\"];\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar runtime_1 = __webpack_require__(2);\n\tvar Collections = __webpack_require__(9);\n\tvar dispatcher_1 = __webpack_require__(24);\n\tvar timeline_1 = __webpack_require__(39);\n\tvar level_1 = __webpack_require__(40);\n\tvar StrategyBuilder = __webpack_require__(41);\n\tvar timers_1 = __webpack_require__(12);\n\tvar defaults_1 = __webpack_require__(5);\n\tvar DefaultConfig = __webpack_require__(71);\n\tvar logger_1 = __webpack_require__(8);\n\tvar factory_1 = __webpack_require__(43);\n\tvar url_store_1 = __webpack_require__(14);\n\tvar Pusher = (function () {\n\t    function Pusher(app_key, options) {\n\t        var _this = this;\n\t        checkAppKey(app_key);\n\t        options = options || {};\n\t        if (!options.cluster && !(options.wsHost || options.httpHost)) {\n\t            var suffix = url_store_1[\"default\"].buildLogSuffix(\"javascriptQuickStart\");\n\t            logger_1[\"default\"].warn(\"You should always specify a cluster when connecting. \" + suffix);\n\t        }\n\t        this.key = app_key;\n\t        this.config = Collections.extend(DefaultConfig.getGlobalConfig(), options.cluster ? DefaultConfig.getClusterConfig(options.cluster) : {}, options);\n\t        this.channels = factory_1[\"default\"].createChannels();\n\t        this.global_emitter = new dispatcher_1[\"default\"]();\n\t        this.sessionID = Math.floor(Math.random() * 1000000000);\n\t        this.timeline = new timeline_1[\"default\"](this.key, this.sessionID, {\n\t            cluster: this.config.cluster,\n\t            features: Pusher.getClientFeatures(),\n\t            params: this.config.timelineParams || {},\n\t            limit: 50,\n\t            level: level_1[\"default\"].INFO,\n\t            version: defaults_1[\"default\"].VERSION\n\t        });\n\t        if (!this.config.disableStats) {\n\t            this.timelineSender = factory_1[\"default\"].createTimelineSender(this.timeline, {\n\t                host: this.config.statsHost,\n\t                path: \"/timeline/v2/\" + runtime_1[\"default\"].TimelineTransport.name\n\t            });\n\t        }\n\t        var getStrategy = function (options) {\n\t            var config = Collections.extend({}, _this.config, options);\n\t            return StrategyBuilder.build(runtime_1[\"default\"].getDefaultStrategy(config), config);\n\t        };\n\t        this.connection = factory_1[\"default\"].createConnectionManager(this.key, Collections.extend({ getStrategy: getStrategy,\n\t            timeline: this.timeline,\n\t            activityTimeout: this.config.activity_timeout,\n\t            pongTimeout: this.config.pong_timeout,\n\t            unavailableTimeout: this.config.unavailable_timeout\n\t        }, this.config, { useTLS: this.shouldUseTLS() }));\n\t        this.connection.bind('connected', function () {\n\t            _this.subscribeAll();\n\t            if (_this.timelineSender) {\n\t                _this.timelineSender.send(_this.connection.isUsingTLS());\n\t            }\n\t        });\n\t        this.connection.bind('message', function (params) {\n\t            var internal = (params.event.indexOf('pusher_internal:') === 0);\n\t            if (params.channel) {\n\t                var channel = _this.channel(params.channel);\n\t                if (channel) {\n\t                    channel.handleEvent(params.event, params.data);\n\t                }\n\t            }\n\t            if (!internal) {\n\t                _this.global_emitter.emit(params.event, params.data);\n\t            }\n\t        });\n\t        this.connection.bind('connecting', function () {\n\t            _this.channels.disconnect();\n\t        });\n\t        this.connection.bind('disconnected', function () {\n\t            _this.channels.disconnect();\n\t        });\n\t        this.connection.bind('error', function (err) {\n\t            logger_1[\"default\"].warn('Error', err);\n\t        });\n\t        Pusher.instances.push(this);\n\t        this.timeline.info({ instances: Pusher.instances.length });\n\t        if (Pusher.isReady) {\n\t            this.connect();\n\t        }\n\t    }\n\t    Pusher.ready = function () {\n\t        Pusher.isReady = true;\n\t        for (var i = 0, l = Pusher.instances.length; i < l; i++) {\n\t            Pusher.instances[i].connect();\n\t        }\n\t    };\n\t    Pusher.log = function (message) {\n\t        if (Pusher.logToConsole && (window).console && (window).console.log) {\n\t            (window).console.log(message);\n\t        }\n\t    };\n\t    Pusher.getClientFeatures = function () {\n\t        return Collections.keys(Collections.filterObject({ \"ws\": runtime_1[\"default\"].Transports.ws }, function (t) { return t.isSupported({}); }));\n\t    };\n\t    Pusher.prototype.channel = function (name) {\n\t        return this.channels.find(name);\n\t    };\n\t    Pusher.prototype.allChannels = function () {\n\t        return this.channels.all();\n\t    };\n\t    Pusher.prototype.connect = function () {\n\t        this.connection.connect();\n\t        if (this.timelineSender) {\n\t            if (!this.timelineSenderTimer) {\n\t                var usingTLS = this.connection.isUsingTLS();\n\t                var timelineSender = this.timelineSender;\n\t                this.timelineSenderTimer = new timers_1.PeriodicTimer(60000, function () {\n\t                    timelineSender.send(usingTLS);\n\t                });\n\t            }\n\t        }\n\t    };\n\t    Pusher.prototype.disconnect = function () {\n\t        this.connection.disconnect();\n\t        if (this.timelineSenderTimer) {\n\t            this.timelineSenderTimer.ensureAborted();\n\t            this.timelineSenderTimer = null;\n\t        }\n\t    };\n\t    Pusher.prototype.bind = function (event_name, callback, context) {\n\t        this.global_emitter.bind(event_name, callback, context);\n\t        return this;\n\t    };\n\t    Pusher.prototype.unbind = function (event_name, callback, context) {\n\t        this.global_emitter.unbind(event_name, callback, context);\n\t        return this;\n\t    };\n\t    Pusher.prototype.bind_global = function (callback) {\n\t        this.global_emitter.bind_global(callback);\n\t        return this;\n\t    };\n\t    Pusher.prototype.unbind_global = function (callback) {\n\t        this.global_emitter.unbind_global(callback);\n\t        return this;\n\t    };\n\t    Pusher.prototype.unbind_all = function (callback) {\n\t        this.global_emitter.unbind_all();\n\t        return this;\n\t    };\n\t    Pusher.prototype.subscribeAll = function () {\n\t        var channelName;\n\t        for (channelName in this.channels.channels) {\n\t            if (this.channels.channels.hasOwnProperty(channelName)) {\n\t                this.subscribe(channelName);\n\t            }\n\t        }\n\t    };\n\t    Pusher.prototype.subscribe = function (channel_name) {\n\t        var channel = this.channels.add(channel_name, this);\n\t        if (channel.subscriptionPending && channel.subscriptionCancelled) {\n\t            channel.reinstateSubscription();\n\t        }\n\t        else if (!channel.subscriptionPending && this.connection.state === \"connected\") {\n\t            channel.subscribe();\n\t        }\n\t        return channel;\n\t    };\n\t    Pusher.prototype.unsubscribe = function (channel_name) {\n\t        var channel = this.channels.find(channel_name);\n\t        if (channel && channel.subscriptionPending) {\n\t            channel.cancelSubscription();\n\t        }\n\t        else {\n\t            channel = this.channels.remove(channel_name);\n\t            if (channel && this.connection.state === \"connected\") {\n\t                channel.unsubscribe();\n\t            }\n\t        }\n\t    };\n\t    Pusher.prototype.send_event = function (event_name, data, channel) {\n\t        return this.connection.send_event(event_name, data, channel);\n\t    };\n\t    Pusher.prototype.shouldUseTLS = function () {\n\t        if (runtime_1[\"default\"].getProtocol() === \"https:\") {\n\t            return true;\n\t        }\n\t        else if (this.config.forceTLS === true) {\n\t            return true;\n\t        }\n\t        else {\n\t            return Boolean(this.config.encrypted);\n\t        }\n\t    };\n\t    Pusher.instances = [];\n\t    Pusher.isReady = false;\n\t    Pusher.logToConsole = false;\n\t    Pusher.Runtime = runtime_1[\"default\"];\n\t    Pusher.ScriptReceivers = runtime_1[\"default\"].ScriptReceivers;\n\t    Pusher.DependenciesReceivers = runtime_1[\"default\"].DependenciesReceivers;\n\t    Pusher.auth_callbacks = runtime_1[\"default\"].auth_callbacks;\n\t    return Pusher;\n\t}());\n\texports.__esModule = true;\n\texports[\"default\"] = Pusher;\n\tfunction checkAppKey(key) {\n\t    if (key === null || key === undefined) {\n\t        throw \"You must pass your app key when you instantiate Pusher.\";\n\t    }\n\t}\n\truntime_1[\"default\"].setup(Pusher);\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar dependencies_1 = __webpack_require__(3);\n\tvar xhr_auth_1 = __webpack_require__(7);\n\tvar jsonp_auth_1 = __webpack_require__(15);\n\tvar script_request_1 = __webpack_require__(16);\n\tvar jsonp_request_1 = __webpack_require__(17);\n\tvar script_receiver_factory_1 = __webpack_require__(4);\n\tvar jsonp_timeline_1 = __webpack_require__(18);\n\tvar transports_1 = __webpack_require__(19);\n\tvar net_info_1 = __webpack_require__(26);\n\tvar default_strategy_1 = __webpack_require__(27);\n\tvar transport_connection_initializer_1 = __webpack_require__(28);\n\tvar http_1 = __webpack_require__(29);\n\tvar Runtime = {\n\t    nextAuthCallbackID: 1,\n\t    auth_callbacks: {},\n\t    ScriptReceivers: script_receiver_factory_1.ScriptReceivers,\n\t    DependenciesReceivers: dependencies_1.DependenciesReceivers,\n\t    getDefaultStrategy: default_strategy_1[\"default\"],\n\t    Transports: transports_1[\"default\"],\n\t    transportConnectionInitializer: transport_connection_initializer_1[\"default\"],\n\t    HTTPFactory: http_1[\"default\"],\n\t    TimelineTransport: jsonp_timeline_1[\"default\"],\n\t    getXHRAPI: function () {\n\t        return window.XMLHttpRequest;\n\t    },\n\t    getWebSocketAPI: function () {\n\t        return window.WebSocket || window.MozWebSocket;\n\t    },\n\t    setup: function (PusherClass) {\n\t        var _this = this;\n\t        window.Pusher = PusherClass;\n\t        var initializeOnDocumentBody = function () {\n\t            _this.onDocumentBody(PusherClass.ready);\n\t        };\n\t        if (!window.JSON) {\n\t            dependencies_1.Dependencies.load(\"json2\", {}, initializeOnDocumentBody);\n\t        }\n\t        else {\n\t            initializeOnDocumentBody();\n\t        }\n\t    },\n\t    getDocument: function () {\n\t        return document;\n\t    },\n\t    getProtocol: function () {\n\t        return this.getDocument().location.protocol;\n\t    },\n\t    getAuthorizers: function () {\n\t        return { ajax: xhr_auth_1[\"default\"], jsonp: jsonp_auth_1[\"default\"] };\n\t    },\n\t    onDocumentBody: function (callback) {\n\t        var _this = this;\n\t        if (document.body) {\n\t            callback();\n\t        }\n\t        else {\n\t            setTimeout(function () {\n\t                _this.onDocumentBody(callback);\n\t            }, 0);\n\t        }\n\t    },\n\t    createJSONPRequest: function (url, data) {\n\t        return new jsonp_request_1[\"default\"](url, data);\n\t    },\n\t    createScriptRequest: function (src) {\n\t        return new script_request_1[\"default\"](src);\n\t    },\n\t    getLocalStorage: function () {\n\t        try {\n\t            return window.localStorage;\n\t        }\n\t        catch (e) {\n\t            return undefined;\n\t        }\n\t    },\n\t    createXHR: function () {\n\t        if (this.getXHRAPI()) {\n\t            return this.createXMLHttpRequest();\n\t        }\n\t        else {\n\t            return this.createMicrosoftXHR();\n\t        }\n\t    },\n\t    createXMLHttpRequest: function () {\n\t        var Constructor = this.getXHRAPI();\n\t        return new Constructor();\n\t    },\n\t    createMicrosoftXHR: function () {\n\t        return new ActiveXObject(\"Microsoft.XMLHTTP\");\n\t    },\n\t    getNetwork: function () {\n\t        return net_info_1.Network;\n\t    },\n\t    createWebSocket: function (url) {\n\t        var Constructor = this.getWebSocketAPI();\n\t        return new Constructor(url);\n\t    },\n\t    createSocketRequest: function (method, url) {\n\t        if (this.isXHRSupported()) {\n\t            return this.HTTPFactory.createXHR(method, url);\n\t        }\n\t        else if (this.isXDRSupported(url.indexOf(\"https:\") === 0)) {\n\t            return this.HTTPFactory.createXDR(method, url);\n\t        }\n\t        else {\n\t            throw \"Cross-origin HTTP requests are not supported\";\n\t        }\n\t    },\n\t    isXHRSupported: function () {\n\t        var Constructor = this.getXHRAPI();\n\t        return Boolean(Constructor) && (new Constructor()).withCredentials !== undefined;\n\t    },\n\t    isXDRSupported: function (useTLS) {\n\t        var protocol = useTLS ? \"https:\" : \"http:\";\n\t        var documentProtocol = this.getProtocol();\n\t        return Boolean((window['XDomainRequest'])) && documentProtocol === protocol;\n\t    },\n\t    addUnloadListener: function (listener) {\n\t        if (window.addEventListener !== undefined) {\n\t            window.addEventListener(\"unload\", listener, false);\n\t        }\n\t        else if (window.attachEvent !== undefined) {\n\t            window.attachEvent(\"onunload\", listener);\n\t        }\n\t    },\n\t    removeUnloadListener: function (listener) {\n\t        if (window.addEventListener !== undefined) {\n\t            window.removeEventListener(\"unload\", listener, false);\n\t        }\n\t        else if (window.detachEvent !== undefined) {\n\t            window.detachEvent(\"onunload\", listener);\n\t        }\n\t    }\n\t};\n\texports.__esModule = true;\n\texports[\"default\"] = Runtime;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar script_receiver_factory_1 = __webpack_require__(4);\n\tvar defaults_1 = __webpack_require__(5);\n\tvar dependency_loader_1 = __webpack_require__(6);\n\texports.DependenciesReceivers = new script_receiver_factory_1.ScriptReceiverFactory(\"_pusher_dependencies\", \"Pusher.DependenciesReceivers\");\n\texports.Dependencies = new dependency_loader_1[\"default\"]({\n\t    cdn_http: defaults_1[\"default\"].cdn_http,\n\t    cdn_https: defaults_1[\"default\"].cdn_https,\n\t    version: defaults_1[\"default\"].VERSION,\n\t    suffix: defaults_1[\"default\"].dependency_suffix,\n\t    receivers: exports.DependenciesReceivers\n\t});\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tvar ScriptReceiverFactory = (function () {\n\t    function ScriptReceiverFactory(prefix, name) {\n\t        this.lastId = 0;\n\t        this.prefix = prefix;\n\t        this.name = name;\n\t    }\n\t    ScriptReceiverFactory.prototype.create = function (callback) {\n\t        this.lastId++;\n\t        var number = this.lastId;\n\t        var id = this.prefix + number;\n\t        var name = this.name + \"[\" + number + \"]\";\n\t        var called = false;\n\t        var callbackWrapper = function () {\n\t            if (!called) {\n\t                callback.apply(null, arguments);\n\t                called = true;\n\t            }\n\t        };\n\t        this[number] = callbackWrapper;\n\t        return { number: number, id: id, name: name, callback: callbackWrapper };\n\t    };\n\t    ScriptReceiverFactory.prototype.remove = function (receiver) {\n\t        delete this[receiver.number];\n\t    };\n\t    return ScriptReceiverFactory;\n\t}());\n\texports.ScriptReceiverFactory = ScriptReceiverFactory;\n\texports.ScriptReceivers = new ScriptReceiverFactory(\"_pusher_script_\", \"Pusher.ScriptReceivers\");\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tvar Defaults = {\n\t    VERSION: \"4.3.0\",\n\t    PROTOCOL: 7,\n\t    host: 'ws.pusherapp.com',\n\t    ws_port: 80,\n\t    wss_port: 443,\n\t    ws_path: '',\n\t    sockjs_host: 'sockjs.pusher.com',\n\t    sockjs_http_port: 80,\n\t    sockjs_https_port: 443,\n\t    sockjs_path: \"/pusher\",\n\t    stats_host: 'stats.pusher.com',\n\t    channel_auth_endpoint: '/pusher/auth',\n\t    channel_auth_transport: 'ajax',\n\t    activity_timeout: 120000,\n\t    pong_timeout: 30000,\n\t    unavailable_timeout: 10000,\n\t    cdn_http: 'http://js.pusher.com',\n\t    cdn_https: 'https://js.pusher.com',\n\t    dependency_suffix: ''\n\t};\n\texports.__esModule = true;\n\texports[\"default\"] = Defaults;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar script_receiver_factory_1 = __webpack_require__(4);\n\tvar runtime_1 = __webpack_require__(2);\n\tvar DependencyLoader = (function () {\n\t    function DependencyLoader(options) {\n\t        this.options = options;\n\t        this.receivers = options.receivers || script_receiver_factory_1.ScriptReceivers;\n\t        this.loading = {};\n\t    }\n\t    DependencyLoader.prototype.load = function (name, options, callback) {\n\t        var self = this;\n\t        if (self.loading[name] && self.loading[name].length > 0) {\n\t            self.loading[name].push(callback);\n\t        }\n\t        else {\n\t            self.loading[name] = [callback];\n\t            var request = runtime_1[\"default\"].createScriptRequest(self.getPath(name, options));\n\t            var receiver = self.receivers.create(function (error) {\n\t                self.receivers.remove(receiver);\n\t                if (self.loading[name]) {\n\t                    var callbacks = self.loading[name];\n\t                    delete self.loading[name];\n\t                    var successCallback = function (wasSuccessful) {\n\t                        if (!wasSuccessful) {\n\t                            request.cleanup();\n\t                        }\n\t                    };\n\t                    for (var i = 0; i < callbacks.length; i++) {\n\t                        callbacks[i](error, successCallback);\n\t                    }\n\t                }\n\t            });\n\t            request.send(receiver);\n\t        }\n\t    };\n\t    DependencyLoader.prototype.getRoot = function (options) {\n\t        var cdn;\n\t        var protocol = runtime_1[\"default\"].getDocument().location.protocol;\n\t        if ((options && options.useTLS) || protocol === \"https:\") {\n\t            cdn = this.options.cdn_https;\n\t        }\n\t        else {\n\t            cdn = this.options.cdn_http;\n\t        }\n\t        return cdn.replace(/\\/*$/, \"\") + \"/\" + this.options.version;\n\t    };\n\t    DependencyLoader.prototype.getPath = function (name, options) {\n\t        return this.getRoot(options) + '/' + name + this.options.suffix + '.js';\n\t    };\n\t    ;\n\t    return DependencyLoader;\n\t}());\n\texports.__esModule = true;\n\texports[\"default\"] = DependencyLoader;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar logger_1 = __webpack_require__(8);\n\tvar runtime_1 = __webpack_require__(2);\n\tvar url_store_1 = __webpack_require__(14);\n\tvar ajax = function (context, socketId, callback) {\n\t    var self = this, xhr;\n\t    xhr = runtime_1[\"default\"].createXHR();\n\t    xhr.open(\"POST\", self.options.authEndpoint, true);\n\t    xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\t    for (var headerName in this.authOptions.headers) {\n\t        xhr.setRequestHeader(headerName, this.authOptions.headers[headerName]);\n\t    }\n\t    xhr.onreadystatechange = function () {\n\t        if (xhr.readyState === 4) {\n\t            if (xhr.status === 200) {\n\t                var data, parsed = false;\n\t                try {\n\t                    data = JSON.parse(xhr.responseText);\n\t                    parsed = true;\n\t                }\n\t                catch (e) {\n\t                    callback(true, 'JSON returned from webapp was invalid, yet status code was 200. Data was: ' + xhr.responseText);\n\t                }\n\t                if (parsed) {\n\t                    callback(false, data);\n\t                }\n\t            }\n\t            else {\n\t                var suffix = url_store_1[\"default\"].buildLogSuffix(\"authenticationEndpoint\");\n\t                logger_1[\"default\"].warn((\"Couldn't retrieve authentication info. \" + xhr.status) +\n\t                    (\"Clients must be authenticated to join private or presence channels. \" + suffix));\n\t                callback(true, xhr.status);\n\t            }\n\t        }\n\t    };\n\t    xhr.send(this.composeQuery(socketId));\n\t    return xhr;\n\t};\n\texports.__esModule = true;\n\texports[\"default\"] = ajax;\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar collections_1 = __webpack_require__(9);\n\tvar pusher_1 = __webpack_require__(1);\n\tvar Logger = {\n\t    debug: function () {\n\t        var args = [];\n\t        for (var _i = 0; _i < arguments.length; _i++) {\n\t            args[_i - 0] = arguments[_i];\n\t        }\n\t        if (!pusher_1[\"default\"].log) {\n\t            return;\n\t        }\n\t        pusher_1[\"default\"].log(collections_1.stringify.apply(this, arguments));\n\t    },\n\t    warn: function () {\n\t        var args = [];\n\t        for (var _i = 0; _i < arguments.length; _i++) {\n\t            args[_i - 0] = arguments[_i];\n\t        }\n\t        var message = collections_1.stringify.apply(this, arguments);\n\t        if (pusher_1[\"default\"].log) {\n\t            pusher_1[\"default\"].log(message);\n\t        }\n\t        else if ((window).console) {\n\t            if ((window).console.warn) {\n\t                (window).console.warn(message);\n\t            }\n\t            else if ((window).console.log) {\n\t                (window).console.log(message);\n\t            }\n\t        }\n\t    }\n\t};\n\texports.__esModule = true;\n\texports[\"default\"] = Logger;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar base64_1 = __webpack_require__(10);\n\tvar util_1 = __webpack_require__(11);\n\tfunction extend(target) {\n\t    var sources = [];\n\t    for (var _i = 1; _i < arguments.length; _i++) {\n\t        sources[_i - 1] = arguments[_i];\n\t    }\n\t    for (var i = 0; i < sources.length; i++) {\n\t        var extensions = sources[i];\n\t        for (var property in extensions) {\n\t            if (extensions[property] && extensions[property].constructor &&\n\t                extensions[property].constructor === Object) {\n\t                target[property] = extend(target[property] || {}, extensions[property]);\n\t            }\n\t            else {\n\t                target[property] = extensions[property];\n\t            }\n\t        }\n\t    }\n\t    return target;\n\t}\n\texports.extend = extend;\n\tfunction stringify() {\n\t    var m = [\"Pusher\"];\n\t    for (var i = 0; i < arguments.length; i++) {\n\t        if (typeof arguments[i] === \"string\") {\n\t            m.push(arguments[i]);\n\t        }\n\t        else {\n\t            m.push(safeJSONStringify(arguments[i]));\n\t        }\n\t    }\n\t    return m.join(\" : \");\n\t}\n\texports.stringify = stringify;\n\tfunction arrayIndexOf(array, item) {\n\t    var nativeIndexOf = Array.prototype.indexOf;\n\t    if (array === null) {\n\t        return -1;\n\t    }\n\t    if (nativeIndexOf && array.indexOf === nativeIndexOf) {\n\t        return array.indexOf(item);\n\t    }\n\t    for (var i = 0, l = array.length; i < l; i++) {\n\t        if (array[i] === item) {\n\t            return i;\n\t        }\n\t    }\n\t    return -1;\n\t}\n\texports.arrayIndexOf = arrayIndexOf;\n\tfunction objectApply(object, f) {\n\t    for (var key in object) {\n\t        if (Object.prototype.hasOwnProperty.call(object, key)) {\n\t            f(object[key], key, object);\n\t        }\n\t    }\n\t}\n\texports.objectApply = objectApply;\n\tfunction keys(object) {\n\t    var keys = [];\n\t    objectApply(object, function (_, key) {\n\t        keys.push(key);\n\t    });\n\t    return keys;\n\t}\n\texports.keys = keys;\n\tfunction values(object) {\n\t    var values = [];\n\t    objectApply(object, function (value) {\n\t        values.push(value);\n\t    });\n\t    return values;\n\t}\n\texports.values = values;\n\tfunction apply(array, f, context) {\n\t    for (var i = 0; i < array.length; i++) {\n\t        f.call(context || (window), array[i], i, array);\n\t    }\n\t}\n\texports.apply = apply;\n\tfunction map(array, f) {\n\t    var result = [];\n\t    for (var i = 0; i < array.length; i++) {\n\t        result.push(f(array[i], i, array, result));\n\t    }\n\t    return result;\n\t}\n\texports.map = map;\n\tfunction mapObject(object, f) {\n\t    var result = {};\n\t    objectApply(object, function (value, key) {\n\t        result[key] = f(value);\n\t    });\n\t    return result;\n\t}\n\texports.mapObject = mapObject;\n\tfunction filter(array, test) {\n\t    test = test || function (value) { return !!value; };\n\t    var result = [];\n\t    for (var i = 0; i < array.length; i++) {\n\t        if (test(array[i], i, array, result)) {\n\t            result.push(array[i]);\n\t        }\n\t    }\n\t    return result;\n\t}\n\texports.filter = filter;\n\tfunction filterObject(object, test) {\n\t    var result = {};\n\t    objectApply(object, function (value, key) {\n\t        if ((test && test(value, key, object, result)) || Boolean(value)) {\n\t            result[key] = value;\n\t        }\n\t    });\n\t    return result;\n\t}\n\texports.filterObject = filterObject;\n\tfunction flatten(object) {\n\t    var result = [];\n\t    objectApply(object, function (value, key) {\n\t        result.push([key, value]);\n\t    });\n\t    return result;\n\t}\n\texports.flatten = flatten;\n\tfunction any(array, test) {\n\t    for (var i = 0; i < array.length; i++) {\n\t        if (test(array[i], i, array)) {\n\t            return true;\n\t        }\n\t    }\n\t    return false;\n\t}\n\texports.any = any;\n\tfunction all(array, test) {\n\t    for (var i = 0; i < array.length; i++) {\n\t        if (!test(array[i], i, array)) {\n\t            return false;\n\t        }\n\t    }\n\t    return true;\n\t}\n\texports.all = all;\n\tfunction encodeParamsObject(data) {\n\t    return mapObject(data, function (value) {\n\t        if (typeof value === \"object\") {\n\t            value = safeJSONStringify(value);\n\t        }\n\t        return encodeURIComponent(base64_1[\"default\"](value.toString()));\n\t    });\n\t}\n\texports.encodeParamsObject = encodeParamsObject;\n\tfunction buildQueryString(data) {\n\t    var params = filterObject(data, function (value) {\n\t        return value !== undefined;\n\t    });\n\t    var query = map(flatten(encodeParamsObject(params)), util_1[\"default\"].method(\"join\", \"=\")).join(\"&\");\n\t    return query;\n\t}\n\texports.buildQueryString = buildQueryString;\n\tfunction decycleObject(object) {\n\t    var objects = [], paths = [];\n\t    return (function derez(value, path) {\n\t        var i, name, nu;\n\t        switch (typeof value) {\n\t            case 'object':\n\t                if (!value) {\n\t                    return null;\n\t                }\n\t                for (i = 0; i < objects.length; i += 1) {\n\t                    if (objects[i] === value) {\n\t                        return { $ref: paths[i] };\n\t                    }\n\t                }\n\t                objects.push(value);\n\t                paths.push(path);\n\t                if (Object.prototype.toString.apply(value) === '[object Array]') {\n\t                    nu = [];\n\t                    for (i = 0; i < value.length; i += 1) {\n\t                        nu[i] = derez(value[i], path + '[' + i + ']');\n\t                    }\n\t                }\n\t                else {\n\t                    nu = {};\n\t                    for (name in value) {\n\t                        if (Object.prototype.hasOwnProperty.call(value, name)) {\n\t                            nu[name] = derez(value[name], path + '[' + JSON.stringify(name) + ']');\n\t                        }\n\t                    }\n\t                }\n\t                return nu;\n\t            case 'number':\n\t            case 'string':\n\t            case 'boolean':\n\t                return value;\n\t        }\n\t    }(object, '$'));\n\t}\n\texports.decycleObject = decycleObject;\n\tfunction safeJSONStringify(source) {\n\t    try {\n\t        return JSON.stringify(source);\n\t    }\n\t    catch (e) {\n\t        return JSON.stringify(decycleObject(source));\n\t    }\n\t}\n\texports.safeJSONStringify = safeJSONStringify;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tfunction encode(s) {\n\t    return btoa(utob(s));\n\t}\n\texports.__esModule = true;\n\texports[\"default\"] = encode;\n\tvar fromCharCode = String.fromCharCode;\n\tvar b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\tvar b64tab = {};\n\tfor (var i = 0, l = b64chars.length; i < l; i++) {\n\t    b64tab[b64chars.charAt(i)] = i;\n\t}\n\tvar cb_utob = function (c) {\n\t    var cc = c.charCodeAt(0);\n\t    return cc < 0x80 ? c\n\t        : cc < 0x800 ? fromCharCode(0xc0 | (cc >>> 6)) +\n\t            fromCharCode(0x80 | (cc & 0x3f))\n\t            : fromCharCode(0xe0 | ((cc >>> 12) & 0x0f)) +\n\t                fromCharCode(0x80 | ((cc >>> 6) & 0x3f)) +\n\t                fromCharCode(0x80 | (cc & 0x3f));\n\t};\n\tvar utob = function (u) {\n\t    return u.replace(/[^\\x00-\\x7F]/g, cb_utob);\n\t};\n\tvar cb_encode = function (ccc) {\n\t    var padlen = [0, 2, 1][ccc.length % 3];\n\t    var ord = ccc.charCodeAt(0) << 16\n\t        | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\n\t        | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0));\n\t    var chars = [\n\t        b64chars.charAt(ord >>> 18),\n\t        b64chars.charAt((ord >>> 12) & 63),\n\t        padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n\t        padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n\t    ];\n\t    return chars.join('');\n\t};\n\tvar btoa = (window).btoa || function (b) {\n\t    return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n\t};\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar timers_1 = __webpack_require__(12);\n\tvar Util = {\n\t    now: function () {\n\t        if (Date.now) {\n\t            return Date.now();\n\t        }\n\t        else {\n\t            return new Date().valueOf();\n\t        }\n\t    },\n\t    defer: function (callback) {\n\t        return new timers_1.OneOffTimer(0, callback);\n\t    },\n\t    method: function (name) {\n\t        var args = [];\n\t        for (var _i = 1; _i < arguments.length; _i++) {\n\t            args[_i - 1] = arguments[_i];\n\t        }\n\t        var boundArguments = Array.prototype.slice.call(arguments, 1);\n\t        return function (object) {\n\t            return object[name].apply(object, boundArguments.concat(arguments));\n\t        };\n\t    }\n\t};\n\texports.__esModule = true;\n\texports[\"default\"] = Util;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar abstract_timer_1 = __webpack_require__(13);\n\tfunction clearTimeout(timer) {\n\t    (window).clearTimeout(timer);\n\t}\n\tfunction clearInterval(timer) {\n\t    (window).clearInterval(timer);\n\t}\n\tvar OneOffTimer = (function (_super) {\n\t    __extends(OneOffTimer, _super);\n\t    function OneOffTimer(delay, callback) {\n\t        _super.call(this, setTimeout, clearTimeout, delay, function (timer) {\n\t            callback();\n\t            return null;\n\t        });\n\t    }\n\t    return OneOffTimer;\n\t}(abstract_timer_1[\"default\"]));\n\texports.OneOffTimer = OneOffTimer;\n\tvar PeriodicTimer = (function (_super) {\n\t    __extends(PeriodicTimer, _super);\n\t    function PeriodicTimer(delay, callback) {\n\t        _super.call(this, setInterval, clearInterval, delay, function (timer) {\n\t            callback();\n\t            return timer;\n\t        });\n\t    }\n\t    return PeriodicTimer;\n\t}(abstract_timer_1[\"default\"]));\n\texports.PeriodicTimer = PeriodicTimer;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tvar Timer = (function () {\n\t    function Timer(set, clear, delay, callback) {\n\t        var _this = this;\n\t        this.clear = clear;\n\t        this.timer = set(function () {\n\t            if (_this.timer) {\n\t                _this.timer = callback(_this.timer);\n\t            }\n\t        }, delay);\n\t    }\n\t    Timer.prototype.isRunning = function () {\n\t        return this.timer !== null;\n\t    };\n\t    Timer.prototype.ensureAborted = function () {\n\t        if (this.timer) {\n\t            this.clear(this.timer);\n\t            this.timer = null;\n\t        }\n\t    };\n\t    return Timer;\n\t}());\n\texports.__esModule = true;\n\texports[\"default\"] = Timer;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tvar urlStore = {\n\t    baseUrl: \"https://pusher.com\",\n\t    urls: {\n\t        authenticationEndpoint: {\n\t            path: \"/docs/authenticating_users\"\n\t        },\n\t        javascriptQuickStart: {\n\t            path: \"/docs/javascript_quick_start\"\n\t        }\n\t    }\n\t};\n\tvar buildLogSuffix = function (key) {\n\t    var urlPrefix = \"See:\";\n\t    var urlObj = urlStore.urls[key];\n\t    if (!urlObj)\n\t        return \"\";\n\t    var url;\n\t    if (urlObj.fullUrl) {\n\t        url = urlObj.fullUrl;\n\t    }\n\t    else if (urlObj.path) {\n\t        url = urlStore.baseUrl + urlObj.path;\n\t    }\n\t    if (!url)\n\t        return \"\";\n\t    return urlPrefix + \" \" + url;\n\t};\n\texports.__esModule = true;\n\texports[\"default\"] = { buildLogSuffix: buildLogSuffix };\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar logger_1 = __webpack_require__(8);\n\tvar jsonp = function (context, socketId, callback) {\n\t    if (this.authOptions.headers !== undefined) {\n\t        logger_1[\"default\"].warn(\"Warn\", \"To send headers with the auth request, you must use AJAX, rather than JSONP.\");\n\t    }\n\t    var callbackName = context.nextAuthCallbackID.toString();\n\t    context.nextAuthCallbackID++;\n\t    var document = context.getDocument();\n\t    var script = document.createElement(\"script\");\n\t    context.auth_callbacks[callbackName] = function (data) {\n\t        callback(false, data);\n\t    };\n\t    var callback_name = \"Pusher.auth_callbacks['\" + callbackName + \"']\";\n\t    script.src = this.options.authEndpoint +\n\t        '?callback=' +\n\t        encodeURIComponent(callback_name) +\n\t        '&' +\n\t        this.composeQuery(socketId);\n\t    var head = document.getElementsByTagName(\"head\")[0] || document.documentElement;\n\t    head.insertBefore(script, head.firstChild);\n\t};\n\texports.__esModule = true;\n\texports[\"default\"] = jsonp;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tvar ScriptRequest = (function () {\n\t    function ScriptRequest(src) {\n\t        this.src = src;\n\t    }\n\t    ScriptRequest.prototype.send = function (receiver) {\n\t        var self = this;\n\t        var errorString = \"Error loading \" + self.src;\n\t        self.script = document.createElement(\"script\");\n\t        self.script.id = receiver.id;\n\t        self.script.src = self.src;\n\t        self.script.type = \"text/javascript\";\n\t        self.script.charset = \"UTF-8\";\n\t        if (self.script.addEventListener) {\n\t            self.script.onerror = function () {\n\t                receiver.callback(errorString);\n\t            };\n\t            self.script.onload = function () {\n\t                receiver.callback(null);\n\t            };\n\t        }\n\t        else {\n\t            self.script.onreadystatechange = function () {\n\t                if (self.script.readyState === 'loaded' ||\n\t                    self.script.readyState === 'complete') {\n\t                    receiver.callback(null);\n\t                }\n\t            };\n\t        }\n\t        if (self.script.async === undefined && document.attachEvent &&\n\t            /opera/i.test(navigator.userAgent)) {\n\t            self.errorScript = document.createElement(\"script\");\n\t            self.errorScript.id = receiver.id + \"_error\";\n\t            self.errorScript.text = receiver.name + \"('\" + errorString + \"');\";\n\t            self.script.async = self.errorScript.async = false;\n\t        }\n\t        else {\n\t            self.script.async = true;\n\t        }\n\t        var head = document.getElementsByTagName('head')[0];\n\t        head.insertBefore(self.script, head.firstChild);\n\t        if (self.errorScript) {\n\t            head.insertBefore(self.errorScript, self.script.nextSibling);\n\t        }\n\t    };\n\t    ScriptRequest.prototype.cleanup = function () {\n\t        if (this.script) {\n\t            this.script.onload = this.script.onerror = null;\n\t            this.script.onreadystatechange = null;\n\t        }\n\t        if (this.script && this.script.parentNode) {\n\t            this.script.parentNode.removeChild(this.script);\n\t        }\n\t        if (this.errorScript && this.errorScript.parentNode) {\n\t            this.errorScript.parentNode.removeChild(this.errorScript);\n\t        }\n\t        this.script = null;\n\t        this.errorScript = null;\n\t    };\n\t    return ScriptRequest;\n\t}());\n\texports.__esModule = true;\n\texports[\"default\"] = ScriptRequest;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Collections = __webpack_require__(9);\n\tvar runtime_1 = __webpack_require__(2);\n\tvar JSONPRequest = (function () {\n\t    function JSONPRequest(url, data) {\n\t        this.url = url;\n\t        this.data = data;\n\t    }\n\t    JSONPRequest.prototype.send = function (receiver) {\n\t        if (this.request) {\n\t            return;\n\t        }\n\t        var query = Collections.buildQueryString(this.data);\n\t        var url = this.url + \"/\" + receiver.number + \"?\" + query;\n\t        this.request = runtime_1[\"default\"].createScriptRequest(url);\n\t        this.request.send(receiver);\n\t    };\n\t    JSONPRequest.prototype.cleanup = function () {\n\t        if (this.request) {\n\t            this.request.cleanup();\n\t        }\n\t    };\n\t    return JSONPRequest;\n\t}());\n\texports.__esModule = true;\n\texports[\"default\"] = JSONPRequest;\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar runtime_1 = __webpack_require__(2);\n\tvar script_receiver_factory_1 = __webpack_require__(4);\n\tvar getAgent = function (sender, useTLS) {\n\t    return function (data, callback) {\n\t        var scheme = \"http\" + (useTLS ? \"s\" : \"\") + \"://\";\n\t        var url = scheme + (sender.host || sender.options.host) + sender.options.path;\n\t        var request = runtime_1[\"default\"].createJSONPRequest(url, data);\n\t        var receiver = runtime_1[\"default\"].ScriptReceivers.create(function (error, result) {\n\t            script_receiver_factory_1.ScriptReceivers.remove(receiver);\n\t            request.cleanup();\n\t            if (result && result.host) {\n\t                sender.host = result.host;\n\t            }\n\t            if (callback) {\n\t                callback(error, result);\n\t            }\n\t        });\n\t        request.send(receiver);\n\t    };\n\t};\n\tvar jsonp = {\n\t    name: 'jsonp',\n\t    getAgent: getAgent\n\t};\n\texports.__esModule = true;\n\texports[\"default\"] = jsonp;\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar transports_1 = __webpack_require__(20);\n\tvar transport_1 = __webpack_require__(22);\n\tvar URLSchemes = __webpack_require__(21);\n\tvar runtime_1 = __webpack_require__(2);\n\tvar dependencies_1 = __webpack_require__(3);\n\tvar Collections = __webpack_require__(9);\n\tvar SockJSTransport = new transport_1[\"default\"]({\n\t    file: \"sockjs\",\n\t    urls: URLSchemes.sockjs,\n\t    handlesActivityChecks: true,\n\t    supportsPing: false,\n\t    isSupported: function () {\n\t        return true;\n\t    },\n\t    isInitialized: function () {\n\t        return window.SockJS !== undefined;\n\t    },\n\t    getSocket: function (url, options) {\n\t        return new window.SockJS(url, null, {\n\t            js_path: dependencies_1.Dependencies.getPath(\"sockjs\", {\n\t                useTLS: options.useTLS\n\t            }),\n\t            ignore_null_origin: options.ignoreNullOrigin\n\t        });\n\t    },\n\t    beforeOpen: function (socket, path) {\n\t        socket.send(JSON.stringify({\n\t            path: path\n\t        }));\n\t    }\n\t});\n\tvar xdrConfiguration = {\n\t    isSupported: function (environment) {\n\t        var yes = runtime_1[\"default\"].isXDRSupported(environment.useTLS);\n\t        return yes;\n\t    }\n\t};\n\tvar XDRStreamingTransport = new transport_1[\"default\"](Collections.extend({}, transports_1.streamingConfiguration, xdrConfiguration));\n\tvar XDRPollingTransport = new transport_1[\"default\"](Collections.extend({}, transports_1.pollingConfiguration, xdrConfiguration));\n\ttransports_1[\"default\"].xdr_streaming = XDRStreamingTransport;\n\ttransports_1[\"default\"].xdr_polling = XDRPollingTransport;\n\ttransports_1[\"default\"].sockjs = SockJSTransport;\n\texports.__esModule = true;\n\texports[\"default\"] = transports_1[\"default\"];\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar URLSchemes = __webpack_require__(21);\n\tvar transport_1 = __webpack_require__(22);\n\tvar Collections = __webpack_require__(9);\n\tvar runtime_1 = __webpack_require__(2);\n\tvar WSTransport = new transport_1[\"default\"]({\n\t    urls: URLSchemes.ws,\n\t    handlesActivityChecks: false,\n\t    supportsPing: false,\n\t    isInitialized: function () {\n\t        return Boolean(runtime_1[\"default\"].getWebSocketAPI());\n\t    },\n\t    isSupported: function () {\n\t        return Boolean(runtime_1[\"default\"].getWebSocketAPI());\n\t    },\n\t    getSocket: function (url) {\n\t        return runtime_1[\"default\"].createWebSocket(url);\n\t    }\n\t});\n\tvar httpConfiguration = {\n\t    urls: URLSchemes.http,\n\t    handlesActivityChecks: false,\n\t    supportsPing: true,\n\t    isInitialized: function () {\n\t        return true;\n\t    }\n\t};\n\texports.streamingConfiguration = Collections.extend({ getSocket: function (url) {\n\t        return runtime_1[\"default\"].HTTPFactory.createStreamingSocket(url);\n\t    }\n\t}, httpConfiguration);\n\texports.pollingConfiguration = Collections.extend({ getSocket: function (url) {\n\t        return runtime_1[\"default\"].HTTPFactory.createPollingSocket(url);\n\t    }\n\t}, httpConfiguration);\n\tvar xhrConfiguration = {\n\t    isSupported: function () {\n\t        return runtime_1[\"default\"].isXHRSupported();\n\t    }\n\t};\n\tvar XHRStreamingTransport = new transport_1[\"default\"](Collections.extend({}, exports.streamingConfiguration, xhrConfiguration));\n\tvar XHRPollingTransport = new transport_1[\"default\"](Collections.extend({}, exports.pollingConfiguration, xhrConfiguration));\n\tvar Transports = {\n\t    ws: WSTransport,\n\t    xhr_streaming: XHRStreamingTransport,\n\t    xhr_polling: XHRPollingTransport\n\t};\n\texports.__esModule = true;\n\texports[\"default\"] = Transports;\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar defaults_1 = __webpack_require__(5);\n\tfunction getGenericURL(baseScheme, params, path) {\n\t    var scheme = baseScheme + (params.useTLS ? \"s\" : \"\");\n\t    var host = params.useTLS ? params.hostTLS : params.hostNonTLS;\n\t    return scheme + \"://\" + host + path;\n\t}\n\tfunction getGenericPath(key, queryString) {\n\t    var path = \"/app/\" + key;\n\t    var query = \"?protocol=\" + defaults_1[\"default\"].PROTOCOL +\n\t        \"&client=js\" +\n\t        \"&version=\" + defaults_1[\"default\"].VERSION +\n\t        (queryString ? (\"&\" + queryString) : \"\");\n\t    return path + query;\n\t}\n\texports.ws = {\n\t    getInitial: function (key, params) {\n\t        var path = (params.httpPath || \"\") + getGenericPath(key, \"flash=false\");\n\t        return getGenericURL(\"ws\", params, path);\n\t    }\n\t};\n\texports.http = {\n\t    getInitial: function (key, params) {\n\t        var path = (params.httpPath || \"/pusher\") + getGenericPath(key);\n\t        return getGenericURL(\"http\", params, path);\n\t    }\n\t};\n\texports.sockjs = {\n\t    getInitial: function (key, params) {\n\t        return getGenericURL(\"http\", params, params.httpPath || \"/pusher\");\n\t    },\n\t    getPath: function (key, params) {\n\t        return getGenericPath(key);\n\t    }\n\t};\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar transport_connection_1 = __webpack_require__(23);\n\tvar Transport = (function () {\n\t    function Transport(hooks) {\n\t        this.hooks = hooks;\n\t    }\n\t    Transport.prototype.isSupported = function (environment) {\n\t        return this.hooks.isSupported(environment);\n\t    };\n\t    Transport.prototype.createConnection = function (name, priority, key, options) {\n\t        return new transport_connection_1[\"default\"](this.hooks, name, priority, key, options);\n\t    };\n\t    return Transport;\n\t}());\n\texports.__esModule = true;\n\texports[\"default\"] = Transport;\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar util_1 = __webpack_require__(11);\n\tvar Collections = __webpack_require__(9);\n\tvar dispatcher_1 = __webpack_require__(24);\n\tvar logger_1 = __webpack_require__(8);\n\tvar runtime_1 = __webpack_require__(2);\n\tvar TransportConnection = (function (_super) {\n\t    __extends(TransportConnection, _super);\n\t    function TransportConnection(hooks, name, priority, key, options) {\n\t        _super.call(this);\n\t        this.initialize = runtime_1[\"default\"].transportConnectionInitializer;\n\t        this.hooks = hooks;\n\t        this.name = name;\n\t        this.priority = priority;\n\t        this.key = key;\n\t        this.options = options;\n\t        this.state = \"new\";\n\t        this.timeline = options.timeline;\n\t        this.activityTimeout = options.activityTimeout;\n\t        this.id = this.timeline.generateUniqueID();\n\t    }\n\t    TransportConnection.prototype.handlesActivityChecks = function () {\n\t        return Boolean(this.hooks.handlesActivityChecks);\n\t    };\n\t    TransportConnection.prototype.supportsPing = function () {\n\t        return Boolean(this.hooks.supportsPing);\n\t    };\n\t    TransportConnection.prototype.connect = function () {\n\t        var _this = this;\n\t        if (this.socket || this.state !== \"initialized\") {\n\t            return false;\n\t        }\n\t        var url = this.hooks.urls.getInitial(this.key, this.options);\n\t        try {\n\t            this.socket = this.hooks.getSocket(url, this.options);\n\t        }\n\t        catch (e) {\n\t            util_1[\"default\"].defer(function () {\n\t                _this.onError(e);\n\t                _this.changeState(\"closed\");\n\t            });\n\t            return false;\n\t        }\n\t        this.bindListeners();\n\t        logger_1[\"default\"].debug(\"Connecting\", { transport: this.name, url: url });\n\t        this.changeState(\"connecting\");\n\t        return true;\n\t    };\n\t    TransportConnection.prototype.close = function () {\n\t        if (this.socket) {\n\t            this.socket.close();\n\t            return true;\n\t        }\n\t        else {\n\t            return false;\n\t        }\n\t    };\n\t    TransportConnection.prototype.send = function (data) {\n\t        var _this = this;\n\t        if (this.state === \"open\") {\n\t            util_1[\"default\"].defer(function () {\n\t                if (_this.socket) {\n\t                    _this.socket.send(data);\n\t                }\n\t            });\n\t            return true;\n\t        }\n\t        else {\n\t            return false;\n\t        }\n\t    };\n\t    TransportConnection.prototype.ping = function () {\n\t        if (this.state === \"open\" && this.supportsPing()) {\n\t            this.socket.ping();\n\t        }\n\t    };\n\t    TransportConnection.prototype.onOpen = function () {\n\t        if (this.hooks.beforeOpen) {\n\t            this.hooks.beforeOpen(this.socket, this.hooks.urls.getPath(this.key, this.options));\n\t        }\n\t        this.changeState(\"open\");\n\t        this.socket.onopen = undefined;\n\t    };\n\t    TransportConnection.prototype.onError = function (error) {\n\t        this.emit(\"error\", { type: 'WebSocketError', error: error });\n\t        this.timeline.error(this.buildTimelineMessage({ error: error.toString() }));\n\t    };\n\t    TransportConnection.prototype.onClose = function (closeEvent) {\n\t        if (closeEvent) {\n\t            this.changeState(\"closed\", {\n\t                code: closeEvent.code,\n\t                reason: closeEvent.reason,\n\t                wasClean: closeEvent.wasClean\n\t            });\n\t        }\n\t        else {\n\t            this.changeState(\"closed\");\n\t        }\n\t        this.unbindListeners();\n\t        this.socket = undefined;\n\t    };\n\t    TransportConnection.prototype.onMessage = function (message) {\n\t        this.emit(\"message\", message);\n\t    };\n\t    TransportConnection.prototype.onActivity = function () {\n\t        this.emit(\"activity\");\n\t    };\n\t    TransportConnection.prototype.bindListeners = function () {\n\t        var _this = this;\n\t        this.socket.onopen = function () {\n\t            _this.onOpen();\n\t        };\n\t        this.socket.onerror = function (error) {\n\t            _this.onError(error);\n\t        };\n\t        this.socket.onclose = function (closeEvent) {\n\t            _this.onClose(closeEvent);\n\t        };\n\t        this.socket.onmessage = function (message) {\n\t            _this.onMessage(message);\n\t        };\n\t        if (this.supportsPing()) {\n\t            this.socket.onactivity = function () { _this.onActivity(); };\n\t        }\n\t    };\n\t    TransportConnection.prototype.unbindListeners = function () {\n\t        if (this.socket) {\n\t            this.socket.onopen = undefined;\n\t            this.socket.onerror = undefined;\n\t            this.socket.onclose = undefined;\n\t            this.socket.onmessage = undefined;\n\t            if (this.supportsPing()) {\n\t                this.socket.onactivity = undefined;\n\t            }\n\t        }\n\t    };\n\t    TransportConnection.prototype.changeState = function (state, params) {\n\t        this.state = state;\n\t        this.timeline.info(this.buildTimelineMessage({\n\t            state: state,\n\t            params: params\n\t        }));\n\t        this.emit(state, params);\n\t    };\n\t    TransportConnection.prototype.buildTimelineMessage = function (message) {\n\t        return Collections.extend({ cid: this.id }, message);\n\t    };\n\t    return TransportConnection;\n\t}(dispatcher_1[\"default\"]));\n\texports.__esModule = true;\n\texports[\"default\"] = TransportConnection;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Collections = __webpack_require__(9);\n\tvar callback_registry_1 = __webpack_require__(25);\n\tvar Dispatcher = (function () {\n\t    function Dispatcher(failThrough) {\n\t        this.callbacks = new callback_registry_1[\"default\"]();\n\t        this.global_callbacks = [];\n\t        this.failThrough = failThrough;\n\t    }\n\t    Dispatcher.prototype.bind = function (eventName, callback, context) {\n\t        this.callbacks.add(eventName, callback, context);\n\t        return this;\n\t    };\n\t    Dispatcher.prototype.bind_global = function (callback) {\n\t        this.global_callbacks.push(callback);\n\t        return this;\n\t    };\n\t    Dispatcher.prototype.unbind = function (eventName, callback, context) {\n\t        this.callbacks.remove(eventName, callback, context);\n\t        return this;\n\t    };\n\t    Dispatcher.prototype.unbind_global = function (callback) {\n\t        if (!callback) {\n\t            this.global_callbacks = [];\n\t            return this;\n\t        }\n\t        this.global_callbacks = Collections.filter(this.global_callbacks || [], function (c) { return c !== callback; });\n\t        return this;\n\t    };\n\t    Dispatcher.prototype.unbind_all = function () {\n\t        this.unbind();\n\t        this.unbind_global();\n\t        return this;\n\t    };\n\t    Dispatcher.prototype.emit = function (eventName, data) {\n\t        var i;\n\t        for (i = 0; i < this.global_callbacks.length; i++) {\n\t            this.global_callbacks[i](eventName, data);\n\t        }\n\t        var callbacks = this.callbacks.get(eventName);\n\t        if (callbacks && callbacks.length > 0) {\n\t            for (i = 0; i < callbacks.length; i++) {\n\t                callbacks[i].fn.call(callbacks[i].context || (window), data);\n\t            }\n\t        }\n\t        else if (this.failThrough) {\n\t            this.failThrough(eventName, data);\n\t        }\n\t        return this;\n\t    };\n\t    return Dispatcher;\n\t}());\n\texports.__esModule = true;\n\texports[\"default\"] = Dispatcher;\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Collections = __webpack_require__(9);\n\tvar CallbackRegistry = (function () {\n\t    function CallbackRegistry() {\n\t        this._callbacks = {};\n\t    }\n\t    CallbackRegistry.prototype.get = function (name) {\n\t        return this._callbacks[prefix(name)];\n\t    };\n\t    CallbackRegistry.prototype.add = function (name, callback, context) {\n\t        var prefixedEventName = prefix(name);\n\t        this._callbacks[prefixedEventName] = this._callbacks[prefixedEventName] || [];\n\t        this._callbacks[prefixedEventName].push({\n\t            fn: callback,\n\t            context: context\n\t        });\n\t    };\n\t    CallbackRegistry.prototype.remove = function (name, callback, context) {\n\t        if (!name && !callback && !context) {\n\t            this._callbacks = {};\n\t            return;\n\t        }\n\t        var names = name ? [prefix(name)] : Collections.keys(this._callbacks);\n\t        if (callback || context) {\n\t            this.removeCallback(names, callback, context);\n\t        }\n\t        else {\n\t            this.removeAllCallbacks(names);\n\t        }\n\t    };\n\t    CallbackRegistry.prototype.removeCallback = function (names, callback, context) {\n\t        Collections.apply(names, function (name) {\n\t            this._callbacks[name] = Collections.filter(this._callbacks[name] || [], function (binding) {\n\t                return (callback && callback !== binding.fn) ||\n\t                    (context && context !== binding.context);\n\t            });\n\t            if (this._callbacks[name].length === 0) {\n\t                delete this._callbacks[name];\n\t            }\n\t        }, this);\n\t    };\n\t    CallbackRegistry.prototype.removeAllCallbacks = function (names) {\n\t        Collections.apply(names, function (name) {\n\t            delete this._callbacks[name];\n\t        }, this);\n\t    };\n\t    return CallbackRegistry;\n\t}());\n\texports.__esModule = true;\n\texports[\"default\"] = CallbackRegistry;\n\tfunction prefix(name) {\n\t    return \"_\" + name;\n\t}\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar dispatcher_1 = __webpack_require__(24);\n\tvar NetInfo = (function (_super) {\n\t    __extends(NetInfo, _super);\n\t    function NetInfo() {\n\t        _super.call(this);\n\t        var self = this;\n\t        if (window.addEventListener !== undefined) {\n\t            window.addEventListener(\"online\", function () {\n\t                self.emit('online');\n\t            }, false);\n\t            window.addEventListener(\"offline\", function () {\n\t                self.emit('offline');\n\t            }, false);\n\t        }\n\t    }\n\t    NetInfo.prototype.isOnline = function () {\n\t        if (window.navigator.onLine === undefined) {\n\t            return true;\n\t        }\n\t        else {\n\t            return window.navigator.onLine;\n\t        }\n\t    };\n\t    return NetInfo;\n\t}(dispatcher_1[\"default\"]));\n\texports.NetInfo = NetInfo;\n\texports.Network = new NetInfo();\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tvar getDefaultStrategy = function (config) {\n\t    var wsStrategy;\n\t    if (config.useTLS) {\n\t        wsStrategy = [\n\t            \":best_connected_ever\",\n\t            \":ws_loop\",\n\t            [\":delayed\", 2000, [\":http_fallback_loop\"]]\n\t        ];\n\t    }\n\t    else {\n\t        wsStrategy = [\n\t            \":best_connected_ever\",\n\t            \":ws_loop\",\n\t            [\":delayed\", 2000, [\":wss_loop\"]],\n\t            [\":delayed\", 5000, [\":http_fallback_loop\"]]\n\t        ];\n\t    }\n\t    return [\n\t        [\":def\", \"ws_options\", {\n\t                hostNonTLS: config.wsHost + \":\" + config.wsPort,\n\t                hostTLS: config.wsHost + \":\" + config.wssPort,\n\t                httpPath: config.wsPath\n\t            }],\n\t        [\":def\", \"wss_options\", [\":extend\", \":ws_options\", {\n\t                    useTLS: true\n\t                }]],\n\t        [\":def\", \"sockjs_options\", {\n\t                hostNonTLS: config.httpHost + \":\" + config.httpPort,\n\t                hostTLS: config.httpHost + \":\" + config.httpsPort,\n\t                httpPath: config.httpPath\n\t            }],\n\t        [\":def\", \"timeouts\", {\n\t                loop: true,\n\t                timeout: 15000,\n\t                timeoutLimit: 60000\n\t            }],\n\t        [\":def\", \"ws_manager\", [\":transport_manager\", {\n\t                    lives: 2,\n\t                    minPingDelay: 10000,\n\t                    maxPingDelay: config.activity_timeout\n\t                }]],\n\t        [\":def\", \"streaming_manager\", [\":transport_manager\", {\n\t                    lives: 2,\n\t                    minPingDelay: 10000,\n\t                    maxPingDelay: config.activity_timeout\n\t                }]],\n\t        [\":def_transport\", \"ws\", \"ws\", 3, \":ws_options\", \":ws_manager\"],\n\t        [\":def_transport\", \"wss\", \"ws\", 3, \":wss_options\", \":ws_manager\"],\n\t        [\":def_transport\", \"sockjs\", \"sockjs\", 1, \":sockjs_options\"],\n\t        [\":def_transport\", \"xhr_streaming\", \"xhr_streaming\", 1, \":sockjs_options\", \":streaming_manager\"],\n\t        [\":def_transport\", \"xdr_streaming\", \"xdr_streaming\", 1, \":sockjs_options\", \":streaming_manager\"],\n\t        [\":def_transport\", \"xhr_polling\", \"xhr_polling\", 1, \":sockjs_options\"],\n\t        [\":def_transport\", \"xdr_polling\", \"xdr_polling\", 1, \":sockjs_options\"],\n\t        [\":def\", \"ws_loop\", [\":sequential\", \":timeouts\", \":ws\"]],\n\t        [\":def\", \"wss_loop\", [\":sequential\", \":timeouts\", \":wss\"]],\n\t        [\":def\", \"sockjs_loop\", [\":sequential\", \":timeouts\", \":sockjs\"]],\n\t        [\":def\", \"streaming_loop\", [\":sequential\", \":timeouts\",\n\t                [\":if\", [\":is_supported\", \":xhr_streaming\"],\n\t                    \":xhr_streaming\",\n\t                    \":xdr_streaming\"\n\t                ]\n\t            ]],\n\t        [\":def\", \"polling_loop\", [\":sequential\", \":timeouts\",\n\t                [\":if\", [\":is_supported\", \":xhr_polling\"],\n\t                    \":xhr_polling\",\n\t                    \":xdr_polling\"\n\t                ]\n\t            ]],\n\t        [\":def\", \"http_loop\", [\":if\", [\":is_supported\", \":streaming_loop\"], [\n\t                    \":best_connected_ever\",\n\t                    \":streaming_loop\",\n\t                    [\":delayed\", 4000, [\":polling_loop\"]]\n\t                ], [\n\t                    \":polling_loop\"\n\t                ]]],\n\t        [\":def\", \"http_fallback_loop\",\n\t            [\":if\", [\":is_supported\", \":http_loop\"], [\n\t                    \":http_loop\"\n\t                ], [\n\t                    \":sockjs_loop\"\n\t                ]]\n\t        ],\n\t        [\":def\", \"strategy\",\n\t            [\":cached\", 1800000,\n\t                [\":first_connected\",\n\t                    [\":if\", [\":is_supported\", \":ws\"],\n\t                        wsStrategy,\n\t                        \":http_fallback_loop\"\n\t                    ]\n\t                ]\n\t            ]\n\t        ]\n\t    ];\n\t};\n\texports.__esModule = true;\n\texports[\"default\"] = getDefaultStrategy;\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar dependencies_1 = __webpack_require__(3);\n\tfunction default_1() {\n\t    var self = this;\n\t    self.timeline.info(self.buildTimelineMessage({\n\t        transport: self.name + (self.options.useTLS ? \"s\" : \"\")\n\t    }));\n\t    if (self.hooks.isInitialized()) {\n\t        self.changeState(\"initialized\");\n\t    }\n\t    else if (self.hooks.file) {\n\t        self.changeState(\"initializing\");\n\t        dependencies_1.Dependencies.load(self.hooks.file, { useTLS: self.options.useTLS }, function (error, callback) {\n\t            if (self.hooks.isInitialized()) {\n\t                self.changeState(\"initialized\");\n\t                callback(true);\n\t            }\n\t            else {\n\t                if (error) {\n\t                    self.onError(error);\n\t                }\n\t                self.onClose();\n\t                callback(false);\n\t            }\n\t        });\n\t    }\n\t    else {\n\t        self.onClose();\n\t    }\n\t}\n\texports.__esModule = true;\n\texports[\"default\"] = default_1;\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar http_xdomain_request_1 = __webpack_require__(30);\n\tvar http_1 = __webpack_require__(32);\n\thttp_1[\"default\"].createXDR = function (method, url) {\n\t    return this.createRequest(http_xdomain_request_1[\"default\"], method, url);\n\t};\n\texports.__esModule = true;\n\texports[\"default\"] = http_1[\"default\"];\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Errors = __webpack_require__(31);\n\tvar hooks = {\n\t    getRequest: function (socket) {\n\t        var xdr = new window.XDomainRequest();\n\t        xdr.ontimeout = function () {\n\t            socket.emit(\"error\", new Errors.RequestTimedOut());\n\t            socket.close();\n\t        };\n\t        xdr.onerror = function (e) {\n\t            socket.emit(\"error\", e);\n\t            socket.close();\n\t        };\n\t        xdr.onprogress = function () {\n\t            if (xdr.responseText && xdr.responseText.length > 0) {\n\t                socket.onChunk(200, xdr.responseText);\n\t            }\n\t        };\n\t        xdr.onload = function () {\n\t            if (xdr.responseText && xdr.responseText.length > 0) {\n\t                socket.onChunk(200, xdr.responseText);\n\t            }\n\t            socket.emit(\"finished\", 200);\n\t            socket.close();\n\t        };\n\t        return xdr;\n\t    },\n\t    abortRequest: function (xdr) {\n\t        xdr.ontimeout = xdr.onerror = xdr.onprogress = xdr.onload = null;\n\t        xdr.abort();\n\t    }\n\t};\n\texports.__esModule = true;\n\texports[\"default\"] = hooks;\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar BadEventName = (function (_super) {\n\t    __extends(BadEventName, _super);\n\t    function BadEventName() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    return BadEventName;\n\t}(Error));\n\texports.BadEventName = BadEventName;\n\tvar RequestTimedOut = (function (_super) {\n\t    __extends(RequestTimedOut, _super);\n\t    function RequestTimedOut() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    return RequestTimedOut;\n\t}(Error));\n\texports.RequestTimedOut = RequestTimedOut;\n\tvar TransportPriorityTooLow = (function (_super) {\n\t    __extends(TransportPriorityTooLow, _super);\n\t    function TransportPriorityTooLow() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    return TransportPriorityTooLow;\n\t}(Error));\n\texports.TransportPriorityTooLow = TransportPriorityTooLow;\n\tvar TransportClosed = (function (_super) {\n\t    __extends(TransportClosed, _super);\n\t    function TransportClosed() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    return TransportClosed;\n\t}(Error));\n\texports.TransportClosed = TransportClosed;\n\tvar UnsupportedFeature = (function (_super) {\n\t    __extends(UnsupportedFeature, _super);\n\t    function UnsupportedFeature() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    return UnsupportedFeature;\n\t}(Error));\n\texports.UnsupportedFeature = UnsupportedFeature;\n\tvar UnsupportedTransport = (function (_super) {\n\t    __extends(UnsupportedTransport, _super);\n\t    function UnsupportedTransport() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    return UnsupportedTransport;\n\t}(Error));\n\texports.UnsupportedTransport = UnsupportedTransport;\n\tvar UnsupportedStrategy = (function (_super) {\n\t    __extends(UnsupportedStrategy, _super);\n\t    function UnsupportedStrategy() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    return UnsupportedStrategy;\n\t}(Error));\n\texports.UnsupportedStrategy = UnsupportedStrategy;\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar http_request_1 = __webpack_require__(33);\n\tvar http_socket_1 = __webpack_require__(34);\n\tvar http_streaming_socket_1 = __webpack_require__(36);\n\tvar http_polling_socket_1 = __webpack_require__(37);\n\tvar http_xhr_request_1 = __webpack_require__(38);\n\tvar HTTP = {\n\t    createStreamingSocket: function (url) {\n\t        return this.createSocket(http_streaming_socket_1[\"default\"], url);\n\t    },\n\t    createPollingSocket: function (url) {\n\t        return this.createSocket(http_polling_socket_1[\"default\"], url);\n\t    },\n\t    createSocket: function (hooks, url) {\n\t        return new http_socket_1[\"default\"](hooks, url);\n\t    },\n\t    createXHR: function (method, url) {\n\t        return this.createRequest(http_xhr_request_1[\"default\"], method, url);\n\t    },\n\t    createRequest: function (hooks, method, url) {\n\t        return new http_request_1[\"default\"](hooks, method, url);\n\t    }\n\t};\n\texports.__esModule = true;\n\texports[\"default\"] = HTTP;\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar runtime_1 = __webpack_require__(2);\n\tvar dispatcher_1 = __webpack_require__(24);\n\tvar MAX_BUFFER_LENGTH = 256 * 1024;\n\tvar HTTPRequest = (function (_super) {\n\t    __extends(HTTPRequest, _super);\n\t    function HTTPRequest(hooks, method, url) {\n\t        _super.call(this);\n\t        this.hooks = hooks;\n\t        this.method = method;\n\t        this.url = url;\n\t    }\n\t    HTTPRequest.prototype.start = function (payload) {\n\t        var _this = this;\n\t        this.position = 0;\n\t        this.xhr = this.hooks.getRequest(this);\n\t        this.unloader = function () {\n\t            _this.close();\n\t        };\n\t        runtime_1[\"default\"].addUnloadListener(this.unloader);\n\t        this.xhr.open(this.method, this.url, true);\n\t        if (this.xhr.setRequestHeader) {\n\t            this.xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n\t        }\n\t        this.xhr.send(payload);\n\t    };\n\t    HTTPRequest.prototype.close = function () {\n\t        if (this.unloader) {\n\t            runtime_1[\"default\"].removeUnloadListener(this.unloader);\n\t            this.unloader = null;\n\t        }\n\t        if (this.xhr) {\n\t            this.hooks.abortRequest(this.xhr);\n\t            this.xhr = null;\n\t        }\n\t    };\n\t    HTTPRequest.prototype.onChunk = function (status, data) {\n\t        while (true) {\n\t            var chunk = this.advanceBuffer(data);\n\t            if (chunk) {\n\t                this.emit(\"chunk\", { status: status, data: chunk });\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        if (this.isBufferTooLong(data)) {\n\t            this.emit(\"buffer_too_long\");\n\t        }\n\t    };\n\t    HTTPRequest.prototype.advanceBuffer = function (buffer) {\n\t        var unreadData = buffer.slice(this.position);\n\t        var endOfLinePosition = unreadData.indexOf(\"\\n\");\n\t        if (endOfLinePosition !== -1) {\n\t            this.position += endOfLinePosition + 1;\n\t            return unreadData.slice(0, endOfLinePosition);\n\t        }\n\t        else {\n\t            return null;\n\t        }\n\t    };\n\t    HTTPRequest.prototype.isBufferTooLong = function (buffer) {\n\t        return this.position === buffer.length && buffer.length > MAX_BUFFER_LENGTH;\n\t    };\n\t    return HTTPRequest;\n\t}(dispatcher_1[\"default\"]));\n\texports.__esModule = true;\n\texports[\"default\"] = HTTPRequest;\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar state_1 = __webpack_require__(35);\n\tvar util_1 = __webpack_require__(11);\n\tvar runtime_1 = __webpack_require__(2);\n\tvar autoIncrement = 1;\n\tvar HTTPSocket = (function () {\n\t    function HTTPSocket(hooks, url) {\n\t        this.hooks = hooks;\n\t        this.session = randomNumber(1000) + \"/\" + randomString(8);\n\t        this.location = getLocation(url);\n\t        this.readyState = state_1[\"default\"].CONNECTING;\n\t        this.openStream();\n\t    }\n\t    HTTPSocket.prototype.send = function (payload) {\n\t        return this.sendRaw(JSON.stringify([payload]));\n\t    };\n\t    HTTPSocket.prototype.ping = function () {\n\t        this.hooks.sendHeartbeat(this);\n\t    };\n\t    HTTPSocket.prototype.close = function (code, reason) {\n\t        this.onClose(code, reason, true);\n\t    };\n\t    HTTPSocket.prototype.sendRaw = function (payload) {\n\t        if (this.readyState === state_1[\"default\"].OPEN) {\n\t            try {\n\t                runtime_1[\"default\"].createSocketRequest(\"POST\", getUniqueURL(getSendURL(this.location, this.session))).start(payload);\n\t                return true;\n\t            }\n\t            catch (e) {\n\t                return false;\n\t            }\n\t        }\n\t        else {\n\t            return false;\n\t        }\n\t    };\n\t    HTTPSocket.prototype.reconnect = function () {\n\t        this.closeStream();\n\t        this.openStream();\n\t    };\n\t    ;\n\t    HTTPSocket.prototype.onClose = function (code, reason, wasClean) {\n\t        this.closeStream();\n\t        this.readyState = state_1[\"default\"].CLOSED;\n\t        if (this.onclose) {\n\t            this.onclose({\n\t                code: code,\n\t                reason: reason,\n\t                wasClean: wasClean\n\t            });\n\t        }\n\t    };\n\t    HTTPSocket.prototype.onChunk = function (chunk) {\n\t        if (chunk.status !== 200) {\n\t            return;\n\t        }\n\t        if (this.readyState === state_1[\"default\"].OPEN) {\n\t            this.onActivity();\n\t        }\n\t        var payload;\n\t        var type = chunk.data.slice(0, 1);\n\t        switch (type) {\n\t            case 'o':\n\t                payload = JSON.parse(chunk.data.slice(1) || '{}');\n\t                this.onOpen(payload);\n\t                break;\n\t            case 'a':\n\t                payload = JSON.parse(chunk.data.slice(1) || '[]');\n\t                for (var i = 0; i < payload.length; i++) {\n\t                    this.onEvent(payload[i]);\n\t                }\n\t                break;\n\t            case 'm':\n\t                payload = JSON.parse(chunk.data.slice(1) || 'null');\n\t                this.onEvent(payload);\n\t                break;\n\t            case 'h':\n\t                this.hooks.onHeartbeat(this);\n\t                break;\n\t            case 'c':\n\t                payload = JSON.parse(chunk.data.slice(1) || '[]');\n\t                this.onClose(payload[0], payload[1], true);\n\t                break;\n\t        }\n\t    };\n\t    HTTPSocket.prototype.onOpen = function (options) {\n\t        if (this.readyState === state_1[\"default\"].CONNECTING) {\n\t            if (options && options.hostname) {\n\t                this.location.base = replaceHost(this.location.base, options.hostname);\n\t            }\n\t            this.readyState = state_1[\"default\"].OPEN;\n\t            if (this.onopen) {\n\t                this.onopen();\n\t            }\n\t        }\n\t        else {\n\t            this.onClose(1006, \"Server lost session\", true);\n\t        }\n\t    };\n\t    HTTPSocket.prototype.onEvent = function (event) {\n\t        if (this.readyState === state_1[\"default\"].OPEN && this.onmessage) {\n\t            this.onmessage({ data: event });\n\t        }\n\t    };\n\t    HTTPSocket.prototype.onActivity = function () {\n\t        if (this.onactivity) {\n\t            this.onactivity();\n\t        }\n\t    };\n\t    HTTPSocket.prototype.onError = function (error) {\n\t        if (this.onerror) {\n\t            this.onerror(error);\n\t        }\n\t    };\n\t    HTTPSocket.prototype.openStream = function () {\n\t        var _this = this;\n\t        this.stream = runtime_1[\"default\"].createSocketRequest(\"POST\", getUniqueURL(this.hooks.getReceiveURL(this.location, this.session)));\n\t        this.stream.bind(\"chunk\", function (chunk) {\n\t            _this.onChunk(chunk);\n\t        });\n\t        this.stream.bind(\"finished\", function (status) {\n\t            _this.hooks.onFinished(_this, status);\n\t        });\n\t        this.stream.bind(\"buffer_too_long\", function () {\n\t            _this.reconnect();\n\t        });\n\t        try {\n\t            this.stream.start();\n\t        }\n\t        catch (error) {\n\t            util_1[\"default\"].defer(function () {\n\t                _this.onError(error);\n\t                _this.onClose(1006, \"Could not start streaming\", false);\n\t            });\n\t        }\n\t    };\n\t    HTTPSocket.prototype.closeStream = function () {\n\t        if (this.stream) {\n\t            this.stream.unbind_all();\n\t            this.stream.close();\n\t            this.stream = null;\n\t        }\n\t    };\n\t    return HTTPSocket;\n\t}());\n\tfunction getLocation(url) {\n\t    var parts = /([^\\?]*)\\/*(\\??.*)/.exec(url);\n\t    return {\n\t        base: parts[1],\n\t        queryString: parts[2]\n\t    };\n\t}\n\tfunction getSendURL(url, session) {\n\t    return url.base + \"/\" + session + \"/xhr_send\";\n\t}\n\tfunction getUniqueURL(url) {\n\t    var separator = (url.indexOf('?') === -1) ? \"?\" : \"&\";\n\t    return url + separator + \"t=\" + (+new Date()) + \"&n=\" + autoIncrement++;\n\t}\n\tfunction replaceHost(url, hostname) {\n\t    var urlParts = /(https?:\\/\\/)([^\\/:]+)((\\/|:)?.*)/.exec(url);\n\t    return urlParts[1] + hostname + urlParts[3];\n\t}\n\tfunction randomNumber(max) {\n\t    return Math.floor(Math.random() * max);\n\t}\n\tfunction randomString(length) {\n\t    var result = [];\n\t    for (var i = 0; i < length; i++) {\n\t        result.push(randomNumber(32).toString(32));\n\t    }\n\t    return result.join('');\n\t}\n\texports.__esModule = true;\n\texports[\"default\"] = HTTPSocket;\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tvar State;\n\t(function (State) {\n\t    State[State[\"CONNECTING\"] = 0] = \"CONNECTING\";\n\t    State[State[\"OPEN\"] = 1] = \"OPEN\";\n\t    State[State[\"CLOSED\"] = 3] = \"CLOSED\";\n\t})(State || (State = {}));\n\texports.__esModule = true;\n\texports[\"default\"] = State;\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tvar hooks = {\n\t    getReceiveURL: function (url, session) {\n\t        return url.base + \"/\" + session + \"/xhr_streaming\" + url.queryString;\n\t    },\n\t    onHeartbeat: function (socket) {\n\t        socket.sendRaw(\"[]\");\n\t    },\n\t    sendHeartbeat: function (socket) {\n\t        socket.sendRaw(\"[]\");\n\t    },\n\t    onFinished: function (socket, status) {\n\t        socket.onClose(1006, \"Connection interrupted (\" + status + \")\", false);\n\t    }\n\t};\n\texports.__esModule = true;\n\texports[\"default\"] = hooks;\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tvar hooks = {\n\t    getReceiveURL: function (url, session) {\n\t        return url.base + \"/\" + session + \"/xhr\" + url.queryString;\n\t    },\n\t    onHeartbeat: function () {\n\t    },\n\t    sendHeartbeat: function (socket) {\n\t        socket.sendRaw(\"[]\");\n\t    },\n\t    onFinished: function (socket, status) {\n\t        if (status === 200) {\n\t            socket.reconnect();\n\t        }\n\t        else {\n\t            socket.onClose(1006, \"Connection interrupted (\" + status + \")\", false);\n\t        }\n\t    }\n\t};\n\texports.__esModule = true;\n\texports[\"default\"] = hooks;\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar runtime_1 = __webpack_require__(2);\n\tvar hooks = {\n\t    getRequest: function (socket) {\n\t        var Constructor = runtime_1[\"default\"].getXHRAPI();\n\t        var xhr = new Constructor();\n\t        xhr.onreadystatechange = xhr.onprogress = function () {\n\t            switch (xhr.readyState) {\n\t                case 3:\n\t                    if (xhr.responseText && xhr.responseText.length > 0) {\n\t                        socket.onChunk(xhr.status, xhr.responseText);\n\t                    }\n\t                    break;\n\t                case 4:\n\t                    if (xhr.responseText && xhr.responseText.length > 0) {\n\t                        socket.onChunk(xhr.status, xhr.responseText);\n\t                    }\n\t                    socket.emit(\"finished\", xhr.status);\n\t                    socket.close();\n\t                    break;\n\t            }\n\t        };\n\t        return xhr;\n\t    },\n\t    abortRequest: function (xhr) {\n\t        xhr.onreadystatechange = null;\n\t        xhr.abort();\n\t    }\n\t};\n\texports.__esModule = true;\n\texports[\"default\"] = hooks;\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Collections = __webpack_require__(9);\n\tvar util_1 = __webpack_require__(11);\n\tvar level_1 = __webpack_require__(40);\n\tvar Timeline = (function () {\n\t    function Timeline(key, session, options) {\n\t        this.key = key;\n\t        this.session = session;\n\t        this.events = [];\n\t        this.options = options || {};\n\t        this.sent = 0;\n\t        this.uniqueID = 0;\n\t    }\n\t    Timeline.prototype.log = function (level, event) {\n\t        if (level <= this.options.level) {\n\t            this.events.push(Collections.extend({}, event, { timestamp: util_1[\"default\"].now() }));\n\t            if (this.options.limit && this.events.length > this.options.limit) {\n\t                this.events.shift();\n\t            }\n\t        }\n\t    };\n\t    Timeline.prototype.error = function (event) {\n\t        this.log(level_1[\"default\"].ERROR, event);\n\t    };\n\t    Timeline.prototype.info = function (event) {\n\t        this.log(level_1[\"default\"].INFO, event);\n\t    };\n\t    Timeline.prototype.debug = function (event) {\n\t        this.log(level_1[\"default\"].DEBUG, event);\n\t    };\n\t    Timeline.prototype.isEmpty = function () {\n\t        return this.events.length === 0;\n\t    };\n\t    Timeline.prototype.send = function (sendfn, callback) {\n\t        var _this = this;\n\t        var data = Collections.extend({\n\t            session: this.session,\n\t            bundle: this.sent + 1,\n\t            key: this.key,\n\t            lib: \"js\",\n\t            version: this.options.version,\n\t            cluster: this.options.cluster,\n\t            features: this.options.features,\n\t            timeline: this.events\n\t        }, this.options.params);\n\t        this.events = [];\n\t        sendfn(data, function (error, result) {\n\t            if (!error) {\n\t                _this.sent++;\n\t            }\n\t            if (callback) {\n\t                callback(error, result);\n\t            }\n\t        });\n\t        return true;\n\t    };\n\t    Timeline.prototype.generateUniqueID = function () {\n\t        this.uniqueID++;\n\t        return this.uniqueID;\n\t    };\n\t    return Timeline;\n\t}());\n\texports.__esModule = true;\n\texports[\"default\"] = Timeline;\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tvar TimelineLevel;\n\t(function (TimelineLevel) {\n\t    TimelineLevel[TimelineLevel[\"ERROR\"] = 3] = \"ERROR\";\n\t    TimelineLevel[TimelineLevel[\"INFO\"] = 6] = \"INFO\";\n\t    TimelineLevel[TimelineLevel[\"DEBUG\"] = 7] = \"DEBUG\";\n\t})(TimelineLevel || (TimelineLevel = {}));\n\texports.__esModule = true;\n\texports[\"default\"] = TimelineLevel;\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Collections = __webpack_require__(9);\n\tvar util_1 = __webpack_require__(11);\n\tvar transport_manager_1 = __webpack_require__(42);\n\tvar Errors = __webpack_require__(31);\n\tvar transport_strategy_1 = __webpack_require__(64);\n\tvar sequential_strategy_1 = __webpack_require__(65);\n\tvar best_connected_ever_strategy_1 = __webpack_require__(66);\n\tvar cached_strategy_1 = __webpack_require__(67);\n\tvar delayed_strategy_1 = __webpack_require__(68);\n\tvar if_strategy_1 = __webpack_require__(69);\n\tvar first_connected_strategy_1 = __webpack_require__(70);\n\tvar runtime_1 = __webpack_require__(2);\n\tvar Transports = runtime_1[\"default\"].Transports;\n\texports.build = function (scheme, options) {\n\t    var context = Collections.extend({}, globalContext, options);\n\t    return evaluate(scheme, context)[1].strategy;\n\t};\n\tvar UnsupportedStrategy = {\n\t    isSupported: function () {\n\t        return false;\n\t    },\n\t    connect: function (_, callback) {\n\t        var deferred = util_1[\"default\"].defer(function () {\n\t            callback(new Errors.UnsupportedStrategy());\n\t        });\n\t        return {\n\t            abort: function () {\n\t                deferred.ensureAborted();\n\t            },\n\t            forceMinPriority: function () { }\n\t        };\n\t    }\n\t};\n\tfunction returnWithOriginalContext(f) {\n\t    return function (context) {\n\t        return [f.apply(this, arguments), context];\n\t    };\n\t}\n\tvar globalContext = {\n\t    extend: function (context, first, second) {\n\t        return [Collections.extend({}, first, second), context];\n\t    },\n\t    def: function (context, name, value) {\n\t        if (context[name] !== undefined) {\n\t            throw \"Redefining symbol \" + name;\n\t        }\n\t        context[name] = value;\n\t        return [undefined, context];\n\t    },\n\t    def_transport: function (context, name, type, priority, options, manager) {\n\t        var transportClass = Transports[type];\n\t        if (!transportClass) {\n\t            throw new Errors.UnsupportedTransport(type);\n\t        }\n\t        var enabled = (!context.enabledTransports ||\n\t            Collections.arrayIndexOf(context.enabledTransports, name) !== -1) &&\n\t            (!context.disabledTransports ||\n\t                Collections.arrayIndexOf(context.disabledTransports, name) === -1);\n\t        var transport;\n\t        if (enabled) {\n\t            transport = new transport_strategy_1[\"default\"](name, priority, manager ? manager.getAssistant(transportClass) : transportClass, Collections.extend({\n\t                key: context.key,\n\t                useTLS: context.useTLS,\n\t                timeline: context.timeline,\n\t                ignoreNullOrigin: context.ignoreNullOrigin\n\t            }, options));\n\t        }\n\t        else {\n\t            transport = UnsupportedStrategy;\n\t        }\n\t        var newContext = context.def(context, name, transport)[1];\n\t        newContext.Transports = context.Transports || {};\n\t        newContext.Transports[name] = transport;\n\t        return [undefined, newContext];\n\t    },\n\t    transport_manager: returnWithOriginalContext(function (_, options) {\n\t        return new transport_manager_1[\"default\"](options);\n\t    }),\n\t    sequential: returnWithOriginalContext(function (_, options) {\n\t        var strategies = Array.prototype.slice.call(arguments, 2);\n\t        return new sequential_strategy_1[\"default\"](strategies, options);\n\t    }),\n\t    cached: returnWithOriginalContext(function (context, ttl, strategy) {\n\t        return new cached_strategy_1[\"default\"](strategy, context.Transports, {\n\t            ttl: ttl,\n\t            timeline: context.timeline,\n\t            useTLS: context.useTLS\n\t        });\n\t    }),\n\t    first_connected: returnWithOriginalContext(function (_, strategy) {\n\t        return new first_connected_strategy_1[\"default\"](strategy);\n\t    }),\n\t    best_connected_ever: returnWithOriginalContext(function () {\n\t        var strategies = Array.prototype.slice.call(arguments, 1);\n\t        return new best_connected_ever_strategy_1[\"default\"](strategies);\n\t    }),\n\t    delayed: returnWithOriginalContext(function (_, delay, strategy) {\n\t        return new delayed_strategy_1[\"default\"](strategy, { delay: delay });\n\t    }),\n\t    \"if\": returnWithOriginalContext(function (_, test, trueBranch, falseBranch) {\n\t        return new if_strategy_1[\"default\"](test, trueBranch, falseBranch);\n\t    }),\n\t    is_supported: returnWithOriginalContext(function (_, strategy) {\n\t        return function () {\n\t            return strategy.isSupported();\n\t        };\n\t    })\n\t};\n\tfunction isSymbol(expression) {\n\t    return (typeof expression === \"string\") && expression.charAt(0) === \":\";\n\t}\n\tfunction getSymbolValue(expression, context) {\n\t    return context[expression.slice(1)];\n\t}\n\tfunction evaluateListOfExpressions(expressions, context) {\n\t    if (expressions.length === 0) {\n\t        return [[], context];\n\t    }\n\t    var head = evaluate(expressions[0], context);\n\t    var tail = evaluateListOfExpressions(expressions.slice(1), head[1]);\n\t    return [[head[0]].concat(tail[0]), tail[1]];\n\t}\n\tfunction evaluateString(expression, context) {\n\t    if (!isSymbol(expression)) {\n\t        return [expression, context];\n\t    }\n\t    var value = getSymbolValue(expression, context);\n\t    if (value === undefined) {\n\t        throw \"Undefined symbol \" + expression;\n\t    }\n\t    return [value, context];\n\t}\n\tfunction evaluateArray(expression, context) {\n\t    if (isSymbol(expression[0])) {\n\t        var f = getSymbolValue(expression[0], context);\n\t        if (expression.length > 1) {\n\t            if (typeof f !== \"function\") {\n\t                throw \"Calling non-function \" + expression[0];\n\t            }\n\t            var args = [Collections.extend({}, context)].concat(Collections.map(expression.slice(1), function (arg) {\n\t                return evaluate(arg, Collections.extend({}, context))[0];\n\t            }));\n\t            return f.apply(this, args);\n\t        }\n\t        else {\n\t            return [f, context];\n\t        }\n\t    }\n\t    else {\n\t        return evaluateListOfExpressions(expression, context);\n\t    }\n\t}\n\tfunction evaluate(expression, context) {\n\t    if (typeof expression === \"string\") {\n\t        return evaluateString(expression, context);\n\t    }\n\t    else if (typeof expression === \"object\") {\n\t        if (expression instanceof Array && expression.length > 0) {\n\t            return evaluateArray(expression, context);\n\t        }\n\t    }\n\t    return [expression, context];\n\t}\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar factory_1 = __webpack_require__(43);\n\tvar TransportManager = (function () {\n\t    function TransportManager(options) {\n\t        this.options = options || {};\n\t        this.livesLeft = this.options.lives || Infinity;\n\t    }\n\t    TransportManager.prototype.getAssistant = function (transport) {\n\t        return factory_1[\"default\"].createAssistantToTheTransportManager(this, transport, {\n\t            minPingDelay: this.options.minPingDelay,\n\t            maxPingDelay: this.options.maxPingDelay\n\t        });\n\t    };\n\t    TransportManager.prototype.isAlive = function () {\n\t        return this.livesLeft > 0;\n\t    };\n\t    TransportManager.prototype.reportDeath = function () {\n\t        this.livesLeft -= 1;\n\t    };\n\t    return TransportManager;\n\t}());\n\texports.__esModule = true;\n\texports[\"default\"] = TransportManager;\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar assistant_to_the_transport_manager_1 = __webpack_require__(44);\n\tvar handshake_1 = __webpack_require__(45);\n\tvar pusher_authorizer_1 = __webpack_require__(48);\n\tvar timeline_sender_1 = __webpack_require__(49);\n\tvar presence_channel_1 = __webpack_require__(50);\n\tvar private_channel_1 = __webpack_require__(51);\n\tvar encrypted_channel_1 = __webpack_require__(54);\n\tvar channel_1 = __webpack_require__(52);\n\tvar connection_manager_1 = __webpack_require__(62);\n\tvar channels_1 = __webpack_require__(63);\n\tvar Factory = {\n\t    createChannels: function () {\n\t        return new channels_1[\"default\"]();\n\t    },\n\t    createConnectionManager: function (key, options) {\n\t        return new connection_manager_1[\"default\"](key, options);\n\t    },\n\t    createChannel: function (name, pusher) {\n\t        return new channel_1[\"default\"](name, pusher);\n\t    },\n\t    createPrivateChannel: function (name, pusher) {\n\t        return new private_channel_1[\"default\"](name, pusher);\n\t    },\n\t    createPresenceChannel: function (name, pusher) {\n\t        return new presence_channel_1[\"default\"](name, pusher);\n\t    },\n\t    createEncryptedChannel: function (name, pusher) {\n\t        return new encrypted_channel_1[\"default\"](name, pusher);\n\t    },\n\t    createTimelineSender: function (timeline, options) {\n\t        return new timeline_sender_1[\"default\"](timeline, options);\n\t    },\n\t    createAuthorizer: function (channel, options) {\n\t        if (options.authorizer) {\n\t            return options.authorizer(channel, options);\n\t        }\n\t        return new pusher_authorizer_1[\"default\"](channel, options);\n\t    },\n\t    createHandshake: function (transport, callback) {\n\t        return new handshake_1[\"default\"](transport, callback);\n\t    },\n\t    createAssistantToTheTransportManager: function (manager, transport, options) {\n\t        return new assistant_to_the_transport_manager_1[\"default\"](manager, transport, options);\n\t    }\n\t};\n\texports.__esModule = true;\n\texports[\"default\"] = Factory;\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar util_1 = __webpack_require__(11);\n\tvar Collections = __webpack_require__(9);\n\tvar AssistantToTheTransportManager = (function () {\n\t    function AssistantToTheTransportManager(manager, transport, options) {\n\t        this.manager = manager;\n\t        this.transport = transport;\n\t        this.minPingDelay = options.minPingDelay;\n\t        this.maxPingDelay = options.maxPingDelay;\n\t        this.pingDelay = undefined;\n\t    }\n\t    AssistantToTheTransportManager.prototype.createConnection = function (name, priority, key, options) {\n\t        var _this = this;\n\t        options = Collections.extend({}, options, {\n\t            activityTimeout: this.pingDelay\n\t        });\n\t        var connection = this.transport.createConnection(name, priority, key, options);\n\t        var openTimestamp = null;\n\t        var onOpen = function () {\n\t            connection.unbind(\"open\", onOpen);\n\t            connection.bind(\"closed\", onClosed);\n\t            openTimestamp = util_1[\"default\"].now();\n\t        };\n\t        var onClosed = function (closeEvent) {\n\t            connection.unbind(\"closed\", onClosed);\n\t            if (closeEvent.code === 1002 || closeEvent.code === 1003) {\n\t                _this.manager.reportDeath();\n\t            }\n\t            else if (!closeEvent.wasClean && openTimestamp) {\n\t                var lifespan = util_1[\"default\"].now() - openTimestamp;\n\t                if (lifespan < 2 * _this.maxPingDelay) {\n\t                    _this.manager.reportDeath();\n\t                    _this.pingDelay = Math.max(lifespan / 2, _this.minPingDelay);\n\t                }\n\t            }\n\t        };\n\t        connection.bind(\"open\", onOpen);\n\t        return connection;\n\t    };\n\t    AssistantToTheTransportManager.prototype.isSupported = function (environment) {\n\t        return this.manager.isAlive() && this.transport.isSupported(environment);\n\t    };\n\t    return AssistantToTheTransportManager;\n\t}());\n\texports.__esModule = true;\n\texports[\"default\"] = AssistantToTheTransportManager;\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Collections = __webpack_require__(9);\n\tvar Protocol = __webpack_require__(46);\n\tvar connection_1 = __webpack_require__(47);\n\tvar Handshake = (function () {\n\t    function Handshake(transport, callback) {\n\t        this.transport = transport;\n\t        this.callback = callback;\n\t        this.bindListeners();\n\t    }\n\t    Handshake.prototype.close = function () {\n\t        this.unbindListeners();\n\t        this.transport.close();\n\t    };\n\t    Handshake.prototype.bindListeners = function () {\n\t        var _this = this;\n\t        this.onMessage = function (m) {\n\t            _this.unbindListeners();\n\t            var result;\n\t            try {\n\t                result = Protocol.processHandshake(m);\n\t            }\n\t            catch (e) {\n\t                _this.finish(\"error\", { error: e });\n\t                _this.transport.close();\n\t                return;\n\t            }\n\t            if (result.action === \"connected\") {\n\t                _this.finish(\"connected\", {\n\t                    connection: new connection_1[\"default\"](result.id, _this.transport),\n\t                    activityTimeout: result.activityTimeout\n\t                });\n\t            }\n\t            else {\n\t                _this.finish(result.action, { error: result.error });\n\t                _this.transport.close();\n\t            }\n\t        };\n\t        this.onClosed = function (closeEvent) {\n\t            _this.unbindListeners();\n\t            var action = Protocol.getCloseAction(closeEvent) || \"backoff\";\n\t            var error = Protocol.getCloseError(closeEvent);\n\t            _this.finish(action, { error: error });\n\t        };\n\t        this.transport.bind(\"message\", this.onMessage);\n\t        this.transport.bind(\"closed\", this.onClosed);\n\t    };\n\t    Handshake.prototype.unbindListeners = function () {\n\t        this.transport.unbind(\"message\", this.onMessage);\n\t        this.transport.unbind(\"closed\", this.onClosed);\n\t    };\n\t    Handshake.prototype.finish = function (action, params) {\n\t        this.callback(Collections.extend({ transport: this.transport, action: action }, params));\n\t    };\n\t    return Handshake;\n\t}());\n\texports.__esModule = true;\n\texports[\"default\"] = Handshake;\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\texports.decodeMessage = function (message) {\n\t    try {\n\t        var params = JSON.parse(message.data);\n\t        if (typeof params.data === 'string') {\n\t            try {\n\t                params.data = JSON.parse(params.data);\n\t            }\n\t            catch (e) {\n\t                if (!(e instanceof SyntaxError)) {\n\t                    throw e;\n\t                }\n\t            }\n\t        }\n\t        return params;\n\t    }\n\t    catch (e) {\n\t        throw { type: 'MessageParseError', error: e, data: message.data };\n\t    }\n\t};\n\texports.encodeMessage = function (message) {\n\t    return JSON.stringify(message);\n\t};\n\texports.processHandshake = function (message) {\n\t    message = exports.decodeMessage(message);\n\t    if (message.event === \"pusher:connection_established\") {\n\t        if (!message.data.activity_timeout) {\n\t            throw \"No activity timeout specified in handshake\";\n\t        }\n\t        return {\n\t            action: \"connected\",\n\t            id: message.data.socket_id,\n\t            activityTimeout: message.data.activity_timeout * 1000\n\t        };\n\t    }\n\t    else if (message.event === \"pusher:error\") {\n\t        return {\n\t            action: this.getCloseAction(message.data),\n\t            error: this.getCloseError(message.data)\n\t        };\n\t    }\n\t    else {\n\t        throw \"Invalid handshake\";\n\t    }\n\t};\n\texports.getCloseAction = function (closeEvent) {\n\t    if (closeEvent.code < 4000) {\n\t        if (closeEvent.code >= 1002 && closeEvent.code <= 1004) {\n\t            return \"backoff\";\n\t        }\n\t        else {\n\t            return null;\n\t        }\n\t    }\n\t    else if (closeEvent.code === 4000) {\n\t        return \"tls_only\";\n\t    }\n\t    else if (closeEvent.code < 4100) {\n\t        return \"refused\";\n\t    }\n\t    else if (closeEvent.code < 4200) {\n\t        return \"backoff\";\n\t    }\n\t    else if (closeEvent.code < 4300) {\n\t        return \"retry\";\n\t    }\n\t    else {\n\t        return \"refused\";\n\t    }\n\t};\n\texports.getCloseError = function (closeEvent) {\n\t    if (closeEvent.code !== 1000 && closeEvent.code !== 1001) {\n\t        return {\n\t            type: 'PusherError',\n\t            data: {\n\t                code: closeEvent.code,\n\t                message: closeEvent.reason || closeEvent.message\n\t            }\n\t        };\n\t    }\n\t    else {\n\t        return null;\n\t    }\n\t};\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Collections = __webpack_require__(9);\n\tvar dispatcher_1 = __webpack_require__(24);\n\tvar Protocol = __webpack_require__(46);\n\tvar logger_1 = __webpack_require__(8);\n\tvar Connection = (function (_super) {\n\t    __extends(Connection, _super);\n\t    function Connection(id, transport) {\n\t        _super.call(this);\n\t        this.id = id;\n\t        this.transport = transport;\n\t        this.activityTimeout = transport.activityTimeout;\n\t        this.bindListeners();\n\t    }\n\t    Connection.prototype.handlesActivityChecks = function () {\n\t        return this.transport.handlesActivityChecks();\n\t    };\n\t    Connection.prototype.send = function (data) {\n\t        return this.transport.send(data);\n\t    };\n\t    Connection.prototype.send_event = function (name, data, channel) {\n\t        var message = { event: name, data: data };\n\t        if (channel) {\n\t            message.channel = channel;\n\t        }\n\t        logger_1[\"default\"].debug('Event sent', message);\n\t        return this.send(Protocol.encodeMessage(message));\n\t    };\n\t    Connection.prototype.ping = function () {\n\t        if (this.transport.supportsPing()) {\n\t            this.transport.ping();\n\t        }\n\t        else {\n\t            this.send_event('pusher:ping', {});\n\t        }\n\t    };\n\t    Connection.prototype.close = function () {\n\t        this.transport.close();\n\t    };\n\t    Connection.prototype.bindListeners = function () {\n\t        var _this = this;\n\t        var listeners = {\n\t            message: function (m) {\n\t                var message;\n\t                try {\n\t                    message = Protocol.decodeMessage(m);\n\t                }\n\t                catch (e) {\n\t                    _this.emit('error', {\n\t                        type: 'MessageParseError',\n\t                        error: e,\n\t                        data: m.data\n\t                    });\n\t                }\n\t                if (message !== undefined) {\n\t                    logger_1[\"default\"].debug('Event recd', message);\n\t                    switch (message.event) {\n\t                        case 'pusher:error':\n\t                            _this.emit('error', { type: 'PusherError', data: message.data });\n\t                            break;\n\t                        case 'pusher:ping':\n\t                            _this.emit(\"ping\");\n\t                            break;\n\t                        case 'pusher:pong':\n\t                            _this.emit(\"pong\");\n\t                            break;\n\t                    }\n\t                    _this.emit('message', message);\n\t                }\n\t            },\n\t            activity: function () {\n\t                _this.emit(\"activity\");\n\t            },\n\t            error: function (error) {\n\t                _this.emit(\"error\", { type: \"WebSocketError\", error: error });\n\t            },\n\t            closed: function (closeEvent) {\n\t                unbindListeners();\n\t                if (closeEvent && closeEvent.code) {\n\t                    _this.handleCloseEvent(closeEvent);\n\t                }\n\t                _this.transport = null;\n\t                _this.emit(\"closed\");\n\t            }\n\t        };\n\t        var unbindListeners = function () {\n\t            Collections.objectApply(listeners, function (listener, event) {\n\t                _this.transport.unbind(event, listener);\n\t            });\n\t        };\n\t        Collections.objectApply(listeners, function (listener, event) {\n\t            _this.transport.bind(event, listener);\n\t        });\n\t    };\n\t    Connection.prototype.handleCloseEvent = function (closeEvent) {\n\t        var action = Protocol.getCloseAction(closeEvent);\n\t        var error = Protocol.getCloseError(closeEvent);\n\t        if (error) {\n\t            this.emit('error', error);\n\t        }\n\t        if (action) {\n\t            this.emit(action);\n\t        }\n\t    };\n\t    return Connection;\n\t}(dispatcher_1[\"default\"]));\n\texports.__esModule = true;\n\texports[\"default\"] = Connection;\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar runtime_1 = __webpack_require__(2);\n\tvar PusherAuthorizer = (function () {\n\t    function PusherAuthorizer(channel, options) {\n\t        this.channel = channel;\n\t        var authTransport = options.authTransport;\n\t        if (typeof runtime_1[\"default\"].getAuthorizers()[authTransport] === \"undefined\") {\n\t            throw \"'\" + authTransport + \"' is not a recognized auth transport\";\n\t        }\n\t        this.type = authTransport;\n\t        this.options = options;\n\t        this.authOptions = (options || {}).auth || {};\n\t    }\n\t    PusherAuthorizer.prototype.composeQuery = function (socketId) {\n\t        var query = 'socket_id=' + encodeURIComponent(socketId) +\n\t            '&channel_name=' + encodeURIComponent(this.channel.name);\n\t        for (var i in this.authOptions.params) {\n\t            query += \"&\" + encodeURIComponent(i) + \"=\" + encodeURIComponent(this.authOptions.params[i]);\n\t        }\n\t        return query;\n\t    };\n\t    PusherAuthorizer.prototype.authorize = function (socketId, callback) {\n\t        PusherAuthorizer.authorizers = PusherAuthorizer.authorizers || runtime_1[\"default\"].getAuthorizers();\n\t        return PusherAuthorizer.authorizers[this.type].call(this, runtime_1[\"default\"], socketId, callback);\n\t    };\n\t    return PusherAuthorizer;\n\t}());\n\texports.__esModule = true;\n\texports[\"default\"] = PusherAuthorizer;\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar runtime_1 = __webpack_require__(2);\n\tvar TimelineSender = (function () {\n\t    function TimelineSender(timeline, options) {\n\t        this.timeline = timeline;\n\t        this.options = options || {};\n\t    }\n\t    TimelineSender.prototype.send = function (useTLS, callback) {\n\t        if (this.timeline.isEmpty()) {\n\t            return;\n\t        }\n\t        this.timeline.send(runtime_1[\"default\"].TimelineTransport.getAgent(this, useTLS), callback);\n\t    };\n\t    return TimelineSender;\n\t}());\n\texports.__esModule = true;\n\texports[\"default\"] = TimelineSender;\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar private_channel_1 = __webpack_require__(51);\n\tvar logger_1 = __webpack_require__(8);\n\tvar members_1 = __webpack_require__(53);\n\tvar url_store_1 = __webpack_require__(14);\n\tvar PresenceChannel = (function (_super) {\n\t    __extends(PresenceChannel, _super);\n\t    function PresenceChannel(name, pusher) {\n\t        _super.call(this, name, pusher);\n\t        this.members = new members_1[\"default\"]();\n\t    }\n\t    PresenceChannel.prototype.authorize = function (socketId, callback) {\n\t        var _this = this;\n\t        _super.prototype.authorize.call(this, socketId, function (error, authData) {\n\t            if (!error) {\n\t                if (authData.channel_data === undefined) {\n\t                    var suffix = url_store_1[\"default\"].buildLogSuffix(\"authenticationEndpoint\");\n\t                    logger_1[\"default\"].warn((\"Invalid auth response for channel '\" + _this.name + \"',\") +\n\t                        (\"expected 'channel_data' field. \" + suffix));\n\t                    callback(\"Invalid auth response\");\n\t                    return;\n\t                }\n\t                var channelData = JSON.parse(authData.channel_data);\n\t                _this.members.setMyID(channelData.user_id);\n\t            }\n\t            callback(error, authData);\n\t        });\n\t    };\n\t    PresenceChannel.prototype.handleEvent = function (event, data) {\n\t        switch (event) {\n\t            case \"pusher_internal:subscription_succeeded\":\n\t                this.subscriptionPending = false;\n\t                this.subscribed = true;\n\t                if (this.subscriptionCancelled) {\n\t                    this.pusher.unsubscribe(this.name);\n\t                }\n\t                else {\n\t                    this.members.onSubscription(data);\n\t                    this.emit(\"pusher:subscription_succeeded\", this.members);\n\t                }\n\t                break;\n\t            case \"pusher_internal:member_added\":\n\t                var addedMember = this.members.addMember(data);\n\t                this.emit('pusher:member_added', addedMember);\n\t                break;\n\t            case \"pusher_internal:member_removed\":\n\t                var removedMember = this.members.removeMember(data);\n\t                if (removedMember) {\n\t                    this.emit('pusher:member_removed', removedMember);\n\t                }\n\t                break;\n\t            default:\n\t                private_channel_1[\"default\"].prototype.handleEvent.call(this, event, data);\n\t        }\n\t    };\n\t    PresenceChannel.prototype.disconnect = function () {\n\t        this.members.reset();\n\t        _super.prototype.disconnect.call(this);\n\t    };\n\t    return PresenceChannel;\n\t}(private_channel_1[\"default\"]));\n\texports.__esModule = true;\n\texports[\"default\"] = PresenceChannel;\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar factory_1 = __webpack_require__(43);\n\tvar channel_1 = __webpack_require__(52);\n\tvar PrivateChannel = (function (_super) {\n\t    __extends(PrivateChannel, _super);\n\t    function PrivateChannel() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    PrivateChannel.prototype.authorize = function (socketId, callback) {\n\t        var authorizer = factory_1[\"default\"].createAuthorizer(this, this.pusher.config);\n\t        return authorizer.authorize(socketId, callback);\n\t    };\n\t    return PrivateChannel;\n\t}(channel_1[\"default\"]));\n\texports.__esModule = true;\n\texports[\"default\"] = PrivateChannel;\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar dispatcher_1 = __webpack_require__(24);\n\tvar Errors = __webpack_require__(31);\n\tvar logger_1 = __webpack_require__(8);\n\tvar Channel = (function (_super) {\n\t    __extends(Channel, _super);\n\t    function Channel(name, pusher) {\n\t        _super.call(this, function (event, data) {\n\t            logger_1[\"default\"].debug('No callbacks on ' + name + ' for ' + event);\n\t        });\n\t        this.name = name;\n\t        this.pusher = pusher;\n\t        this.subscribed = false;\n\t        this.subscriptionPending = false;\n\t        this.subscriptionCancelled = false;\n\t    }\n\t    Channel.prototype.authorize = function (socketId, callback) {\n\t        return callback(false, {});\n\t    };\n\t    Channel.prototype.trigger = function (event, data) {\n\t        if (event.indexOf(\"client-\") !== 0) {\n\t            throw new Errors.BadEventName(\"Event '\" + event + \"' does not start with 'client-'\");\n\t        }\n\t        return this.pusher.send_event(event, data, this.name);\n\t    };\n\t    Channel.prototype.disconnect = function () {\n\t        this.subscribed = false;\n\t        this.subscriptionPending = false;\n\t    };\n\t    Channel.prototype.handleEvent = function (event, data) {\n\t        if (event.indexOf(\"pusher_internal:\") === 0) {\n\t            if (event === \"pusher_internal:subscription_succeeded\") {\n\t                this.subscriptionPending = false;\n\t                this.subscribed = true;\n\t                if (this.subscriptionCancelled) {\n\t                    this.pusher.unsubscribe(this.name);\n\t                }\n\t                else {\n\t                    this.emit(\"pusher:subscription_succeeded\", data);\n\t                }\n\t            }\n\t        }\n\t        else {\n\t            this.emit(event, data);\n\t        }\n\t    };\n\t    Channel.prototype.subscribe = function () {\n\t        var _this = this;\n\t        if (this.subscribed) {\n\t            return;\n\t        }\n\t        this.subscriptionPending = true;\n\t        this.subscriptionCancelled = false;\n\t        this.authorize(this.pusher.connection.socket_id, function (error, data) {\n\t            if (error) {\n\t                _this.handleEvent('pusher:subscription_error', data);\n\t            }\n\t            else {\n\t                _this.pusher.send_event('pusher:subscribe', {\n\t                    auth: data.auth,\n\t                    channel_data: data.channel_data,\n\t                    channel: _this.name\n\t                });\n\t            }\n\t        });\n\t    };\n\t    Channel.prototype.unsubscribe = function () {\n\t        this.subscribed = false;\n\t        this.pusher.send_event('pusher:unsubscribe', {\n\t            channel: this.name\n\t        });\n\t    };\n\t    Channel.prototype.cancelSubscription = function () {\n\t        this.subscriptionCancelled = true;\n\t    };\n\t    Channel.prototype.reinstateSubscription = function () {\n\t        this.subscriptionCancelled = false;\n\t    };\n\t    return Channel;\n\t}(dispatcher_1[\"default\"]));\n\texports.__esModule = true;\n\texports[\"default\"] = Channel;\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Collections = __webpack_require__(9);\n\tvar Members = (function () {\n\t    function Members() {\n\t        this.reset();\n\t    }\n\t    Members.prototype.get = function (id) {\n\t        if (Object.prototype.hasOwnProperty.call(this.members, id)) {\n\t            return {\n\t                id: id,\n\t                info: this.members[id]\n\t            };\n\t        }\n\t        else {\n\t            return null;\n\t        }\n\t    };\n\t    Members.prototype.each = function (callback) {\n\t        var _this = this;\n\t        Collections.objectApply(this.members, function (member, id) {\n\t            callback(_this.get(id));\n\t        });\n\t    };\n\t    Members.prototype.setMyID = function (id) {\n\t        this.myID = id;\n\t    };\n\t    Members.prototype.onSubscription = function (subscriptionData) {\n\t        this.members = subscriptionData.presence.hash;\n\t        this.count = subscriptionData.presence.count;\n\t        this.me = this.get(this.myID);\n\t    };\n\t    Members.prototype.addMember = function (memberData) {\n\t        if (this.get(memberData.user_id) === null) {\n\t            this.count++;\n\t        }\n\t        this.members[memberData.user_id] = memberData.user_info;\n\t        return this.get(memberData.user_id);\n\t    };\n\t    Members.prototype.removeMember = function (memberData) {\n\t        var member = this.get(memberData.user_id);\n\t        if (member) {\n\t            delete this.members[memberData.user_id];\n\t            this.count--;\n\t        }\n\t        return member;\n\t    };\n\t    Members.prototype.reset = function () {\n\t        this.members = {};\n\t        this.count = 0;\n\t        this.myID = null;\n\t        this.me = null;\n\t    };\n\t    return Members;\n\t}());\n\texports.__esModule = true;\n\texports[\"default\"] = Members;\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar private_channel_1 = __webpack_require__(51);\n\tvar Errors = __webpack_require__(31);\n\tvar logger_1 = __webpack_require__(8);\n\tvar tweetnacl_1 = __webpack_require__(55);\n\tvar tweetnacl_util_1 = __webpack_require__(57);\n\tvar EncryptedChannel = (function (_super) {\n\t    __extends(EncryptedChannel, _super);\n\t    function EncryptedChannel() {\n\t        _super.apply(this, arguments);\n\t        this.key = null;\n\t    }\n\t    EncryptedChannel.prototype.authorize = function (socketId, callback) {\n\t        var _this = this;\n\t        _super.prototype.authorize.call(this, socketId, function (error, authData) {\n\t            if (error) {\n\t                callback(true, authData);\n\t                return;\n\t            }\n\t            var sharedSecret = authData[\"shared_secret\"];\n\t            if (!sharedSecret) {\n\t                var errorMsg = \"No shared_secret key in auth payload for encrypted channel: \" + _this.name;\n\t                callback(true, errorMsg);\n\t                logger_1[\"default\"].warn(\"Error: \" + errorMsg);\n\t                return;\n\t            }\n\t            _this.key = tweetnacl_util_1.decodeBase64(sharedSecret);\n\t            delete authData[\"shared_secret\"];\n\t            callback(false, authData);\n\t        });\n\t    };\n\t    EncryptedChannel.prototype.trigger = function (event, data) {\n\t        throw new Errors.UnsupportedFeature('Client events are not currently supported for encrypted channels');\n\t    };\n\t    EncryptedChannel.prototype.handleEvent = function (event, data) {\n\t        if (event.indexOf(\"pusher_internal:\") === 0 || event.indexOf(\"pusher:\") === 0) {\n\t            _super.prototype.handleEvent.call(this, event, data);\n\t            return;\n\t        }\n\t        this.handleEncryptedEvent(event, data);\n\t    };\n\t    EncryptedChannel.prototype.handleEncryptedEvent = function (event, data) {\n\t        var _this = this;\n\t        if (!this.key) {\n\t            logger_1[\"default\"].debug('Received encrypted event before key has been retrieved from the authEndpoint');\n\t            return;\n\t        }\n\t        if (!data.ciphertext || !data.nonce) {\n\t            logger_1[\"default\"].warn('Unexpected format for encrypted event, expected object with `ciphertext` and `nonce` fields, got: ' + data);\n\t            return;\n\t        }\n\t        var cipherText = tweetnacl_util_1.decodeBase64(data.ciphertext);\n\t        if (cipherText.length < tweetnacl_1.secretbox.overheadLength) {\n\t            logger_1[\"default\"].warn(\"Expected encrypted event ciphertext length to be \" + tweetnacl_1.secretbox.overheadLength + \", got: \" + cipherText.length);\n\t            return;\n\t        }\n\t        var nonce = tweetnacl_util_1.decodeBase64(data.nonce);\n\t        if (nonce.length < tweetnacl_1.secretbox.nonceLength) {\n\t            logger_1[\"default\"].warn(\"Expected encrypted event nonce length to be \" + tweetnacl_1.secretbox.nonceLength + \", got: \" + nonce.length);\n\t            return;\n\t        }\n\t        var bytes = tweetnacl_1.secretbox.open(cipherText, nonce, this.key);\n\t        if (bytes === null) {\n\t            logger_1[\"default\"].debug('Failed to decrypted an event, probably because it was encrypted with a different key. Fetching a new key from the authEndpoint...');\n\t            this.authorize(this.pusher.connection.socket_id, function (error, authData) {\n\t                if (error) {\n\t                    logger_1[\"default\"].warn(\"Failed to make a request to the authEndpoint: \" + authData + \". Unable to fetch new key, so dropping encrypted event\");\n\t                    return;\n\t                }\n\t                bytes = tweetnacl_1.secretbox.open(cipherText, nonce, _this.key);\n\t                if (bytes === null) {\n\t                    logger_1[\"default\"].warn(\"Failed to decrypt event with new key. Dropping encrypted event\");\n\t                    return;\n\t                }\n\t                _this.emitJSON(event, tweetnacl_util_1.encodeUTF8(bytes));\n\t                return;\n\t            });\n\t            return;\n\t        }\n\t        this.emitJSON(event, tweetnacl_util_1.encodeUTF8(bytes));\n\t    };\n\t    EncryptedChannel.prototype.emitJSON = function (eventName, data) {\n\t        try {\n\t            this.emit(eventName, JSON.parse(data));\n\t        }\n\t        catch (e) {\n\t            this.emit(eventName, data);\n\t        }\n\t        return this;\n\t    };\n\t    return EncryptedChannel;\n\t}(private_channel_1[\"default\"]));\n\texports.__esModule = true;\n\texports[\"default\"] = EncryptedChannel;\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t(function(nacl) {\n\t'use strict';\n\n\t// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n\t// Public domain.\n\t//\n\t// Implementation derived from TweetNaCl version 20140427.\n\t// See for details: http://tweetnacl.cr.yp.to/\n\n\tvar gf = function(init) {\n\t  var i, r = new Float64Array(16);\n\t  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n\t  return r;\n\t};\n\n\t//  Pluggable, initialized in high-level API below.\n\tvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\n\tvar _0 = new Uint8Array(16);\n\tvar _9 = new Uint8Array(32); _9[0] = 9;\n\n\tvar gf0 = gf(),\n\t    gf1 = gf([1]),\n\t    _121665 = gf([0xdb41, 1]),\n\t    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n\t    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n\t    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n\t    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n\t    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\n\tfunction ts64(x, i, h, l) {\n\t  x[i]   = (h >> 24) & 0xff;\n\t  x[i+1] = (h >> 16) & 0xff;\n\t  x[i+2] = (h >>  8) & 0xff;\n\t  x[i+3] = h & 0xff;\n\t  x[i+4] = (l >> 24)  & 0xff;\n\t  x[i+5] = (l >> 16)  & 0xff;\n\t  x[i+6] = (l >>  8)  & 0xff;\n\t  x[i+7] = l & 0xff;\n\t}\n\n\tfunction vn(x, xi, y, yi, n) {\n\t  var i,d = 0;\n\t  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n\t  return (1 & ((d - 1) >>> 8)) - 1;\n\t}\n\n\tfunction crypto_verify_16(x, xi, y, yi) {\n\t  return vn(x,xi,y,yi,16);\n\t}\n\n\tfunction crypto_verify_32(x, xi, y, yi) {\n\t  return vn(x,xi,y,yi,32);\n\t}\n\n\tfunction core_salsa20(o, p, k, c) {\n\t  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n\t      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n\t      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n\t      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n\t      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n\t      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n\t      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n\t      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n\t      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n\t      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n\t      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n\t      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n\t      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n\t      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n\t      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n\t      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n\t  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n\t      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n\t      x15 = j15, u;\n\n\t  for (var i = 0; i < 20; i += 2) {\n\t    u = x0 + x12 | 0;\n\t    x4 ^= u<<7 | u>>>(32-7);\n\t    u = x4 + x0 | 0;\n\t    x8 ^= u<<9 | u>>>(32-9);\n\t    u = x8 + x4 | 0;\n\t    x12 ^= u<<13 | u>>>(32-13);\n\t    u = x12 + x8 | 0;\n\t    x0 ^= u<<18 | u>>>(32-18);\n\n\t    u = x5 + x1 | 0;\n\t    x9 ^= u<<7 | u>>>(32-7);\n\t    u = x9 + x5 | 0;\n\t    x13 ^= u<<9 | u>>>(32-9);\n\t    u = x13 + x9 | 0;\n\t    x1 ^= u<<13 | u>>>(32-13);\n\t    u = x1 + x13 | 0;\n\t    x5 ^= u<<18 | u>>>(32-18);\n\n\t    u = x10 + x6 | 0;\n\t    x14 ^= u<<7 | u>>>(32-7);\n\t    u = x14 + x10 | 0;\n\t    x2 ^= u<<9 | u>>>(32-9);\n\t    u = x2 + x14 | 0;\n\t    x6 ^= u<<13 | u>>>(32-13);\n\t    u = x6 + x2 | 0;\n\t    x10 ^= u<<18 | u>>>(32-18);\n\n\t    u = x15 + x11 | 0;\n\t    x3 ^= u<<7 | u>>>(32-7);\n\t    u = x3 + x15 | 0;\n\t    x7 ^= u<<9 | u>>>(32-9);\n\t    u = x7 + x3 | 0;\n\t    x11 ^= u<<13 | u>>>(32-13);\n\t    u = x11 + x7 | 0;\n\t    x15 ^= u<<18 | u>>>(32-18);\n\n\t    u = x0 + x3 | 0;\n\t    x1 ^= u<<7 | u>>>(32-7);\n\t    u = x1 + x0 | 0;\n\t    x2 ^= u<<9 | u>>>(32-9);\n\t    u = x2 + x1 | 0;\n\t    x3 ^= u<<13 | u>>>(32-13);\n\t    u = x3 + x2 | 0;\n\t    x0 ^= u<<18 | u>>>(32-18);\n\n\t    u = x5 + x4 | 0;\n\t    x6 ^= u<<7 | u>>>(32-7);\n\t    u = x6 + x5 | 0;\n\t    x7 ^= u<<9 | u>>>(32-9);\n\t    u = x7 + x6 | 0;\n\t    x4 ^= u<<13 | u>>>(32-13);\n\t    u = x4 + x7 | 0;\n\t    x5 ^= u<<18 | u>>>(32-18);\n\n\t    u = x10 + x9 | 0;\n\t    x11 ^= u<<7 | u>>>(32-7);\n\t    u = x11 + x10 | 0;\n\t    x8 ^= u<<9 | u>>>(32-9);\n\t    u = x8 + x11 | 0;\n\t    x9 ^= u<<13 | u>>>(32-13);\n\t    u = x9 + x8 | 0;\n\t    x10 ^= u<<18 | u>>>(32-18);\n\n\t    u = x15 + x14 | 0;\n\t    x12 ^= u<<7 | u>>>(32-7);\n\t    u = x12 + x15 | 0;\n\t    x13 ^= u<<9 | u>>>(32-9);\n\t    u = x13 + x12 | 0;\n\t    x14 ^= u<<13 | u>>>(32-13);\n\t    u = x14 + x13 | 0;\n\t    x15 ^= u<<18 | u>>>(32-18);\n\t  }\n\t   x0 =  x0 +  j0 | 0;\n\t   x1 =  x1 +  j1 | 0;\n\t   x2 =  x2 +  j2 | 0;\n\t   x3 =  x3 +  j3 | 0;\n\t   x4 =  x4 +  j4 | 0;\n\t   x5 =  x5 +  j5 | 0;\n\t   x6 =  x6 +  j6 | 0;\n\t   x7 =  x7 +  j7 | 0;\n\t   x8 =  x8 +  j8 | 0;\n\t   x9 =  x9 +  j9 | 0;\n\t  x10 = x10 + j10 | 0;\n\t  x11 = x11 + j11 | 0;\n\t  x12 = x12 + j12 | 0;\n\t  x13 = x13 + j13 | 0;\n\t  x14 = x14 + j14 | 0;\n\t  x15 = x15 + j15 | 0;\n\n\t  o[ 0] = x0 >>>  0 & 0xff;\n\t  o[ 1] = x0 >>>  8 & 0xff;\n\t  o[ 2] = x0 >>> 16 & 0xff;\n\t  o[ 3] = x0 >>> 24 & 0xff;\n\n\t  o[ 4] = x1 >>>  0 & 0xff;\n\t  o[ 5] = x1 >>>  8 & 0xff;\n\t  o[ 6] = x1 >>> 16 & 0xff;\n\t  o[ 7] = x1 >>> 24 & 0xff;\n\n\t  o[ 8] = x2 >>>  0 & 0xff;\n\t  o[ 9] = x2 >>>  8 & 0xff;\n\t  o[10] = x2 >>> 16 & 0xff;\n\t  o[11] = x2 >>> 24 & 0xff;\n\n\t  o[12] = x3 >>>  0 & 0xff;\n\t  o[13] = x3 >>>  8 & 0xff;\n\t  o[14] = x3 >>> 16 & 0xff;\n\t  o[15] = x3 >>> 24 & 0xff;\n\n\t  o[16] = x4 >>>  0 & 0xff;\n\t  o[17] = x4 >>>  8 & 0xff;\n\t  o[18] = x4 >>> 16 & 0xff;\n\t  o[19] = x4 >>> 24 & 0xff;\n\n\t  o[20] = x5 >>>  0 & 0xff;\n\t  o[21] = x5 >>>  8 & 0xff;\n\t  o[22] = x5 >>> 16 & 0xff;\n\t  o[23] = x5 >>> 24 & 0xff;\n\n\t  o[24] = x6 >>>  0 & 0xff;\n\t  o[25] = x6 >>>  8 & 0xff;\n\t  o[26] = x6 >>> 16 & 0xff;\n\t  o[27] = x6 >>> 24 & 0xff;\n\n\t  o[28] = x7 >>>  0 & 0xff;\n\t  o[29] = x7 >>>  8 & 0xff;\n\t  o[30] = x7 >>> 16 & 0xff;\n\t  o[31] = x7 >>> 24 & 0xff;\n\n\t  o[32] = x8 >>>  0 & 0xff;\n\t  o[33] = x8 >>>  8 & 0xff;\n\t  o[34] = x8 >>> 16 & 0xff;\n\t  o[35] = x8 >>> 24 & 0xff;\n\n\t  o[36] = x9 >>>  0 & 0xff;\n\t  o[37] = x9 >>>  8 & 0xff;\n\t  o[38] = x9 >>> 16 & 0xff;\n\t  o[39] = x9 >>> 24 & 0xff;\n\n\t  o[40] = x10 >>>  0 & 0xff;\n\t  o[41] = x10 >>>  8 & 0xff;\n\t  o[42] = x10 >>> 16 & 0xff;\n\t  o[43] = x10 >>> 24 & 0xff;\n\n\t  o[44] = x11 >>>  0 & 0xff;\n\t  o[45] = x11 >>>  8 & 0xff;\n\t  o[46] = x11 >>> 16 & 0xff;\n\t  o[47] = x11 >>> 24 & 0xff;\n\n\t  o[48] = x12 >>>  0 & 0xff;\n\t  o[49] = x12 >>>  8 & 0xff;\n\t  o[50] = x12 >>> 16 & 0xff;\n\t  o[51] = x12 >>> 24 & 0xff;\n\n\t  o[52] = x13 >>>  0 & 0xff;\n\t  o[53] = x13 >>>  8 & 0xff;\n\t  o[54] = x13 >>> 16 & 0xff;\n\t  o[55] = x13 >>> 24 & 0xff;\n\n\t  o[56] = x14 >>>  0 & 0xff;\n\t  o[57] = x14 >>>  8 & 0xff;\n\t  o[58] = x14 >>> 16 & 0xff;\n\t  o[59] = x14 >>> 24 & 0xff;\n\n\t  o[60] = x15 >>>  0 & 0xff;\n\t  o[61] = x15 >>>  8 & 0xff;\n\t  o[62] = x15 >>> 16 & 0xff;\n\t  o[63] = x15 >>> 24 & 0xff;\n\t}\n\n\tfunction core_hsalsa20(o,p,k,c) {\n\t  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n\t      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n\t      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n\t      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n\t      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n\t      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n\t      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n\t      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n\t      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n\t      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n\t      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n\t      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n\t      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n\t      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n\t      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n\t      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n\t  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n\t      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n\t      x15 = j15, u;\n\n\t  for (var i = 0; i < 20; i += 2) {\n\t    u = x0 + x12 | 0;\n\t    x4 ^= u<<7 | u>>>(32-7);\n\t    u = x4 + x0 | 0;\n\t    x8 ^= u<<9 | u>>>(32-9);\n\t    u = x8 + x4 | 0;\n\t    x12 ^= u<<13 | u>>>(32-13);\n\t    u = x12 + x8 | 0;\n\t    x0 ^= u<<18 | u>>>(32-18);\n\n\t    u = x5 + x1 | 0;\n\t    x9 ^= u<<7 | u>>>(32-7);\n\t    u = x9 + x5 | 0;\n\t    x13 ^= u<<9 | u>>>(32-9);\n\t    u = x13 + x9 | 0;\n\t    x1 ^= u<<13 | u>>>(32-13);\n\t    u = x1 + x13 | 0;\n\t    x5 ^= u<<18 | u>>>(32-18);\n\n\t    u = x10 + x6 | 0;\n\t    x14 ^= u<<7 | u>>>(32-7);\n\t    u = x14 + x10 | 0;\n\t    x2 ^= u<<9 | u>>>(32-9);\n\t    u = x2 + x14 | 0;\n\t    x6 ^= u<<13 | u>>>(32-13);\n\t    u = x6 + x2 | 0;\n\t    x10 ^= u<<18 | u>>>(32-18);\n\n\t    u = x15 + x11 | 0;\n\t    x3 ^= u<<7 | u>>>(32-7);\n\t    u = x3 + x15 | 0;\n\t    x7 ^= u<<9 | u>>>(32-9);\n\t    u = x7 + x3 | 0;\n\t    x11 ^= u<<13 | u>>>(32-13);\n\t    u = x11 + x7 | 0;\n\t    x15 ^= u<<18 | u>>>(32-18);\n\n\t    u = x0 + x3 | 0;\n\t    x1 ^= u<<7 | u>>>(32-7);\n\t    u = x1 + x0 | 0;\n\t    x2 ^= u<<9 | u>>>(32-9);\n\t    u = x2 + x1 | 0;\n\t    x3 ^= u<<13 | u>>>(32-13);\n\t    u = x3 + x2 | 0;\n\t    x0 ^= u<<18 | u>>>(32-18);\n\n\t    u = x5 + x4 | 0;\n\t    x6 ^= u<<7 | u>>>(32-7);\n\t    u = x6 + x5 | 0;\n\t    x7 ^= u<<9 | u>>>(32-9);\n\t    u = x7 + x6 | 0;\n\t    x4 ^= u<<13 | u>>>(32-13);\n\t    u = x4 + x7 | 0;\n\t    x5 ^= u<<18 | u>>>(32-18);\n\n\t    u = x10 + x9 | 0;\n\t    x11 ^= u<<7 | u>>>(32-7);\n\t    u = x11 + x10 | 0;\n\t    x8 ^= u<<9 | u>>>(32-9);\n\t    u = x8 + x11 | 0;\n\t    x9 ^= u<<13 | u>>>(32-13);\n\t    u = x9 + x8 | 0;\n\t    x10 ^= u<<18 | u>>>(32-18);\n\n\t    u = x15 + x14 | 0;\n\t    x12 ^= u<<7 | u>>>(32-7);\n\t    u = x12 + x15 | 0;\n\t    x13 ^= u<<9 | u>>>(32-9);\n\t    u = x13 + x12 | 0;\n\t    x14 ^= u<<13 | u>>>(32-13);\n\t    u = x14 + x13 | 0;\n\t    x15 ^= u<<18 | u>>>(32-18);\n\t  }\n\n\t  o[ 0] = x0 >>>  0 & 0xff;\n\t  o[ 1] = x0 >>>  8 & 0xff;\n\t  o[ 2] = x0 >>> 16 & 0xff;\n\t  o[ 3] = x0 >>> 24 & 0xff;\n\n\t  o[ 4] = x5 >>>  0 & 0xff;\n\t  o[ 5] = x5 >>>  8 & 0xff;\n\t  o[ 6] = x5 >>> 16 & 0xff;\n\t  o[ 7] = x5 >>> 24 & 0xff;\n\n\t  o[ 8] = x10 >>>  0 & 0xff;\n\t  o[ 9] = x10 >>>  8 & 0xff;\n\t  o[10] = x10 >>> 16 & 0xff;\n\t  o[11] = x10 >>> 24 & 0xff;\n\n\t  o[12] = x15 >>>  0 & 0xff;\n\t  o[13] = x15 >>>  8 & 0xff;\n\t  o[14] = x15 >>> 16 & 0xff;\n\t  o[15] = x15 >>> 24 & 0xff;\n\n\t  o[16] = x6 >>>  0 & 0xff;\n\t  o[17] = x6 >>>  8 & 0xff;\n\t  o[18] = x6 >>> 16 & 0xff;\n\t  o[19] = x6 >>> 24 & 0xff;\n\n\t  o[20] = x7 >>>  0 & 0xff;\n\t  o[21] = x7 >>>  8 & 0xff;\n\t  o[22] = x7 >>> 16 & 0xff;\n\t  o[23] = x7 >>> 24 & 0xff;\n\n\t  o[24] = x8 >>>  0 & 0xff;\n\t  o[25] = x8 >>>  8 & 0xff;\n\t  o[26] = x8 >>> 16 & 0xff;\n\t  o[27] = x8 >>> 24 & 0xff;\n\n\t  o[28] = x9 >>>  0 & 0xff;\n\t  o[29] = x9 >>>  8 & 0xff;\n\t  o[30] = x9 >>> 16 & 0xff;\n\t  o[31] = x9 >>> 24 & 0xff;\n\t}\n\n\tfunction crypto_core_salsa20(out,inp,k,c) {\n\t  core_salsa20(out,inp,k,c);\n\t}\n\n\tfunction crypto_core_hsalsa20(out,inp,k,c) {\n\t  core_hsalsa20(out,inp,k,c);\n\t}\n\n\tvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n\t            // \"expand 32-byte k\"\n\n\tfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n\t  var z = new Uint8Array(16), x = new Uint8Array(64);\n\t  var u, i;\n\t  for (i = 0; i < 16; i++) z[i] = 0;\n\t  for (i = 0; i < 8; i++) z[i] = n[i];\n\t  while (b >= 64) {\n\t    crypto_core_salsa20(x,z,k,sigma);\n\t    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n\t    u = 1;\n\t    for (i = 8; i < 16; i++) {\n\t      u = u + (z[i] & 0xff) | 0;\n\t      z[i] = u & 0xff;\n\t      u >>>= 8;\n\t    }\n\t    b -= 64;\n\t    cpos += 64;\n\t    mpos += 64;\n\t  }\n\t  if (b > 0) {\n\t    crypto_core_salsa20(x,z,k,sigma);\n\t    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n\t  }\n\t  return 0;\n\t}\n\n\tfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n\t  var z = new Uint8Array(16), x = new Uint8Array(64);\n\t  var u, i;\n\t  for (i = 0; i < 16; i++) z[i] = 0;\n\t  for (i = 0; i < 8; i++) z[i] = n[i];\n\t  while (b >= 64) {\n\t    crypto_core_salsa20(x,z,k,sigma);\n\t    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n\t    u = 1;\n\t    for (i = 8; i < 16; i++) {\n\t      u = u + (z[i] & 0xff) | 0;\n\t      z[i] = u & 0xff;\n\t      u >>>= 8;\n\t    }\n\t    b -= 64;\n\t    cpos += 64;\n\t  }\n\t  if (b > 0) {\n\t    crypto_core_salsa20(x,z,k,sigma);\n\t    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n\t  }\n\t  return 0;\n\t}\n\n\tfunction crypto_stream(c,cpos,d,n,k) {\n\t  var s = new Uint8Array(32);\n\t  crypto_core_hsalsa20(s,n,k,sigma);\n\t  var sn = new Uint8Array(8);\n\t  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n\t  return crypto_stream_salsa20(c,cpos,d,sn,s);\n\t}\n\n\tfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n\t  var s = new Uint8Array(32);\n\t  crypto_core_hsalsa20(s,n,k,sigma);\n\t  var sn = new Uint8Array(8);\n\t  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n\t  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n\t}\n\n\t/*\n\t* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n\t* https://github.com/floodyberry/poly1305-donna\n\t*/\n\n\tvar poly1305 = function(key) {\n\t  this.buffer = new Uint8Array(16);\n\t  this.r = new Uint16Array(10);\n\t  this.h = new Uint16Array(10);\n\t  this.pad = new Uint16Array(8);\n\t  this.leftover = 0;\n\t  this.fin = 0;\n\n\t  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n\t  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n\t  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n\t  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n\t  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n\t  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n\t  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n\t  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n\t  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n\t  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n\t  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n\t  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n\t  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n\t  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n\t  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n\t  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n\t  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n\t  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n\t  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n\t};\n\n\tpoly1305.prototype.blocks = function(m, mpos, bytes) {\n\t  var hibit = this.fin ? 0 : (1 << 11);\n\t  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n\t  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n\t  var h0 = this.h[0],\n\t      h1 = this.h[1],\n\t      h2 = this.h[2],\n\t      h3 = this.h[3],\n\t      h4 = this.h[4],\n\t      h5 = this.h[5],\n\t      h6 = this.h[6],\n\t      h7 = this.h[7],\n\t      h8 = this.h[8],\n\t      h9 = this.h[9];\n\n\t  var r0 = this.r[0],\n\t      r1 = this.r[1],\n\t      r2 = this.r[2],\n\t      r3 = this.r[3],\n\t      r4 = this.r[4],\n\t      r5 = this.r[5],\n\t      r6 = this.r[6],\n\t      r7 = this.r[7],\n\t      r8 = this.r[8],\n\t      r9 = this.r[9];\n\n\t  while (bytes >= 16) {\n\t    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n\t    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n\t    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n\t    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n\t    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n\t    h5 += ((t4 >>>  1)) & 0x1fff;\n\t    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n\t    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n\t    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n\t    h9 += ((t7 >>> 5)) | hibit;\n\n\t    c = 0;\n\n\t    d0 = c;\n\t    d0 += h0 * r0;\n\t    d0 += h1 * (5 * r9);\n\t    d0 += h2 * (5 * r8);\n\t    d0 += h3 * (5 * r7);\n\t    d0 += h4 * (5 * r6);\n\t    c = (d0 >>> 13); d0 &= 0x1fff;\n\t    d0 += h5 * (5 * r5);\n\t    d0 += h6 * (5 * r4);\n\t    d0 += h7 * (5 * r3);\n\t    d0 += h8 * (5 * r2);\n\t    d0 += h9 * (5 * r1);\n\t    c += (d0 >>> 13); d0 &= 0x1fff;\n\n\t    d1 = c;\n\t    d1 += h0 * r1;\n\t    d1 += h1 * r0;\n\t    d1 += h2 * (5 * r9);\n\t    d1 += h3 * (5 * r8);\n\t    d1 += h4 * (5 * r7);\n\t    c = (d1 >>> 13); d1 &= 0x1fff;\n\t    d1 += h5 * (5 * r6);\n\t    d1 += h6 * (5 * r5);\n\t    d1 += h7 * (5 * r4);\n\t    d1 += h8 * (5 * r3);\n\t    d1 += h9 * (5 * r2);\n\t    c += (d1 >>> 13); d1 &= 0x1fff;\n\n\t    d2 = c;\n\t    d2 += h0 * r2;\n\t    d2 += h1 * r1;\n\t    d2 += h2 * r0;\n\t    d2 += h3 * (5 * r9);\n\t    d2 += h4 * (5 * r8);\n\t    c = (d2 >>> 13); d2 &= 0x1fff;\n\t    d2 += h5 * (5 * r7);\n\t    d2 += h6 * (5 * r6);\n\t    d2 += h7 * (5 * r5);\n\t    d2 += h8 * (5 * r4);\n\t    d2 += h9 * (5 * r3);\n\t    c += (d2 >>> 13); d2 &= 0x1fff;\n\n\t    d3 = c;\n\t    d3 += h0 * r3;\n\t    d3 += h1 * r2;\n\t    d3 += h2 * r1;\n\t    d3 += h3 * r0;\n\t    d3 += h4 * (5 * r9);\n\t    c = (d3 >>> 13); d3 &= 0x1fff;\n\t    d3 += h5 * (5 * r8);\n\t    d3 += h6 * (5 * r7);\n\t    d3 += h7 * (5 * r6);\n\t    d3 += h8 * (5 * r5);\n\t    d3 += h9 * (5 * r4);\n\t    c += (d3 >>> 13); d3 &= 0x1fff;\n\n\t    d4 = c;\n\t    d4 += h0 * r4;\n\t    d4 += h1 * r3;\n\t    d4 += h2 * r2;\n\t    d4 += h3 * r1;\n\t    d4 += h4 * r0;\n\t    c = (d4 >>> 13); d4 &= 0x1fff;\n\t    d4 += h5 * (5 * r9);\n\t    d4 += h6 * (5 * r8);\n\t    d4 += h7 * (5 * r7);\n\t    d4 += h8 * (5 * r6);\n\t    d4 += h9 * (5 * r5);\n\t    c += (d4 >>> 13); d4 &= 0x1fff;\n\n\t    d5 = c;\n\t    d5 += h0 * r5;\n\t    d5 += h1 * r4;\n\t    d5 += h2 * r3;\n\t    d5 += h3 * r2;\n\t    d5 += h4 * r1;\n\t    c = (d5 >>> 13); d5 &= 0x1fff;\n\t    d5 += h5 * r0;\n\t    d5 += h6 * (5 * r9);\n\t    d5 += h7 * (5 * r8);\n\t    d5 += h8 * (5 * r7);\n\t    d5 += h9 * (5 * r6);\n\t    c += (d5 >>> 13); d5 &= 0x1fff;\n\n\t    d6 = c;\n\t    d6 += h0 * r6;\n\t    d6 += h1 * r5;\n\t    d6 += h2 * r4;\n\t    d6 += h3 * r3;\n\t    d6 += h4 * r2;\n\t    c = (d6 >>> 13); d6 &= 0x1fff;\n\t    d6 += h5 * r1;\n\t    d6 += h6 * r0;\n\t    d6 += h7 * (5 * r9);\n\t    d6 += h8 * (5 * r8);\n\t    d6 += h9 * (5 * r7);\n\t    c += (d6 >>> 13); d6 &= 0x1fff;\n\n\t    d7 = c;\n\t    d7 += h0 * r7;\n\t    d7 += h1 * r6;\n\t    d7 += h2 * r5;\n\t    d7 += h3 * r4;\n\t    d7 += h4 * r3;\n\t    c = (d7 >>> 13); d7 &= 0x1fff;\n\t    d7 += h5 * r2;\n\t    d7 += h6 * r1;\n\t    d7 += h7 * r0;\n\t    d7 += h8 * (5 * r9);\n\t    d7 += h9 * (5 * r8);\n\t    c += (d7 >>> 13); d7 &= 0x1fff;\n\n\t    d8 = c;\n\t    d8 += h0 * r8;\n\t    d8 += h1 * r7;\n\t    d8 += h2 * r6;\n\t    d8 += h3 * r5;\n\t    d8 += h4 * r4;\n\t    c = (d8 >>> 13); d8 &= 0x1fff;\n\t    d8 += h5 * r3;\n\t    d8 += h6 * r2;\n\t    d8 += h7 * r1;\n\t    d8 += h8 * r0;\n\t    d8 += h9 * (5 * r9);\n\t    c += (d8 >>> 13); d8 &= 0x1fff;\n\n\t    d9 = c;\n\t    d9 += h0 * r9;\n\t    d9 += h1 * r8;\n\t    d9 += h2 * r7;\n\t    d9 += h3 * r6;\n\t    d9 += h4 * r5;\n\t    c = (d9 >>> 13); d9 &= 0x1fff;\n\t    d9 += h5 * r4;\n\t    d9 += h6 * r3;\n\t    d9 += h7 * r2;\n\t    d9 += h8 * r1;\n\t    d9 += h9 * r0;\n\t    c += (d9 >>> 13); d9 &= 0x1fff;\n\n\t    c = (((c << 2) + c)) | 0;\n\t    c = (c + d0) | 0;\n\t    d0 = c & 0x1fff;\n\t    c = (c >>> 13);\n\t    d1 += c;\n\n\t    h0 = d0;\n\t    h1 = d1;\n\t    h2 = d2;\n\t    h3 = d3;\n\t    h4 = d4;\n\t    h5 = d5;\n\t    h6 = d6;\n\t    h7 = d7;\n\t    h8 = d8;\n\t    h9 = d9;\n\n\t    mpos += 16;\n\t    bytes -= 16;\n\t  }\n\t  this.h[0] = h0;\n\t  this.h[1] = h1;\n\t  this.h[2] = h2;\n\t  this.h[3] = h3;\n\t  this.h[4] = h4;\n\t  this.h[5] = h5;\n\t  this.h[6] = h6;\n\t  this.h[7] = h7;\n\t  this.h[8] = h8;\n\t  this.h[9] = h9;\n\t};\n\n\tpoly1305.prototype.finish = function(mac, macpos) {\n\t  var g = new Uint16Array(10);\n\t  var c, mask, f, i;\n\n\t  if (this.leftover) {\n\t    i = this.leftover;\n\t    this.buffer[i++] = 1;\n\t    for (; i < 16; i++) this.buffer[i] = 0;\n\t    this.fin = 1;\n\t    this.blocks(this.buffer, 0, 16);\n\t  }\n\n\t  c = this.h[1] >>> 13;\n\t  this.h[1] &= 0x1fff;\n\t  for (i = 2; i < 10; i++) {\n\t    this.h[i] += c;\n\t    c = this.h[i] >>> 13;\n\t    this.h[i] &= 0x1fff;\n\t  }\n\t  this.h[0] += (c * 5);\n\t  c = this.h[0] >>> 13;\n\t  this.h[0] &= 0x1fff;\n\t  this.h[1] += c;\n\t  c = this.h[1] >>> 13;\n\t  this.h[1] &= 0x1fff;\n\t  this.h[2] += c;\n\n\t  g[0] = this.h[0] + 5;\n\t  c = g[0] >>> 13;\n\t  g[0] &= 0x1fff;\n\t  for (i = 1; i < 10; i++) {\n\t    g[i] = this.h[i] + c;\n\t    c = g[i] >>> 13;\n\t    g[i] &= 0x1fff;\n\t  }\n\t  g[9] -= (1 << 13);\n\n\t  mask = (c ^ 1) - 1;\n\t  for (i = 0; i < 10; i++) g[i] &= mask;\n\t  mask = ~mask;\n\t  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n\t  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n\t  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n\t  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n\t  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n\t  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n\t  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n\t  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n\t  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n\t  f = this.h[0] + this.pad[0];\n\t  this.h[0] = f & 0xffff;\n\t  for (i = 1; i < 8; i++) {\n\t    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n\t    this.h[i] = f & 0xffff;\n\t  }\n\n\t  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n\t  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n\t  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n\t  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n\t  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n\t  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n\t  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n\t  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n\t  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n\t  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n\t  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n\t  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n\t  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n\t  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n\t  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n\t  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n\t};\n\n\tpoly1305.prototype.update = function(m, mpos, bytes) {\n\t  var i, want;\n\n\t  if (this.leftover) {\n\t    want = (16 - this.leftover);\n\t    if (want > bytes)\n\t      want = bytes;\n\t    for (i = 0; i < want; i++)\n\t      this.buffer[this.leftover + i] = m[mpos+i];\n\t    bytes -= want;\n\t    mpos += want;\n\t    this.leftover += want;\n\t    if (this.leftover < 16)\n\t      return;\n\t    this.blocks(this.buffer, 0, 16);\n\t    this.leftover = 0;\n\t  }\n\n\t  if (bytes >= 16) {\n\t    want = bytes - (bytes % 16);\n\t    this.blocks(m, mpos, want);\n\t    mpos += want;\n\t    bytes -= want;\n\t  }\n\n\t  if (bytes) {\n\t    for (i = 0; i < bytes; i++)\n\t      this.buffer[this.leftover + i] = m[mpos+i];\n\t    this.leftover += bytes;\n\t  }\n\t};\n\n\tfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n\t  var s = new poly1305(k);\n\t  s.update(m, mpos, n);\n\t  s.finish(out, outpos);\n\t  return 0;\n\t}\n\n\tfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n\t  var x = new Uint8Array(16);\n\t  crypto_onetimeauth(x,0,m,mpos,n,k);\n\t  return crypto_verify_16(h,hpos,x,0);\n\t}\n\n\tfunction crypto_secretbox(c,m,d,n,k) {\n\t  var i;\n\t  if (d < 32) return -1;\n\t  crypto_stream_xor(c,0,m,0,d,n,k);\n\t  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n\t  for (i = 0; i < 16; i++) c[i] = 0;\n\t  return 0;\n\t}\n\n\tfunction crypto_secretbox_open(m,c,d,n,k) {\n\t  var i;\n\t  var x = new Uint8Array(32);\n\t  if (d < 32) return -1;\n\t  crypto_stream(x,0,32,n,k);\n\t  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n\t  crypto_stream_xor(m,0,c,0,d,n,k);\n\t  for (i = 0; i < 32; i++) m[i] = 0;\n\t  return 0;\n\t}\n\n\tfunction set25519(r, a) {\n\t  var i;\n\t  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n\t}\n\n\tfunction car25519(o) {\n\t  var i, v, c = 1;\n\t  for (i = 0; i < 16; i++) {\n\t    v = o[i] + c + 65535;\n\t    c = Math.floor(v / 65536);\n\t    o[i] = v - c * 65536;\n\t  }\n\t  o[0] += c-1 + 37 * (c-1);\n\t}\n\n\tfunction sel25519(p, q, b) {\n\t  var t, c = ~(b-1);\n\t  for (var i = 0; i < 16; i++) {\n\t    t = c & (p[i] ^ q[i]);\n\t    p[i] ^= t;\n\t    q[i] ^= t;\n\t  }\n\t}\n\n\tfunction pack25519(o, n) {\n\t  var i, j, b;\n\t  var m = gf(), t = gf();\n\t  for (i = 0; i < 16; i++) t[i] = n[i];\n\t  car25519(t);\n\t  car25519(t);\n\t  car25519(t);\n\t  for (j = 0; j < 2; j++) {\n\t    m[0] = t[0] - 0xffed;\n\t    for (i = 1; i < 15; i++) {\n\t      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n\t      m[i-1] &= 0xffff;\n\t    }\n\t    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n\t    b = (m[15]>>16) & 1;\n\t    m[14] &= 0xffff;\n\t    sel25519(t, m, 1-b);\n\t  }\n\t  for (i = 0; i < 16; i++) {\n\t    o[2*i] = t[i] & 0xff;\n\t    o[2*i+1] = t[i]>>8;\n\t  }\n\t}\n\n\tfunction neq25519(a, b) {\n\t  var c = new Uint8Array(32), d = new Uint8Array(32);\n\t  pack25519(c, a);\n\t  pack25519(d, b);\n\t  return crypto_verify_32(c, 0, d, 0);\n\t}\n\n\tfunction par25519(a) {\n\t  var d = new Uint8Array(32);\n\t  pack25519(d, a);\n\t  return d[0] & 1;\n\t}\n\n\tfunction unpack25519(o, n) {\n\t  var i;\n\t  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n\t  o[15] &= 0x7fff;\n\t}\n\n\tfunction A(o, a, b) {\n\t  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n\t}\n\n\tfunction Z(o, a, b) {\n\t  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n\t}\n\n\tfunction M(o, a, b) {\n\t  var v, c,\n\t     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n\t     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n\t    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n\t    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n\t    b0 = b[0],\n\t    b1 = b[1],\n\t    b2 = b[2],\n\t    b3 = b[3],\n\t    b4 = b[4],\n\t    b5 = b[5],\n\t    b6 = b[6],\n\t    b7 = b[7],\n\t    b8 = b[8],\n\t    b9 = b[9],\n\t    b10 = b[10],\n\t    b11 = b[11],\n\t    b12 = b[12],\n\t    b13 = b[13],\n\t    b14 = b[14],\n\t    b15 = b[15];\n\n\t  v = a[0];\n\t  t0 += v * b0;\n\t  t1 += v * b1;\n\t  t2 += v * b2;\n\t  t3 += v * b3;\n\t  t4 += v * b4;\n\t  t5 += v * b5;\n\t  t6 += v * b6;\n\t  t7 += v * b7;\n\t  t8 += v * b8;\n\t  t9 += v * b9;\n\t  t10 += v * b10;\n\t  t11 += v * b11;\n\t  t12 += v * b12;\n\t  t13 += v * b13;\n\t  t14 += v * b14;\n\t  t15 += v * b15;\n\t  v = a[1];\n\t  t1 += v * b0;\n\t  t2 += v * b1;\n\t  t3 += v * b2;\n\t  t4 += v * b3;\n\t  t5 += v * b4;\n\t  t6 += v * b5;\n\t  t7 += v * b6;\n\t  t8 += v * b7;\n\t  t9 += v * b8;\n\t  t10 += v * b9;\n\t  t11 += v * b10;\n\t  t12 += v * b11;\n\t  t13 += v * b12;\n\t  t14 += v * b13;\n\t  t15 += v * b14;\n\t  t16 += v * b15;\n\t  v = a[2];\n\t  t2 += v * b0;\n\t  t3 += v * b1;\n\t  t4 += v * b2;\n\t  t5 += v * b3;\n\t  t6 += v * b4;\n\t  t7 += v * b5;\n\t  t8 += v * b6;\n\t  t9 += v * b7;\n\t  t10 += v * b8;\n\t  t11 += v * b9;\n\t  t12 += v * b10;\n\t  t13 += v * b11;\n\t  t14 += v * b12;\n\t  t15 += v * b13;\n\t  t16 += v * b14;\n\t  t17 += v * b15;\n\t  v = a[3];\n\t  t3 += v * b0;\n\t  t4 += v * b1;\n\t  t5 += v * b2;\n\t  t6 += v * b3;\n\t  t7 += v * b4;\n\t  t8 += v * b5;\n\t  t9 += v * b6;\n\t  t10 += v * b7;\n\t  t11 += v * b8;\n\t  t12 += v * b9;\n\t  t13 += v * b10;\n\t  t14 += v * b11;\n\t  t15 += v * b12;\n\t  t16 += v * b13;\n\t  t17 += v * b14;\n\t  t18 += v * b15;\n\t  v = a[4];\n\t  t4 += v * b0;\n\t  t5 += v * b1;\n\t  t6 += v * b2;\n\t  t7 += v * b3;\n\t  t8 += v * b4;\n\t  t9 += v * b5;\n\t  t10 += v * b6;\n\t  t11 += v * b7;\n\t  t12 += v * b8;\n\t  t13 += v * b9;\n\t  t14 += v * b10;\n\t  t15 += v * b11;\n\t  t16 += v * b12;\n\t  t17 += v * b13;\n\t  t18 += v * b14;\n\t  t19 += v * b15;\n\t  v = a[5];\n\t  t5 += v * b0;\n\t  t6 += v * b1;\n\t  t7 += v * b2;\n\t  t8 += v * b3;\n\t  t9 += v * b4;\n\t  t10 += v * b5;\n\t  t11 += v * b6;\n\t  t12 += v * b7;\n\t  t13 += v * b8;\n\t  t14 += v * b9;\n\t  t15 += v * b10;\n\t  t16 += v * b11;\n\t  t17 += v * b12;\n\t  t18 += v * b13;\n\t  t19 += v * b14;\n\t  t20 += v * b15;\n\t  v = a[6];\n\t  t6 += v * b0;\n\t  t7 += v * b1;\n\t  t8 += v * b2;\n\t  t9 += v * b3;\n\t  t10 += v * b4;\n\t  t11 += v * b5;\n\t  t12 += v * b6;\n\t  t13 += v * b7;\n\t  t14 += v * b8;\n\t  t15 += v * b9;\n\t  t16 += v * b10;\n\t  t17 += v * b11;\n\t  t18 += v * b12;\n\t  t19 += v * b13;\n\t  t20 += v * b14;\n\t  t21 += v * b15;\n\t  v = a[7];\n\t  t7 += v * b0;\n\t  t8 += v * b1;\n\t  t9 += v * b2;\n\t  t10 += v * b3;\n\t  t11 += v * b4;\n\t  t12 += v * b5;\n\t  t13 += v * b6;\n\t  t14 += v * b7;\n\t  t15 += v * b8;\n\t  t16 += v * b9;\n\t  t17 += v * b10;\n\t  t18 += v * b11;\n\t  t19 += v * b12;\n\t  t20 += v * b13;\n\t  t21 += v * b14;\n\t  t22 += v * b15;\n\t  v = a[8];\n\t  t8 += v * b0;\n\t  t9 += v * b1;\n\t  t10 += v * b2;\n\t  t11 += v * b3;\n\t  t12 += v * b4;\n\t  t13 += v * b5;\n\t  t14 += v * b6;\n\t  t15 += v * b7;\n\t  t16 += v * b8;\n\t  t17 += v * b9;\n\t  t18 += v * b10;\n\t  t19 += v * b11;\n\t  t20 += v * b12;\n\t  t21 += v * b13;\n\t  t22 += v * b14;\n\t  t23 += v * b15;\n\t  v = a[9];\n\t  t9 += v * b0;\n\t  t10 += v * b1;\n\t  t11 += v * b2;\n\t  t12 += v * b3;\n\t  t13 += v * b4;\n\t  t14 += v * b5;\n\t  t15 += v * b6;\n\t  t16 += v * b7;\n\t  t17 += v * b8;\n\t  t18 += v * b9;\n\t  t19 += v * b10;\n\t  t20 += v * b11;\n\t  t21 += v * b12;\n\t  t22 += v * b13;\n\t  t23 += v * b14;\n\t  t24 += v * b15;\n\t  v = a[10];\n\t  t10 += v * b0;\n\t  t11 += v * b1;\n\t  t12 += v * b2;\n\t  t13 += v * b3;\n\t  t14 += v * b4;\n\t  t15 += v * b5;\n\t  t16 += v * b6;\n\t  t17 += v * b7;\n\t  t18 += v * b8;\n\t  t19 += v * b9;\n\t  t20 += v * b10;\n\t  t21 += v * b11;\n\t  t22 += v * b12;\n\t  t23 += v * b13;\n\t  t24 += v * b14;\n\t  t25 += v * b15;\n\t  v = a[11];\n\t  t11 += v * b0;\n\t  t12 += v * b1;\n\t  t13 += v * b2;\n\t  t14 += v * b3;\n\t  t15 += v * b4;\n\t  t16 += v * b5;\n\t  t17 += v * b6;\n\t  t18 += v * b7;\n\t  t19 += v * b8;\n\t  t20 += v * b9;\n\t  t21 += v * b10;\n\t  t22 += v * b11;\n\t  t23 += v * b12;\n\t  t24 += v * b13;\n\t  t25 += v * b14;\n\t  t26 += v * b15;\n\t  v = a[12];\n\t  t12 += v * b0;\n\t  t13 += v * b1;\n\t  t14 += v * b2;\n\t  t15 += v * b3;\n\t  t16 += v * b4;\n\t  t17 += v * b5;\n\t  t18 += v * b6;\n\t  t19 += v * b7;\n\t  t20 += v * b8;\n\t  t21 += v * b9;\n\t  t22 += v * b10;\n\t  t23 += v * b11;\n\t  t24 += v * b12;\n\t  t25 += v * b13;\n\t  t26 += v * b14;\n\t  t27 += v * b15;\n\t  v = a[13];\n\t  t13 += v * b0;\n\t  t14 += v * b1;\n\t  t15 += v * b2;\n\t  t16 += v * b3;\n\t  t17 += v * b4;\n\t  t18 += v * b5;\n\t  t19 += v * b6;\n\t  t20 += v * b7;\n\t  t21 += v * b8;\n\t  t22 += v * b9;\n\t  t23 += v * b10;\n\t  t24 += v * b11;\n\t  t25 += v * b12;\n\t  t26 += v * b13;\n\t  t27 += v * b14;\n\t  t28 += v * b15;\n\t  v = a[14];\n\t  t14 += v * b0;\n\t  t15 += v * b1;\n\t  t16 += v * b2;\n\t  t17 += v * b3;\n\t  t18 += v * b4;\n\t  t19 += v * b5;\n\t  t20 += v * b6;\n\t  t21 += v * b7;\n\t  t22 += v * b8;\n\t  t23 += v * b9;\n\t  t24 += v * b10;\n\t  t25 += v * b11;\n\t  t26 += v * b12;\n\t  t27 += v * b13;\n\t  t28 += v * b14;\n\t  t29 += v * b15;\n\t  v = a[15];\n\t  t15 += v * b0;\n\t  t16 += v * b1;\n\t  t17 += v * b2;\n\t  t18 += v * b3;\n\t  t19 += v * b4;\n\t  t20 += v * b5;\n\t  t21 += v * b6;\n\t  t22 += v * b7;\n\t  t23 += v * b8;\n\t  t24 += v * b9;\n\t  t25 += v * b10;\n\t  t26 += v * b11;\n\t  t27 += v * b12;\n\t  t28 += v * b13;\n\t  t29 += v * b14;\n\t  t30 += v * b15;\n\n\t  t0  += 38 * t16;\n\t  t1  += 38 * t17;\n\t  t2  += 38 * t18;\n\t  t3  += 38 * t19;\n\t  t4  += 38 * t20;\n\t  t5  += 38 * t21;\n\t  t6  += 38 * t22;\n\t  t7  += 38 * t23;\n\t  t8  += 38 * t24;\n\t  t9  += 38 * t25;\n\t  t10 += 38 * t26;\n\t  t11 += 38 * t27;\n\t  t12 += 38 * t28;\n\t  t13 += 38 * t29;\n\t  t14 += 38 * t30;\n\t  // t15 left as is\n\n\t  // first car\n\t  c = 1;\n\t  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n\t  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n\t  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n\t  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n\t  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n\t  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n\t  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n\t  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n\t  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n\t  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n\t  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n\t  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n\t  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n\t  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n\t  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n\t  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n\t  t0 += c-1 + 37 * (c-1);\n\n\t  // second car\n\t  c = 1;\n\t  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n\t  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n\t  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n\t  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n\t  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n\t  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n\t  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n\t  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n\t  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n\t  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n\t  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n\t  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n\t  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n\t  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n\t  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n\t  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n\t  t0 += c-1 + 37 * (c-1);\n\n\t  o[ 0] = t0;\n\t  o[ 1] = t1;\n\t  o[ 2] = t2;\n\t  o[ 3] = t3;\n\t  o[ 4] = t4;\n\t  o[ 5] = t5;\n\t  o[ 6] = t6;\n\t  o[ 7] = t7;\n\t  o[ 8] = t8;\n\t  o[ 9] = t9;\n\t  o[10] = t10;\n\t  o[11] = t11;\n\t  o[12] = t12;\n\t  o[13] = t13;\n\t  o[14] = t14;\n\t  o[15] = t15;\n\t}\n\n\tfunction S(o, a) {\n\t  M(o, a, a);\n\t}\n\n\tfunction inv25519(o, i) {\n\t  var c = gf();\n\t  var a;\n\t  for (a = 0; a < 16; a++) c[a] = i[a];\n\t  for (a = 253; a >= 0; a--) {\n\t    S(c, c);\n\t    if(a !== 2 && a !== 4) M(c, c, i);\n\t  }\n\t  for (a = 0; a < 16; a++) o[a] = c[a];\n\t}\n\n\tfunction pow2523(o, i) {\n\t  var c = gf();\n\t  var a;\n\t  for (a = 0; a < 16; a++) c[a] = i[a];\n\t  for (a = 250; a >= 0; a--) {\n\t      S(c, c);\n\t      if(a !== 1) M(c, c, i);\n\t  }\n\t  for (a = 0; a < 16; a++) o[a] = c[a];\n\t}\n\n\tfunction crypto_scalarmult(q, n, p) {\n\t  var z = new Uint8Array(32);\n\t  var x = new Float64Array(80), r, i;\n\t  var a = gf(), b = gf(), c = gf(),\n\t      d = gf(), e = gf(), f = gf();\n\t  for (i = 0; i < 31; i++) z[i] = n[i];\n\t  z[31]=(n[31]&127)|64;\n\t  z[0]&=248;\n\t  unpack25519(x,p);\n\t  for (i = 0; i < 16; i++) {\n\t    b[i]=x[i];\n\t    d[i]=a[i]=c[i]=0;\n\t  }\n\t  a[0]=d[0]=1;\n\t  for (i=254; i>=0; --i) {\n\t    r=(z[i>>>3]>>>(i&7))&1;\n\t    sel25519(a,b,r);\n\t    sel25519(c,d,r);\n\t    A(e,a,c);\n\t    Z(a,a,c);\n\t    A(c,b,d);\n\t    Z(b,b,d);\n\t    S(d,e);\n\t    S(f,a);\n\t    M(a,c,a);\n\t    M(c,b,e);\n\t    A(e,a,c);\n\t    Z(a,a,c);\n\t    S(b,a);\n\t    Z(c,d,f);\n\t    M(a,c,_121665);\n\t    A(a,a,d);\n\t    M(c,c,a);\n\t    M(a,d,f);\n\t    M(d,b,x);\n\t    S(b,e);\n\t    sel25519(a,b,r);\n\t    sel25519(c,d,r);\n\t  }\n\t  for (i = 0; i < 16; i++) {\n\t    x[i+16]=a[i];\n\t    x[i+32]=c[i];\n\t    x[i+48]=b[i];\n\t    x[i+64]=d[i];\n\t  }\n\t  var x32 = x.subarray(32);\n\t  var x16 = x.subarray(16);\n\t  inv25519(x32,x32);\n\t  M(x16,x16,x32);\n\t  pack25519(q,x16);\n\t  return 0;\n\t}\n\n\tfunction crypto_scalarmult_base(q, n) {\n\t  return crypto_scalarmult(q, n, _9);\n\t}\n\n\tfunction crypto_box_keypair(y, x) {\n\t  randombytes(x, 32);\n\t  return crypto_scalarmult_base(y, x);\n\t}\n\n\tfunction crypto_box_beforenm(k, y, x) {\n\t  var s = new Uint8Array(32);\n\t  crypto_scalarmult(s, x, y);\n\t  return crypto_core_hsalsa20(k, _0, s, sigma);\n\t}\n\n\tvar crypto_box_afternm = crypto_secretbox;\n\tvar crypto_box_open_afternm = crypto_secretbox_open;\n\n\tfunction crypto_box(c, m, d, n, y, x) {\n\t  var k = new Uint8Array(32);\n\t  crypto_box_beforenm(k, y, x);\n\t  return crypto_box_afternm(c, m, d, n, k);\n\t}\n\n\tfunction crypto_box_open(m, c, d, n, y, x) {\n\t  var k = new Uint8Array(32);\n\t  crypto_box_beforenm(k, y, x);\n\t  return crypto_box_open_afternm(m, c, d, n, k);\n\t}\n\n\tvar K = [\n\t  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n\t  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n\t  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n\t  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n\t  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n\t  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n\t  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n\t  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n\t  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n\t  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n\t  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n\t  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n\t  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n\t  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n\t  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n\t  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n\t  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n\t  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n\t  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n\t  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n\t  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n\t  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n\t  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n\t  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n\t  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n\t  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n\t  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n\t  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n\t  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n\t  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n\t  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n\t  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n\t  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n\t  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n\t  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n\t  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n\t  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n\t  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n\t  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n\t  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n\t];\n\n\tfunction crypto_hashblocks_hl(hh, hl, m, n) {\n\t  var wh = new Int32Array(16), wl = new Int32Array(16),\n\t      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n\t      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n\t      th, tl, i, j, h, l, a, b, c, d;\n\n\t  var ah0 = hh[0],\n\t      ah1 = hh[1],\n\t      ah2 = hh[2],\n\t      ah3 = hh[3],\n\t      ah4 = hh[4],\n\t      ah5 = hh[5],\n\t      ah6 = hh[6],\n\t      ah7 = hh[7],\n\n\t      al0 = hl[0],\n\t      al1 = hl[1],\n\t      al2 = hl[2],\n\t      al3 = hl[3],\n\t      al4 = hl[4],\n\t      al5 = hl[5],\n\t      al6 = hl[6],\n\t      al7 = hl[7];\n\n\t  var pos = 0;\n\t  while (n >= 128) {\n\t    for (i = 0; i < 16; i++) {\n\t      j = 8 * i + pos;\n\t      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n\t      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n\t    }\n\t    for (i = 0; i < 80; i++) {\n\t      bh0 = ah0;\n\t      bh1 = ah1;\n\t      bh2 = ah2;\n\t      bh3 = ah3;\n\t      bh4 = ah4;\n\t      bh5 = ah5;\n\t      bh6 = ah6;\n\t      bh7 = ah7;\n\n\t      bl0 = al0;\n\t      bl1 = al1;\n\t      bl2 = al2;\n\t      bl3 = al3;\n\t      bl4 = al4;\n\t      bl5 = al5;\n\t      bl6 = al6;\n\t      bl7 = al7;\n\n\t      // add\n\t      h = ah7;\n\t      l = al7;\n\n\t      a = l & 0xffff; b = l >>> 16;\n\t      c = h & 0xffff; d = h >>> 16;\n\n\t      // Sigma1\n\t      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n\t      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n\t      a += l & 0xffff; b += l >>> 16;\n\t      c += h & 0xffff; d += h >>> 16;\n\n\t      // Ch\n\t      h = (ah4 & ah5) ^ (~ah4 & ah6);\n\t      l = (al4 & al5) ^ (~al4 & al6);\n\n\t      a += l & 0xffff; b += l >>> 16;\n\t      c += h & 0xffff; d += h >>> 16;\n\n\t      // K\n\t      h = K[i*2];\n\t      l = K[i*2+1];\n\n\t      a += l & 0xffff; b += l >>> 16;\n\t      c += h & 0xffff; d += h >>> 16;\n\n\t      // w\n\t      h = wh[i%16];\n\t      l = wl[i%16];\n\n\t      a += l & 0xffff; b += l >>> 16;\n\t      c += h & 0xffff; d += h >>> 16;\n\n\t      b += a >>> 16;\n\t      c += b >>> 16;\n\t      d += c >>> 16;\n\n\t      th = c & 0xffff | d << 16;\n\t      tl = a & 0xffff | b << 16;\n\n\t      // add\n\t      h = th;\n\t      l = tl;\n\n\t      a = l & 0xffff; b = l >>> 16;\n\t      c = h & 0xffff; d = h >>> 16;\n\n\t      // Sigma0\n\t      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n\t      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n\t      a += l & 0xffff; b += l >>> 16;\n\t      c += h & 0xffff; d += h >>> 16;\n\n\t      // Maj\n\t      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n\t      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n\t      a += l & 0xffff; b += l >>> 16;\n\t      c += h & 0xffff; d += h >>> 16;\n\n\t      b += a >>> 16;\n\t      c += b >>> 16;\n\t      d += c >>> 16;\n\n\t      bh7 = (c & 0xffff) | (d << 16);\n\t      bl7 = (a & 0xffff) | (b << 16);\n\n\t      // add\n\t      h = bh3;\n\t      l = bl3;\n\n\t      a = l & 0xffff; b = l >>> 16;\n\t      c = h & 0xffff; d = h >>> 16;\n\n\t      h = th;\n\t      l = tl;\n\n\t      a += l & 0xffff; b += l >>> 16;\n\t      c += h & 0xffff; d += h >>> 16;\n\n\t      b += a >>> 16;\n\t      c += b >>> 16;\n\t      d += c >>> 16;\n\n\t      bh3 = (c & 0xffff) | (d << 16);\n\t      bl3 = (a & 0xffff) | (b << 16);\n\n\t      ah1 = bh0;\n\t      ah2 = bh1;\n\t      ah3 = bh2;\n\t      ah4 = bh3;\n\t      ah5 = bh4;\n\t      ah6 = bh5;\n\t      ah7 = bh6;\n\t      ah0 = bh7;\n\n\t      al1 = bl0;\n\t      al2 = bl1;\n\t      al3 = bl2;\n\t      al4 = bl3;\n\t      al5 = bl4;\n\t      al6 = bl5;\n\t      al7 = bl6;\n\t      al0 = bl7;\n\n\t      if (i%16 === 15) {\n\t        for (j = 0; j < 16; j++) {\n\t          // add\n\t          h = wh[j];\n\t          l = wl[j];\n\n\t          a = l & 0xffff; b = l >>> 16;\n\t          c = h & 0xffff; d = h >>> 16;\n\n\t          h = wh[(j+9)%16];\n\t          l = wl[(j+9)%16];\n\n\t          a += l & 0xffff; b += l >>> 16;\n\t          c += h & 0xffff; d += h >>> 16;\n\n\t          // sigma0\n\t          th = wh[(j+1)%16];\n\t          tl = wl[(j+1)%16];\n\t          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n\t          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n\t          a += l & 0xffff; b += l >>> 16;\n\t          c += h & 0xffff; d += h >>> 16;\n\n\t          // sigma1\n\t          th = wh[(j+14)%16];\n\t          tl = wl[(j+14)%16];\n\t          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n\t          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n\t          a += l & 0xffff; b += l >>> 16;\n\t          c += h & 0xffff; d += h >>> 16;\n\n\t          b += a >>> 16;\n\t          c += b >>> 16;\n\t          d += c >>> 16;\n\n\t          wh[j] = (c & 0xffff) | (d << 16);\n\t          wl[j] = (a & 0xffff) | (b << 16);\n\t        }\n\t      }\n\t    }\n\n\t    // add\n\t    h = ah0;\n\t    l = al0;\n\n\t    a = l & 0xffff; b = l >>> 16;\n\t    c = h & 0xffff; d = h >>> 16;\n\n\t    h = hh[0];\n\t    l = hl[0];\n\n\t    a += l & 0xffff; b += l >>> 16;\n\t    c += h & 0xffff; d += h >>> 16;\n\n\t    b += a >>> 16;\n\t    c += b >>> 16;\n\t    d += c >>> 16;\n\n\t    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n\t    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n\t    h = ah1;\n\t    l = al1;\n\n\t    a = l & 0xffff; b = l >>> 16;\n\t    c = h & 0xffff; d = h >>> 16;\n\n\t    h = hh[1];\n\t    l = hl[1];\n\n\t    a += l & 0xffff; b += l >>> 16;\n\t    c += h & 0xffff; d += h >>> 16;\n\n\t    b += a >>> 16;\n\t    c += b >>> 16;\n\t    d += c >>> 16;\n\n\t    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n\t    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n\t    h = ah2;\n\t    l = al2;\n\n\t    a = l & 0xffff; b = l >>> 16;\n\t    c = h & 0xffff; d = h >>> 16;\n\n\t    h = hh[2];\n\t    l = hl[2];\n\n\t    a += l & 0xffff; b += l >>> 16;\n\t    c += h & 0xffff; d += h >>> 16;\n\n\t    b += a >>> 16;\n\t    c += b >>> 16;\n\t    d += c >>> 16;\n\n\t    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n\t    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n\t    h = ah3;\n\t    l = al3;\n\n\t    a = l & 0xffff; b = l >>> 16;\n\t    c = h & 0xffff; d = h >>> 16;\n\n\t    h = hh[3];\n\t    l = hl[3];\n\n\t    a += l & 0xffff; b += l >>> 16;\n\t    c += h & 0xffff; d += h >>> 16;\n\n\t    b += a >>> 16;\n\t    c += b >>> 16;\n\t    d += c >>> 16;\n\n\t    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n\t    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n\t    h = ah4;\n\t    l = al4;\n\n\t    a = l & 0xffff; b = l >>> 16;\n\t    c = h & 0xffff; d = h >>> 16;\n\n\t    h = hh[4];\n\t    l = hl[4];\n\n\t    a += l & 0xffff; b += l >>> 16;\n\t    c += h & 0xffff; d += h >>> 16;\n\n\t    b += a >>> 16;\n\t    c += b >>> 16;\n\t    d += c >>> 16;\n\n\t    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n\t    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n\t    h = ah5;\n\t    l = al5;\n\n\t    a = l & 0xffff; b = l >>> 16;\n\t    c = h & 0xffff; d = h >>> 16;\n\n\t    h = hh[5];\n\t    l = hl[5];\n\n\t    a += l & 0xffff; b += l >>> 16;\n\t    c += h & 0xffff; d += h >>> 16;\n\n\t    b += a >>> 16;\n\t    c += b >>> 16;\n\t    d += c >>> 16;\n\n\t    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n\t    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n\t    h = ah6;\n\t    l = al6;\n\n\t    a = l & 0xffff; b = l >>> 16;\n\t    c = h & 0xffff; d = h >>> 16;\n\n\t    h = hh[6];\n\t    l = hl[6];\n\n\t    a += l & 0xffff; b += l >>> 16;\n\t    c += h & 0xffff; d += h >>> 16;\n\n\t    b += a >>> 16;\n\t    c += b >>> 16;\n\t    d += c >>> 16;\n\n\t    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n\t    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n\t    h = ah7;\n\t    l = al7;\n\n\t    a = l & 0xffff; b = l >>> 16;\n\t    c = h & 0xffff; d = h >>> 16;\n\n\t    h = hh[7];\n\t    l = hl[7];\n\n\t    a += l & 0xffff; b += l >>> 16;\n\t    c += h & 0xffff; d += h >>> 16;\n\n\t    b += a >>> 16;\n\t    c += b >>> 16;\n\t    d += c >>> 16;\n\n\t    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n\t    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n\t    pos += 128;\n\t    n -= 128;\n\t  }\n\n\t  return n;\n\t}\n\n\tfunction crypto_hash(out, m, n) {\n\t  var hh = new Int32Array(8),\n\t      hl = new Int32Array(8),\n\t      x = new Uint8Array(256),\n\t      i, b = n;\n\n\t  hh[0] = 0x6a09e667;\n\t  hh[1] = 0xbb67ae85;\n\t  hh[2] = 0x3c6ef372;\n\t  hh[3] = 0xa54ff53a;\n\t  hh[4] = 0x510e527f;\n\t  hh[5] = 0x9b05688c;\n\t  hh[6] = 0x1f83d9ab;\n\t  hh[7] = 0x5be0cd19;\n\n\t  hl[0] = 0xf3bcc908;\n\t  hl[1] = 0x84caa73b;\n\t  hl[2] = 0xfe94f82b;\n\t  hl[3] = 0x5f1d36f1;\n\t  hl[4] = 0xade682d1;\n\t  hl[5] = 0x2b3e6c1f;\n\t  hl[6] = 0xfb41bd6b;\n\t  hl[7] = 0x137e2179;\n\n\t  crypto_hashblocks_hl(hh, hl, m, n);\n\t  n %= 128;\n\n\t  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n\t  x[n] = 128;\n\n\t  n = 256-128*(n<112?1:0);\n\t  x[n-9] = 0;\n\t  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n\t  crypto_hashblocks_hl(hh, hl, x, n);\n\n\t  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n\t  return 0;\n\t}\n\n\tfunction add(p, q) {\n\t  var a = gf(), b = gf(), c = gf(),\n\t      d = gf(), e = gf(), f = gf(),\n\t      g = gf(), h = gf(), t = gf();\n\n\t  Z(a, p[1], p[0]);\n\t  Z(t, q[1], q[0]);\n\t  M(a, a, t);\n\t  A(b, p[0], p[1]);\n\t  A(t, q[0], q[1]);\n\t  M(b, b, t);\n\t  M(c, p[3], q[3]);\n\t  M(c, c, D2);\n\t  M(d, p[2], q[2]);\n\t  A(d, d, d);\n\t  Z(e, b, a);\n\t  Z(f, d, c);\n\t  A(g, d, c);\n\t  A(h, b, a);\n\n\t  M(p[0], e, f);\n\t  M(p[1], h, g);\n\t  M(p[2], g, f);\n\t  M(p[3], e, h);\n\t}\n\n\tfunction cswap(p, q, b) {\n\t  var i;\n\t  for (i = 0; i < 4; i++) {\n\t    sel25519(p[i], q[i], b);\n\t  }\n\t}\n\n\tfunction pack(r, p) {\n\t  var tx = gf(), ty = gf(), zi = gf();\n\t  inv25519(zi, p[2]);\n\t  M(tx, p[0], zi);\n\t  M(ty, p[1], zi);\n\t  pack25519(r, ty);\n\t  r[31] ^= par25519(tx) << 7;\n\t}\n\n\tfunction scalarmult(p, q, s) {\n\t  var b, i;\n\t  set25519(p[0], gf0);\n\t  set25519(p[1], gf1);\n\t  set25519(p[2], gf1);\n\t  set25519(p[3], gf0);\n\t  for (i = 255; i >= 0; --i) {\n\t    b = (s[(i/8)|0] >> (i&7)) & 1;\n\t    cswap(p, q, b);\n\t    add(q, p);\n\t    add(p, p);\n\t    cswap(p, q, b);\n\t  }\n\t}\n\n\tfunction scalarbase(p, s) {\n\t  var q = [gf(), gf(), gf(), gf()];\n\t  set25519(q[0], X);\n\t  set25519(q[1], Y);\n\t  set25519(q[2], gf1);\n\t  M(q[3], X, Y);\n\t  scalarmult(p, q, s);\n\t}\n\n\tfunction crypto_sign_keypair(pk, sk, seeded) {\n\t  var d = new Uint8Array(64);\n\t  var p = [gf(), gf(), gf(), gf()];\n\t  var i;\n\n\t  if (!seeded) randombytes(sk, 32);\n\t  crypto_hash(d, sk, 32);\n\t  d[0] &= 248;\n\t  d[31] &= 127;\n\t  d[31] |= 64;\n\n\t  scalarbase(p, d);\n\t  pack(pk, p);\n\n\t  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n\t  return 0;\n\t}\n\n\tvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\n\tfunction modL(r, x) {\n\t  var carry, i, j, k;\n\t  for (i = 63; i >= 32; --i) {\n\t    carry = 0;\n\t    for (j = i - 32, k = i - 12; j < k; ++j) {\n\t      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n\t      carry = (x[j] + 128) >> 8;\n\t      x[j] -= carry * 256;\n\t    }\n\t    x[j] += carry;\n\t    x[i] = 0;\n\t  }\n\t  carry = 0;\n\t  for (j = 0; j < 32; j++) {\n\t    x[j] += carry - (x[31] >> 4) * L[j];\n\t    carry = x[j] >> 8;\n\t    x[j] &= 255;\n\t  }\n\t  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n\t  for (i = 0; i < 32; i++) {\n\t    x[i+1] += x[i] >> 8;\n\t    r[i] = x[i] & 255;\n\t  }\n\t}\n\n\tfunction reduce(r) {\n\t  var x = new Float64Array(64), i;\n\t  for (i = 0; i < 64; i++) x[i] = r[i];\n\t  for (i = 0; i < 64; i++) r[i] = 0;\n\t  modL(r, x);\n\t}\n\n\t// Note: difference from C - smlen returned, not passed as argument.\n\tfunction crypto_sign(sm, m, n, sk) {\n\t  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n\t  var i, j, x = new Float64Array(64);\n\t  var p = [gf(), gf(), gf(), gf()];\n\n\t  crypto_hash(d, sk, 32);\n\t  d[0] &= 248;\n\t  d[31] &= 127;\n\t  d[31] |= 64;\n\n\t  var smlen = n + 64;\n\t  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n\t  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n\t  crypto_hash(r, sm.subarray(32), n+32);\n\t  reduce(r);\n\t  scalarbase(p, r);\n\t  pack(sm, p);\n\n\t  for (i = 32; i < 64; i++) sm[i] = sk[i];\n\t  crypto_hash(h, sm, n + 64);\n\t  reduce(h);\n\n\t  for (i = 0; i < 64; i++) x[i] = 0;\n\t  for (i = 0; i < 32; i++) x[i] = r[i];\n\t  for (i = 0; i < 32; i++) {\n\t    for (j = 0; j < 32; j++) {\n\t      x[i+j] += h[i] * d[j];\n\t    }\n\t  }\n\n\t  modL(sm.subarray(32), x);\n\t  return smlen;\n\t}\n\n\tfunction unpackneg(r, p) {\n\t  var t = gf(), chk = gf(), num = gf(),\n\t      den = gf(), den2 = gf(), den4 = gf(),\n\t      den6 = gf();\n\n\t  set25519(r[2], gf1);\n\t  unpack25519(r[1], p);\n\t  S(num, r[1]);\n\t  M(den, num, D);\n\t  Z(num, num, r[2]);\n\t  A(den, r[2], den);\n\n\t  S(den2, den);\n\t  S(den4, den2);\n\t  M(den6, den4, den2);\n\t  M(t, den6, num);\n\t  M(t, t, den);\n\n\t  pow2523(t, t);\n\t  M(t, t, num);\n\t  M(t, t, den);\n\t  M(t, t, den);\n\t  M(r[0], t, den);\n\n\t  S(chk, r[0]);\n\t  M(chk, chk, den);\n\t  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n\t  S(chk, r[0]);\n\t  M(chk, chk, den);\n\t  if (neq25519(chk, num)) return -1;\n\n\t  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n\t  M(r[3], r[0], r[1]);\n\t  return 0;\n\t}\n\n\tfunction crypto_sign_open(m, sm, n, pk) {\n\t  var i, mlen;\n\t  var t = new Uint8Array(32), h = new Uint8Array(64);\n\t  var p = [gf(), gf(), gf(), gf()],\n\t      q = [gf(), gf(), gf(), gf()];\n\n\t  mlen = -1;\n\t  if (n < 64) return -1;\n\n\t  if (unpackneg(q, pk)) return -1;\n\n\t  for (i = 0; i < n; i++) m[i] = sm[i];\n\t  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n\t  crypto_hash(h, m, n);\n\t  reduce(h);\n\t  scalarmult(p, q, h);\n\n\t  scalarbase(q, sm.subarray(32));\n\t  add(p, q);\n\t  pack(t, p);\n\n\t  n -= 64;\n\t  if (crypto_verify_32(sm, 0, t, 0)) {\n\t    for (i = 0; i < n; i++) m[i] = 0;\n\t    return -1;\n\t  }\n\n\t  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n\t  mlen = n;\n\t  return mlen;\n\t}\n\n\tvar crypto_secretbox_KEYBYTES = 32,\n\t    crypto_secretbox_NONCEBYTES = 24,\n\t    crypto_secretbox_ZEROBYTES = 32,\n\t    crypto_secretbox_BOXZEROBYTES = 16,\n\t    crypto_scalarmult_BYTES = 32,\n\t    crypto_scalarmult_SCALARBYTES = 32,\n\t    crypto_box_PUBLICKEYBYTES = 32,\n\t    crypto_box_SECRETKEYBYTES = 32,\n\t    crypto_box_BEFORENMBYTES = 32,\n\t    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n\t    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n\t    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n\t    crypto_sign_BYTES = 64,\n\t    crypto_sign_PUBLICKEYBYTES = 32,\n\t    crypto_sign_SECRETKEYBYTES = 64,\n\t    crypto_sign_SEEDBYTES = 32,\n\t    crypto_hash_BYTES = 64;\n\n\tnacl.lowlevel = {\n\t  crypto_core_hsalsa20: crypto_core_hsalsa20,\n\t  crypto_stream_xor: crypto_stream_xor,\n\t  crypto_stream: crypto_stream,\n\t  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n\t  crypto_stream_salsa20: crypto_stream_salsa20,\n\t  crypto_onetimeauth: crypto_onetimeauth,\n\t  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n\t  crypto_verify_16: crypto_verify_16,\n\t  crypto_verify_32: crypto_verify_32,\n\t  crypto_secretbox: crypto_secretbox,\n\t  crypto_secretbox_open: crypto_secretbox_open,\n\t  crypto_scalarmult: crypto_scalarmult,\n\t  crypto_scalarmult_base: crypto_scalarmult_base,\n\t  crypto_box_beforenm: crypto_box_beforenm,\n\t  crypto_box_afternm: crypto_box_afternm,\n\t  crypto_box: crypto_box,\n\t  crypto_box_open: crypto_box_open,\n\t  crypto_box_keypair: crypto_box_keypair,\n\t  crypto_hash: crypto_hash,\n\t  crypto_sign: crypto_sign,\n\t  crypto_sign_keypair: crypto_sign_keypair,\n\t  crypto_sign_open: crypto_sign_open,\n\n\t  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n\t  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n\t  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n\t  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n\t  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n\t  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n\t  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n\t  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n\t  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n\t  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n\t  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n\t  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n\t  crypto_sign_BYTES: crypto_sign_BYTES,\n\t  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n\t  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n\t  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n\t  crypto_hash_BYTES: crypto_hash_BYTES\n\t};\n\n\t/* High-level API */\n\n\tfunction checkLengths(k, n) {\n\t  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n\t  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n\t}\n\n\tfunction checkBoxLengths(pk, sk) {\n\t  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n\t  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n\t}\n\n\tfunction checkArrayTypes() {\n\t  for (var i = 0; i < arguments.length; i++) {\n\t    if (!(arguments[i] instanceof Uint8Array))\n\t      throw new TypeError('unexpected type, use Uint8Array');\n\t  }\n\t}\n\n\tfunction cleanup(arr) {\n\t  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n\t}\n\n\tnacl.randomBytes = function(n) {\n\t  var b = new Uint8Array(n);\n\t  randombytes(b, n);\n\t  return b;\n\t};\n\n\tnacl.secretbox = function(msg, nonce, key) {\n\t  checkArrayTypes(msg, nonce, key);\n\t  checkLengths(key, nonce);\n\t  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n\t  var c = new Uint8Array(m.length);\n\t  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n\t  crypto_secretbox(c, m, m.length, nonce, key);\n\t  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n\t};\n\n\tnacl.secretbox.open = function(box, nonce, key) {\n\t  checkArrayTypes(box, nonce, key);\n\t  checkLengths(key, nonce);\n\t  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n\t  var m = new Uint8Array(c.length);\n\t  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n\t  if (c.length < 32) return null;\n\t  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n\t  return m.subarray(crypto_secretbox_ZEROBYTES);\n\t};\n\n\tnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\n\tnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\n\tnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\n\tnacl.scalarMult = function(n, p) {\n\t  checkArrayTypes(n, p);\n\t  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n\t  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n\t  var q = new Uint8Array(crypto_scalarmult_BYTES);\n\t  crypto_scalarmult(q, n, p);\n\t  return q;\n\t};\n\n\tnacl.scalarMult.base = function(n) {\n\t  checkArrayTypes(n);\n\t  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n\t  var q = new Uint8Array(crypto_scalarmult_BYTES);\n\t  crypto_scalarmult_base(q, n);\n\t  return q;\n\t};\n\n\tnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\n\tnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\n\tnacl.box = function(msg, nonce, publicKey, secretKey) {\n\t  var k = nacl.box.before(publicKey, secretKey);\n\t  return nacl.secretbox(msg, nonce, k);\n\t};\n\n\tnacl.box.before = function(publicKey, secretKey) {\n\t  checkArrayTypes(publicKey, secretKey);\n\t  checkBoxLengths(publicKey, secretKey);\n\t  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n\t  crypto_box_beforenm(k, publicKey, secretKey);\n\t  return k;\n\t};\n\n\tnacl.box.after = nacl.secretbox;\n\n\tnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n\t  var k = nacl.box.before(publicKey, secretKey);\n\t  return nacl.secretbox.open(msg, nonce, k);\n\t};\n\n\tnacl.box.open.after = nacl.secretbox.open;\n\n\tnacl.box.keyPair = function() {\n\t  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n\t  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n\t  crypto_box_keypair(pk, sk);\n\t  return {publicKey: pk, secretKey: sk};\n\t};\n\n\tnacl.box.keyPair.fromSecretKey = function(secretKey) {\n\t  checkArrayTypes(secretKey);\n\t  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n\t    throw new Error('bad secret key size');\n\t  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n\t  crypto_scalarmult_base(pk, secretKey);\n\t  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n\t};\n\n\tnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\n\tnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\n\tnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\n\tnacl.box.nonceLength = crypto_box_NONCEBYTES;\n\tnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\n\tnacl.sign = function(msg, secretKey) {\n\t  checkArrayTypes(msg, secretKey);\n\t  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n\t    throw new Error('bad secret key size');\n\t  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n\t  crypto_sign(signedMsg, msg, msg.length, secretKey);\n\t  return signedMsg;\n\t};\n\n\tnacl.sign.open = function(signedMsg, publicKey) {\n\t  checkArrayTypes(signedMsg, publicKey);\n\t  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n\t    throw new Error('bad public key size');\n\t  var tmp = new Uint8Array(signedMsg.length);\n\t  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n\t  if (mlen < 0) return null;\n\t  var m = new Uint8Array(mlen);\n\t  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n\t  return m;\n\t};\n\n\tnacl.sign.detached = function(msg, secretKey) {\n\t  var signedMsg = nacl.sign(msg, secretKey);\n\t  var sig = new Uint8Array(crypto_sign_BYTES);\n\t  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n\t  return sig;\n\t};\n\n\tnacl.sign.detached.verify = function(msg, sig, publicKey) {\n\t  checkArrayTypes(msg, sig, publicKey);\n\t  if (sig.length !== crypto_sign_BYTES)\n\t    throw new Error('bad signature size');\n\t  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n\t    throw new Error('bad public key size');\n\t  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n\t  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n\t  var i;\n\t  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n\t  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n\t  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n\t};\n\n\tnacl.sign.keyPair = function() {\n\t  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n\t  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n\t  crypto_sign_keypair(pk, sk);\n\t  return {publicKey: pk, secretKey: sk};\n\t};\n\n\tnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n\t  checkArrayTypes(secretKey);\n\t  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n\t    throw new Error('bad secret key size');\n\t  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n\t  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n\t  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n\t};\n\n\tnacl.sign.keyPair.fromSeed = function(seed) {\n\t  checkArrayTypes(seed);\n\t  if (seed.length !== crypto_sign_SEEDBYTES)\n\t    throw new Error('bad seed size');\n\t  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n\t  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n\t  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n\t  crypto_sign_keypair(pk, sk, true);\n\t  return {publicKey: pk, secretKey: sk};\n\t};\n\n\tnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\n\tnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\n\tnacl.sign.seedLength = crypto_sign_SEEDBYTES;\n\tnacl.sign.signatureLength = crypto_sign_BYTES;\n\n\tnacl.hash = function(msg) {\n\t  checkArrayTypes(msg);\n\t  var h = new Uint8Array(crypto_hash_BYTES);\n\t  crypto_hash(h, msg, msg.length);\n\t  return h;\n\t};\n\n\tnacl.hash.hashLength = crypto_hash_BYTES;\n\n\tnacl.verify = function(x, y) {\n\t  checkArrayTypes(x, y);\n\t  // Zero length arguments are considered not equal.\n\t  if (x.length === 0 || y.length === 0) return false;\n\t  if (x.length !== y.length) return false;\n\t  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n\t};\n\n\tnacl.setPRNG = function(fn) {\n\t  randombytes = fn;\n\t};\n\n\t(function() {\n\t  // Initialize PRNG if environment provides CSPRNG.\n\t  // If not, methods calling randombytes will throw.\n\t  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n\t  if (crypto && crypto.getRandomValues) {\n\t    // Browsers.\n\t    var QUOTA = 65536;\n\t    nacl.setPRNG(function(x, n) {\n\t      var i, v = new Uint8Array(n);\n\t      for (i = 0; i < n; i += QUOTA) {\n\t        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n\t      }\n\t      for (i = 0; i < n; i++) x[i] = v[i];\n\t      cleanup(v);\n\t    });\n\t  } else if (true) {\n\t    // Node.js.\n\t    crypto = __webpack_require__(56);\n\t    if (crypto && crypto.randomBytes) {\n\t      nacl.setPRNG(function(x, n) {\n\t        var i, v = crypto.randomBytes(n);\n\t        for (i = 0; i < n; i++) x[i] = v[i];\n\t        cleanup(v);\n\t      });\n\t    }\n\t  }\n\t})();\n\n\t})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n\t// Public domain.\n\t(function(root, f) {\n\t  'use strict';\n\t  if (typeof module !== 'undefined' && module.exports) module.exports = f();\n\t  else if (root.nacl) root.nacl.util = f();\n\t  else {\n\t    root.nacl = {};\n\t    root.nacl.util = f();\n\t  }\n\t}(this, function() {\n\t  'use strict';\n\n\t  var util = {};\n\n\t  function validateBase64(s) {\n\t    if (!(/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(s))) {\n\t      throw new TypeError('invalid encoding');\n\t    }\n\t  }\n\n\t  util.decodeUTF8 = function(s) {\n\t    if (typeof s !== 'string') throw new TypeError('expected string');\n\t    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n\t    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n\t    return b;\n\t  };\n\n\t  util.encodeUTF8 = function(arr) {\n\t    var i, s = [];\n\t    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n\t    return decodeURIComponent(escape(s.join('')));\n\t  };\n\n\t  if (typeof atob === 'undefined') {\n\t    // Node.js\n\n\t    if (typeof Buffer.from !== 'undefined') {\n\t       // Node v6 and later\n\t      util.encodeBase64 = function (arr) { // v6 and later\n\t          return Buffer.from(arr).toString('base64');\n\t      };\n\n\t      util.decodeBase64 = function (s) {\n\t        validateBase64(s);\n\t        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n\t      };\n\n\t    } else {\n\t      // Node earlier than v6\n\t      util.encodeBase64 = function (arr) { // v6 and later\n\t        return (new Buffer(arr)).toString('base64');\n\t      };\n\n\t      util.decodeBase64 = function(s) {\n\t        validateBase64(s);\n\t        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n\t      };\n\t    }\n\n\t  } else {\n\t    // Browsers\n\n\t    util.encodeBase64 = function(arr) {\n\t      var i, s = [], len = arr.length;\n\t      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n\t      return btoa(s.join(''));\n\t    };\n\n\t    util.decodeBase64 = function(s) {\n\t      validateBase64(s);\n\t      var i, d = atob(s), b = new Uint8Array(d.length);\n\t      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n\t      return b;\n\t    };\n\n\t  }\n\n\t  return util;\n\n\t}));\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(58).Buffer))\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n\t/* eslint-disable no-proto */\n\n\t'use strict'\n\n\tvar base64 = __webpack_require__(59)\n\tvar ieee754 = __webpack_require__(60)\n\tvar isArray = __webpack_require__(61)\n\n\texports.Buffer = Buffer\n\texports.SlowBuffer = SlowBuffer\n\texports.INSPECT_MAX_BYTES = 50\n\n\t/**\n\t * If `Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   === true    Use Uint8Array implementation (fastest)\n\t *   === false   Use Object implementation (most compatible, even IE6)\n\t *\n\t * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t * Opera 11.6+, iOS 4.2+.\n\t *\n\t * Due to various browser bugs, sometimes the Object implementation will be used even\n\t * when the browser supports typed arrays.\n\t *\n\t * Note:\n\t *\n\t *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n\t *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n\t *\n\t *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n\t *\n\t *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n\t *     incorrect length in some situations.\n\n\t * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n\t * get the Object implementation, which is slower but behaves correctly.\n\t */\n\tBuffer.TYPED_ARRAY_SUPPORT = (window).TYPED_ARRAY_SUPPORT !== undefined\n\t  ? (window).TYPED_ARRAY_SUPPORT\n\t  : typedArraySupport()\n\n\t/*\n\t * Export kMaxLength after typed array support is determined.\n\t */\n\texports.kMaxLength = kMaxLength()\n\n\tfunction typedArraySupport () {\n\t  try {\n\t    var arr = new Uint8Array(1)\n\t    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n\t    return arr.foo() === 42 && // typed array instances can be augmented\n\t        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n\t        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n\t  } catch (e) {\n\t    return false\n\t  }\n\t}\n\n\tfunction kMaxLength () {\n\t  return Buffer.TYPED_ARRAY_SUPPORT\n\t    ? 0x7fffffff\n\t    : 0x3fffffff\n\t}\n\n\tfunction createBuffer (that, length) {\n\t  if (kMaxLength() < length) {\n\t    throw new RangeError('Invalid typed array length')\n\t  }\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = new Uint8Array(length)\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    if (that === null) {\n\t      that = new Buffer(length)\n\t    }\n\t    that.length = length\n\t  }\n\n\t  return that\n\t}\n\n\t/**\n\t * The Buffer constructor returns instances of `Uint8Array` that have their\n\t * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n\t * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n\t * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n\t * returns a single octet.\n\t *\n\t * The `Uint8Array` prototype remains unmodified.\n\t */\n\n\tfunction Buffer (arg, encodingOrOffset, length) {\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n\t    return new Buffer(arg, encodingOrOffset, length)\n\t  }\n\n\t  // Common case.\n\t  if (typeof arg === 'number') {\n\t    if (typeof encodingOrOffset === 'string') {\n\t      throw new Error(\n\t        'If encoding is specified then the first argument must be a string'\n\t      )\n\t    }\n\t    return allocUnsafe(this, arg)\n\t  }\n\t  return from(this, arg, encodingOrOffset, length)\n\t}\n\n\tBuffer.poolSize = 8192 // not used by this implementation\n\n\t// TODO: Legacy, not needed anymore. Remove in next major version.\n\tBuffer._augment = function (arr) {\n\t  arr.__proto__ = Buffer.prototype\n\t  return arr\n\t}\n\n\tfunction from (that, value, encodingOrOffset, length) {\n\t  if (typeof value === 'number') {\n\t    throw new TypeError('\"value\" argument must not be a number')\n\t  }\n\n\t  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n\t    return fromArrayBuffer(that, value, encodingOrOffset, length)\n\t  }\n\n\t  if (typeof value === 'string') {\n\t    return fromString(that, value, encodingOrOffset)\n\t  }\n\n\t  return fromObject(that, value)\n\t}\n\n\t/**\n\t * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n\t * if value is a number.\n\t * Buffer.from(str[, encoding])\n\t * Buffer.from(array)\n\t * Buffer.from(buffer)\n\t * Buffer.from(arrayBuffer[, byteOffset[, length]])\n\t **/\n\tBuffer.from = function (value, encodingOrOffset, length) {\n\t  return from(null, value, encodingOrOffset, length)\n\t}\n\n\tif (Buffer.TYPED_ARRAY_SUPPORT) {\n\t  Buffer.prototype.__proto__ = Uint8Array.prototype\n\t  Buffer.__proto__ = Uint8Array\n\t  if (typeof Symbol !== 'undefined' && Symbol.species &&\n\t      Buffer[Symbol.species] === Buffer) {\n\t    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n\t    Object.defineProperty(Buffer, Symbol.species, {\n\t      value: null,\n\t      configurable: true\n\t    })\n\t  }\n\t}\n\n\tfunction assertSize (size) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('\"size\" argument must be a number')\n\t  } else if (size < 0) {\n\t    throw new RangeError('\"size\" argument must not be negative')\n\t  }\n\t}\n\n\tfunction alloc (that, size, fill, encoding) {\n\t  assertSize(size)\n\t  if (size <= 0) {\n\t    return createBuffer(that, size)\n\t  }\n\t  if (fill !== undefined) {\n\t    // Only pay attention to encoding if it's a string. This\n\t    // prevents accidentally sending in a number that would\n\t    // be interpretted as a start offset.\n\t    return typeof encoding === 'string'\n\t      ? createBuffer(that, size).fill(fill, encoding)\n\t      : createBuffer(that, size).fill(fill)\n\t  }\n\t  return createBuffer(that, size)\n\t}\n\n\t/**\n\t * Creates a new filled Buffer instance.\n\t * alloc(size[, fill[, encoding]])\n\t **/\n\tBuffer.alloc = function (size, fill, encoding) {\n\t  return alloc(null, size, fill, encoding)\n\t}\n\n\tfunction allocUnsafe (that, size) {\n\t  assertSize(size)\n\t  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n\t    for (var i = 0; i < size; ++i) {\n\t      that[i] = 0\n\t    }\n\t  }\n\t  return that\n\t}\n\n\t/**\n\t * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n\t * */\n\tBuffer.allocUnsafe = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t/**\n\t * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n\t */\n\tBuffer.allocUnsafeSlow = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\n\tfunction fromString (that, string, encoding) {\n\t  if (typeof encoding !== 'string' || encoding === '') {\n\t    encoding = 'utf8'\n\t  }\n\n\t  if (!Buffer.isEncoding(encoding)) {\n\t    throw new TypeError('\"encoding\" must be a valid string encoding')\n\t  }\n\n\t  var length = byteLength(string, encoding) | 0\n\t  that = createBuffer(that, length)\n\n\t  var actual = that.write(string, encoding)\n\n\t  if (actual !== length) {\n\t    // Writing a hex string, for example, that contains invalid characters will\n\t    // cause everything after the first invalid character to be ignored. (e.g.\n\t    // 'abxxcd' will be treated as 'ab')\n\t    that = that.slice(0, actual)\n\t  }\n\n\t  return that\n\t}\n\n\tfunction fromArrayLike (that, array) {\n\t  var length = array.length < 0 ? 0 : checked(array.length) | 0\n\t  that = createBuffer(that, length)\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\n\tfunction fromArrayBuffer (that, array, byteOffset, length) {\n\t  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n\t  if (byteOffset < 0 || array.byteLength < byteOffset) {\n\t    throw new RangeError('\\'offset\\' is out of bounds')\n\t  }\n\n\t  if (array.byteLength < byteOffset + (length || 0)) {\n\t    throw new RangeError('\\'length\\' is out of bounds')\n\t  }\n\n\t  if (byteOffset === undefined && length === undefined) {\n\t    array = new Uint8Array(array)\n\t  } else if (length === undefined) {\n\t    array = new Uint8Array(array, byteOffset)\n\t  } else {\n\t    array = new Uint8Array(array, byteOffset, length)\n\t  }\n\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = array\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    that = fromArrayLike(that, array)\n\t  }\n\t  return that\n\t}\n\n\tfunction fromObject (that, obj) {\n\t  if (Buffer.isBuffer(obj)) {\n\t    var len = checked(obj.length) | 0\n\t    that = createBuffer(that, len)\n\n\t    if (that.length === 0) {\n\t      return that\n\t    }\n\n\t    obj.copy(that, 0, 0, len)\n\t    return that\n\t  }\n\n\t  if (obj) {\n\t    if ((typeof ArrayBuffer !== 'undefined' &&\n\t        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n\t      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n\t        return createBuffer(that, 0)\n\t      }\n\t      return fromArrayLike(that, obj)\n\t    }\n\n\t    if (obj.type === 'Buffer' && isArray(obj.data)) {\n\t      return fromArrayLike(that, obj.data)\n\t    }\n\t  }\n\n\t  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n\t}\n\n\tfunction checked (length) {\n\t  // Note: cannot use `length < kMaxLength()` here because that fails when\n\t  // length is NaN (which is otherwise coerced to zero.)\n\t  if (length >= kMaxLength()) {\n\t    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n\t                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n\t  }\n\t  return length | 0\n\t}\n\n\tfunction SlowBuffer (length) {\n\t  if (+length != length) { // eslint-disable-line eqeqeq\n\t    length = 0\n\t  }\n\t  return Buffer.alloc(+length)\n\t}\n\n\tBuffer.isBuffer = function isBuffer (b) {\n\t  return !!(b != null && b._isBuffer)\n\t}\n\n\tBuffer.compare = function compare (a, b) {\n\t  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n\t    throw new TypeError('Arguments must be Buffers')\n\t  }\n\n\t  if (a === b) return 0\n\n\t  var x = a.length\n\t  var y = b.length\n\n\t  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n\t    if (a[i] !== b[i]) {\n\t      x = a[i]\n\t      y = b[i]\n\t      break\n\t    }\n\t  }\n\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\n\tBuffer.isEncoding = function isEncoding (encoding) {\n\t  switch (String(encoding).toLowerCase()) {\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    case 'ascii':\n\t    case 'latin1':\n\t    case 'binary':\n\t    case 'base64':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return true\n\t    default:\n\t      return false\n\t  }\n\t}\n\n\tBuffer.concat = function concat (list, length) {\n\t  if (!isArray(list)) {\n\t    throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t  }\n\n\t  if (list.length === 0) {\n\t    return Buffer.alloc(0)\n\t  }\n\n\t  var i\n\t  if (length === undefined) {\n\t    length = 0\n\t    for (i = 0; i < list.length; ++i) {\n\t      length += list[i].length\n\t    }\n\t  }\n\n\t  var buffer = Buffer.allocUnsafe(length)\n\t  var pos = 0\n\t  for (i = 0; i < list.length; ++i) {\n\t    var buf = list[i]\n\t    if (!Buffer.isBuffer(buf)) {\n\t      throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t    }\n\t    buf.copy(buffer, pos)\n\t    pos += buf.length\n\t  }\n\t  return buffer\n\t}\n\n\tfunction byteLength (string, encoding) {\n\t  if (Buffer.isBuffer(string)) {\n\t    return string.length\n\t  }\n\t  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n\t      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n\t    return string.byteLength\n\t  }\n\t  if (typeof string !== 'string') {\n\t    string = '' + string\n\t  }\n\n\t  var len = string.length\n\t  if (len === 0) return 0\n\n\t  // Use a for loop to avoid recursion\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'ascii':\n\t      case 'latin1':\n\t      case 'binary':\n\t        return len\n\t      case 'utf8':\n\t      case 'utf-8':\n\t      case undefined:\n\t        return utf8ToBytes(string).length\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return len * 2\n\t      case 'hex':\n\t        return len >>> 1\n\t      case 'base64':\n\t        return base64ToBytes(string).length\n\t      default:\n\t        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\tBuffer.byteLength = byteLength\n\n\tfunction slowToString (encoding, start, end) {\n\t  var loweredCase = false\n\n\t  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n\t  // property of a typed array.\n\n\t  // This behaves neither like String nor Uint8Array in that we set start/end\n\t  // to their upper/lower bounds if the value passed is out of range.\n\t  // undefined is handled specially as per ECMA-262 6th Edition,\n\t  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\t  if (start === undefined || start < 0) {\n\t    start = 0\n\t  }\n\t  // Return early if start > this.length. Done here to prevent potential uint32\n\t  // coercion fail below.\n\t  if (start > this.length) {\n\t    return ''\n\t  }\n\n\t  if (end === undefined || end > this.length) {\n\t    end = this.length\n\t  }\n\n\t  if (end <= 0) {\n\t    return ''\n\t  }\n\n\t  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\t  end >>>= 0\n\t  start >>>= 0\n\n\t  if (end <= start) {\n\t    return ''\n\t  }\n\n\t  if (!encoding) encoding = 'utf8'\n\n\t  while (true) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexSlice(this, start, end)\n\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Slice(this, start, end)\n\n\t      case 'ascii':\n\t        return asciiSlice(this, start, end)\n\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Slice(this, start, end)\n\n\t      case 'base64':\n\t        return base64Slice(this, start, end)\n\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return utf16leSlice(this, start, end)\n\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = (encoding + '').toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\n\t// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n\t// Buffer instances.\n\tBuffer.prototype._isBuffer = true\n\n\tfunction swap (b, n, m) {\n\t  var i = b[n]\n\t  b[n] = b[m]\n\t  b[m] = i\n\t}\n\n\tBuffer.prototype.swap16 = function swap16 () {\n\t  var len = this.length\n\t  if (len % 2 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 16-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 2) {\n\t    swap(this, i, i + 1)\n\t  }\n\t  return this\n\t}\n\n\tBuffer.prototype.swap32 = function swap32 () {\n\t  var len = this.length\n\t  if (len % 4 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 32-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 4) {\n\t    swap(this, i, i + 3)\n\t    swap(this, i + 1, i + 2)\n\t  }\n\t  return this\n\t}\n\n\tBuffer.prototype.swap64 = function swap64 () {\n\t  var len = this.length\n\t  if (len % 8 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 64-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 8) {\n\t    swap(this, i, i + 7)\n\t    swap(this, i + 1, i + 6)\n\t    swap(this, i + 2, i + 5)\n\t    swap(this, i + 3, i + 4)\n\t  }\n\t  return this\n\t}\n\n\tBuffer.prototype.toString = function toString () {\n\t  var length = this.length | 0\n\t  if (length === 0) return ''\n\t  if (arguments.length === 0) return utf8Slice(this, 0, length)\n\t  return slowToString.apply(this, arguments)\n\t}\n\n\tBuffer.prototype.equals = function equals (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return true\n\t  return Buffer.compare(this, b) === 0\n\t}\n\n\tBuffer.prototype.inspect = function inspect () {\n\t  var str = ''\n\t  var max = exports.INSPECT_MAX_BYTES\n\t  if (this.length > 0) {\n\t    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n\t    if (this.length > max) str += ' ... '\n\t  }\n\t  return '<Buffer ' + str + '>'\n\t}\n\n\tBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n\t  if (!Buffer.isBuffer(target)) {\n\t    throw new TypeError('Argument must be a Buffer')\n\t  }\n\n\t  if (start === undefined) {\n\t    start = 0\n\t  }\n\t  if (end === undefined) {\n\t    end = target ? target.length : 0\n\t  }\n\t  if (thisStart === undefined) {\n\t    thisStart = 0\n\t  }\n\t  if (thisEnd === undefined) {\n\t    thisEnd = this.length\n\t  }\n\n\t  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n\t    throw new RangeError('out of range index')\n\t  }\n\n\t  if (thisStart >= thisEnd && start >= end) {\n\t    return 0\n\t  }\n\t  if (thisStart >= thisEnd) {\n\t    return -1\n\t  }\n\t  if (start >= end) {\n\t    return 1\n\t  }\n\n\t  start >>>= 0\n\t  end >>>= 0\n\t  thisStart >>>= 0\n\t  thisEnd >>>= 0\n\n\t  if (this === target) return 0\n\n\t  var x = thisEnd - thisStart\n\t  var y = end - start\n\t  var len = Math.min(x, y)\n\n\t  var thisCopy = this.slice(thisStart, thisEnd)\n\t  var targetCopy = target.slice(start, end)\n\n\t  for (var i = 0; i < len; ++i) {\n\t    if (thisCopy[i] !== targetCopy[i]) {\n\t      x = thisCopy[i]\n\t      y = targetCopy[i]\n\t      break\n\t    }\n\t  }\n\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\n\t// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n\t// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n\t//\n\t// Arguments:\n\t// - buffer - a Buffer to search\n\t// - val - a string, Buffer, or number\n\t// - byteOffset - an index into `buffer`; will be clamped to an int32\n\t// - encoding - an optional encoding, relevant is val is a string\n\t// - dir - true for indexOf, false for lastIndexOf\n\tfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n\t  // Empty buffer means no match\n\t  if (buffer.length === 0) return -1\n\n\t  // Normalize byteOffset\n\t  if (typeof byteOffset === 'string') {\n\t    encoding = byteOffset\n\t    byteOffset = 0\n\t  } else if (byteOffset > 0x7fffffff) {\n\t    byteOffset = 0x7fffffff\n\t  } else if (byteOffset < -0x80000000) {\n\t    byteOffset = -0x80000000\n\t  }\n\t  byteOffset = +byteOffset  // Coerce to Number.\n\t  if (isNaN(byteOffset)) {\n\t    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n\t    byteOffset = dir ? 0 : (buffer.length - 1)\n\t  }\n\n\t  // Normalize byteOffset: negative offsets start from the end of the buffer\n\t  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n\t  if (byteOffset >= buffer.length) {\n\t    if (dir) return -1\n\t    else byteOffset = buffer.length - 1\n\t  } else if (byteOffset < 0) {\n\t    if (dir) byteOffset = 0\n\t    else return -1\n\t  }\n\n\t  // Normalize val\n\t  if (typeof val === 'string') {\n\t    val = Buffer.from(val, encoding)\n\t  }\n\n\t  // Finally, search either indexOf (if dir is true) or lastIndexOf\n\t  if (Buffer.isBuffer(val)) {\n\t    // Special case: looking for empty string/buffer always fails\n\t    if (val.length === 0) {\n\t      return -1\n\t    }\n\t    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n\t  } else if (typeof val === 'number') {\n\t    val = val & 0xFF // Search for a byte value [0-255]\n\t    if (Buffer.TYPED_ARRAY_SUPPORT &&\n\t        typeof Uint8Array.prototype.indexOf === 'function') {\n\t      if (dir) {\n\t        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n\t      } else {\n\t        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n\t      }\n\t    }\n\t    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n\t  }\n\n\t  throw new TypeError('val must be string, number or Buffer')\n\t}\n\n\tfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n\t  var indexSize = 1\n\t  var arrLength = arr.length\n\t  var valLength = val.length\n\n\t  if (encoding !== undefined) {\n\t    encoding = String(encoding).toLowerCase()\n\t    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n\t        encoding === 'utf16le' || encoding === 'utf-16le') {\n\t      if (arr.length < 2 || val.length < 2) {\n\t        return -1\n\t      }\n\t      indexSize = 2\n\t      arrLength /= 2\n\t      valLength /= 2\n\t      byteOffset /= 2\n\t    }\n\t  }\n\n\t  function read (buf, i) {\n\t    if (indexSize === 1) {\n\t      return buf[i]\n\t    } else {\n\t      return buf.readUInt16BE(i * indexSize)\n\t    }\n\t  }\n\n\t  var i\n\t  if (dir) {\n\t    var foundIndex = -1\n\t    for (i = byteOffset; i < arrLength; i++) {\n\t      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n\t        if (foundIndex === -1) foundIndex = i\n\t        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n\t      } else {\n\t        if (foundIndex !== -1) i -= i - foundIndex\n\t        foundIndex = -1\n\t      }\n\t    }\n\t  } else {\n\t    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n\t    for (i = byteOffset; i >= 0; i--) {\n\t      var found = true\n\t      for (var j = 0; j < valLength; j++) {\n\t        if (read(arr, i + j) !== read(val, j)) {\n\t          found = false\n\t          break\n\t        }\n\t      }\n\t      if (found) return i\n\t    }\n\t  }\n\n\t  return -1\n\t}\n\n\tBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n\t  return this.indexOf(val, byteOffset, encoding) !== -1\n\t}\n\n\tBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n\t}\n\n\tBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n\t}\n\n\tfunction hexWrite (buf, string, offset, length) {\n\t  offset = Number(offset) || 0\n\t  var remaining = buf.length - offset\n\t  if (!length) {\n\t    length = remaining\n\t  } else {\n\t    length = Number(length)\n\t    if (length > remaining) {\n\t      length = remaining\n\t    }\n\t  }\n\n\t  // must be an even number of digits\n\t  var strLen = string.length\n\t  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n\t  if (length > strLen / 2) {\n\t    length = strLen / 2\n\t  }\n\t  for (var i = 0; i < length; ++i) {\n\t    var parsed = parseInt(string.substr(i * 2, 2), 16)\n\t    if (isNaN(parsed)) return i\n\t    buf[offset + i] = parsed\n\t  }\n\t  return i\n\t}\n\n\tfunction utf8Write (buf, string, offset, length) {\n\t  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\n\tfunction asciiWrite (buf, string, offset, length) {\n\t  return blitBuffer(asciiToBytes(string), buf, offset, length)\n\t}\n\n\tfunction latin1Write (buf, string, offset, length) {\n\t  return asciiWrite(buf, string, offset, length)\n\t}\n\n\tfunction base64Write (buf, string, offset, length) {\n\t  return blitBuffer(base64ToBytes(string), buf, offset, length)\n\t}\n\n\tfunction ucs2Write (buf, string, offset, length) {\n\t  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\n\tBuffer.prototype.write = function write (string, offset, length, encoding) {\n\t  // Buffer#write(string)\n\t  if (offset === undefined) {\n\t    encoding = 'utf8'\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, encoding)\n\t  } else if (length === undefined && typeof offset === 'string') {\n\t    encoding = offset\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, offset[, length][, encoding])\n\t  } else if (isFinite(offset)) {\n\t    offset = offset | 0\n\t    if (isFinite(length)) {\n\t      length = length | 0\n\t      if (encoding === undefined) encoding = 'utf8'\n\t    } else {\n\t      encoding = length\n\t      length = undefined\n\t    }\n\t  // legacy write(string, encoding, offset, length) - remove in v0.13\n\t  } else {\n\t    throw new Error(\n\t      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n\t    )\n\t  }\n\n\t  var remaining = this.length - offset\n\t  if (length === undefined || length > remaining) length = remaining\n\n\t  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n\t    throw new RangeError('Attempt to write outside buffer bounds')\n\t  }\n\n\t  if (!encoding) encoding = 'utf8'\n\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexWrite(this, string, offset, length)\n\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Write(this, string, offset, length)\n\n\t      case 'ascii':\n\t        return asciiWrite(this, string, offset, length)\n\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Write(this, string, offset, length)\n\n\t      case 'base64':\n\t        // Warning: maxLength not taken into account in base64Write\n\t        return base64Write(this, string, offset, length)\n\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return ucs2Write(this, string, offset, length)\n\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\n\tBuffer.prototype.toJSON = function toJSON () {\n\t  return {\n\t    type: 'Buffer',\n\t    data: Array.prototype.slice.call(this._arr || this, 0)\n\t  }\n\t}\n\n\tfunction base64Slice (buf, start, end) {\n\t  if (start === 0 && end === buf.length) {\n\t    return base64.fromByteArray(buf)\n\t  } else {\n\t    return base64.fromByteArray(buf.slice(start, end))\n\t  }\n\t}\n\n\tfunction utf8Slice (buf, start, end) {\n\t  end = Math.min(buf.length, end)\n\t  var res = []\n\n\t  var i = start\n\t  while (i < end) {\n\t    var firstByte = buf[i]\n\t    var codePoint = null\n\t    var bytesPerSequence = (firstByte > 0xEF) ? 4\n\t      : (firstByte > 0xDF) ? 3\n\t      : (firstByte > 0xBF) ? 2\n\t      : 1\n\n\t    if (i + bytesPerSequence <= end) {\n\t      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n\t      switch (bytesPerSequence) {\n\t        case 1:\n\t          if (firstByte < 0x80) {\n\t            codePoint = firstByte\n\t          }\n\t          break\n\t        case 2:\n\t          secondByte = buf[i + 1]\n\t          if ((secondByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n\t            if (tempCodePoint > 0x7F) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 3:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n\t            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 4:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          fourthByte = buf[i + 3]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n\t            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t      }\n\t    }\n\n\t    if (codePoint === null) {\n\t      // we did not generate a valid codePoint so insert a\n\t      // replacement char (U+FFFD) and advance only 1 byte\n\t      codePoint = 0xFFFD\n\t      bytesPerSequence = 1\n\t    } else if (codePoint > 0xFFFF) {\n\t      // encode to utf16 (surrogate pair dance)\n\t      codePoint -= 0x10000\n\t      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n\t      codePoint = 0xDC00 | codePoint & 0x3FF\n\t    }\n\n\t    res.push(codePoint)\n\t    i += bytesPerSequence\n\t  }\n\n\t  return decodeCodePointsArray(res)\n\t}\n\n\t// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n\t// the lowest limit is Chrome, with 0x10000 args.\n\t// We go 1 magnitude less, for safety\n\tvar MAX_ARGUMENTS_LENGTH = 0x1000\n\n\tfunction decodeCodePointsArray (codePoints) {\n\t  var len = codePoints.length\n\t  if (len <= MAX_ARGUMENTS_LENGTH) {\n\t    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n\t  }\n\n\t  // Decode in chunks to avoid \"call stack size exceeded\".\n\t  var res = ''\n\t  var i = 0\n\t  while (i < len) {\n\t    res += String.fromCharCode.apply(\n\t      String,\n\t      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n\t    )\n\t  }\n\t  return res\n\t}\n\n\tfunction asciiSlice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i] & 0x7F)\n\t  }\n\t  return ret\n\t}\n\n\tfunction latin1Slice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i])\n\t  }\n\t  return ret\n\t}\n\n\tfunction hexSlice (buf, start, end) {\n\t  var len = buf.length\n\n\t  if (!start || start < 0) start = 0\n\t  if (!end || end < 0 || end > len) end = len\n\n\t  var out = ''\n\t  for (var i = start; i < end; ++i) {\n\t    out += toHex(buf[i])\n\t  }\n\t  return out\n\t}\n\n\tfunction utf16leSlice (buf, start, end) {\n\t  var bytes = buf.slice(start, end)\n\t  var res = ''\n\t  for (var i = 0; i < bytes.length; i += 2) {\n\t    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n\t  }\n\t  return res\n\t}\n\n\tBuffer.prototype.slice = function slice (start, end) {\n\t  var len = this.length\n\t  start = ~~start\n\t  end = end === undefined ? len : ~~end\n\n\t  if (start < 0) {\n\t    start += len\n\t    if (start < 0) start = 0\n\t  } else if (start > len) {\n\t    start = len\n\t  }\n\n\t  if (end < 0) {\n\t    end += len\n\t    if (end < 0) end = 0\n\t  } else if (end > len) {\n\t    end = len\n\t  }\n\n\t  if (end < start) end = start\n\n\t  var newBuf\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    newBuf = this.subarray(start, end)\n\t    newBuf.__proto__ = Buffer.prototype\n\t  } else {\n\t    var sliceLen = end - start\n\t    newBuf = new Buffer(sliceLen, undefined)\n\t    for (var i = 0; i < sliceLen; ++i) {\n\t      newBuf[i] = this[i + start]\n\t    }\n\t  }\n\n\t  return newBuf\n\t}\n\n\t/*\n\t * Need to make sure that buffer isn't trying to write out of bounds.\n\t */\n\tfunction checkOffset (offset, ext, length) {\n\t  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n\t  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n\t}\n\n\tBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\n\t  return val\n\t}\n\n\tBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    checkOffset(offset, byteLength, this.length)\n\t  }\n\n\t  var val = this[offset + --byteLength]\n\t  var mul = 1\n\t  while (byteLength > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --byteLength] * mul\n\t  }\n\n\t  return val\n\t}\n\n\tBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  return this[offset]\n\t}\n\n\tBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return this[offset] | (this[offset + 1] << 8)\n\t}\n\n\tBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return (this[offset] << 8) | this[offset + 1]\n\t}\n\n\tBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\n\t  return ((this[offset]) |\n\t      (this[offset + 1] << 8) |\n\t      (this[offset + 2] << 16)) +\n\t      (this[offset + 3] * 0x1000000)\n\t}\n\n\tBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\n\t  return (this[offset] * 0x1000000) +\n\t    ((this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    this[offset + 3])\n\t}\n\n\tBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t  mul *= 0x80\n\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n\t  return val\n\t}\n\n\tBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n\t  var i = byteLength\n\t  var mul = 1\n\t  var val = this[offset + --i]\n\t  while (i > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --i] * mul\n\t  }\n\t  mul *= 0x80\n\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n\t  return val\n\t}\n\n\tBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  if (!(this[offset] & 0x80)) return (this[offset])\n\t  return ((0xff - this[offset] + 1) * -1)\n\t}\n\n\tBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset] | (this[offset + 1] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\n\tBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset + 1] | (this[offset] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\n\tBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\n\t  return (this[offset]) |\n\t    (this[offset + 1] << 8) |\n\t    (this[offset + 2] << 16) |\n\t    (this[offset + 3] << 24)\n\t}\n\n\tBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\n\t  return (this[offset] << 24) |\n\t    (this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    (this[offset + 3])\n\t}\n\n\tBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, true, 23, 4)\n\t}\n\n\tBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, false, 23, 4)\n\t}\n\n\tBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, true, 52, 8)\n\t}\n\n\tBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, false, 52, 8)\n\t}\n\n\tfunction checkInt (buf, value, offset, ext, max, min) {\n\t  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n\t  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t}\n\n\tBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\n\t  var mul = 1\n\t  var i = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\n\t  return offset + byteLength\n\t}\n\n\tBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\n\t  return offset + byteLength\n\t}\n\n\tBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\n\tfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n\t    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n\t      (littleEndian ? i : 1 - i) * 8\n\t  }\n\t}\n\n\tBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\n\tBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\n\tfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n\t    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n\t  }\n\t}\n\n\tBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset + 3] = (value >>> 24)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\n\tBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\n\tBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\n\t  var i = 0\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\n\t  return offset + byteLength\n\t}\n\n\tBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\n\t  return offset + byteLength\n\t}\n\n\tBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  if (value < 0) value = 0xff + value + 1\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\n\tBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\n\tBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\n\tBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 3] = (value >>> 24)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\n\tBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\n\tfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t  if (offset < 0) throw new RangeError('Index out of range')\n\t}\n\n\tfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n\t  return offset + 4\n\t}\n\n\tBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, true, noAssert)\n\t}\n\n\tBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, false, noAssert)\n\t}\n\n\tfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n\t  return offset + 8\n\t}\n\n\tBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, true, noAssert)\n\t}\n\n\tBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, false, noAssert)\n\t}\n\n\t// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\tBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n\t  if (!start) start = 0\n\t  if (!end && end !== 0) end = this.length\n\t  if (targetStart >= target.length) targetStart = target.length\n\t  if (!targetStart) targetStart = 0\n\t  if (end > 0 && end < start) end = start\n\n\t  // Copy 0 bytes; we're done\n\t  if (end === start) return 0\n\t  if (target.length === 0 || this.length === 0) return 0\n\n\t  // Fatal error conditions\n\t  if (targetStart < 0) {\n\t    throw new RangeError('targetStart out of bounds')\n\t  }\n\t  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n\t  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n\t  // Are we oob?\n\t  if (end > this.length) end = this.length\n\t  if (target.length - targetStart < end - start) {\n\t    end = target.length - targetStart + start\n\t  }\n\n\t  var len = end - start\n\t  var i\n\n\t  if (this === target && start < targetStart && targetStart < end) {\n\t    // descending copy from end\n\t    for (i = len - 1; i >= 0; --i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // ascending copy from start\n\t    for (i = 0; i < len; ++i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else {\n\t    Uint8Array.prototype.set.call(\n\t      target,\n\t      this.subarray(start, start + len),\n\t      targetStart\n\t    )\n\t  }\n\n\t  return len\n\t}\n\n\t// Usage:\n\t//    buffer.fill(number[, offset[, end]])\n\t//    buffer.fill(buffer[, offset[, end]])\n\t//    buffer.fill(string[, offset[, end]][, encoding])\n\tBuffer.prototype.fill = function fill (val, start, end, encoding) {\n\t  // Handle string cases:\n\t  if (typeof val === 'string') {\n\t    if (typeof start === 'string') {\n\t      encoding = start\n\t      start = 0\n\t      end = this.length\n\t    } else if (typeof end === 'string') {\n\t      encoding = end\n\t      end = this.length\n\t    }\n\t    if (val.length === 1) {\n\t      var code = val.charCodeAt(0)\n\t      if (code < 256) {\n\t        val = code\n\t      }\n\t    }\n\t    if (encoding !== undefined && typeof encoding !== 'string') {\n\t      throw new TypeError('encoding must be a string')\n\t    }\n\t    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n\t      throw new TypeError('Unknown encoding: ' + encoding)\n\t    }\n\t  } else if (typeof val === 'number') {\n\t    val = val & 255\n\t  }\n\n\t  // Invalid ranges are not set to a default, so can range check early.\n\t  if (start < 0 || this.length < start || this.length < end) {\n\t    throw new RangeError('Out of range index')\n\t  }\n\n\t  if (end <= start) {\n\t    return this\n\t  }\n\n\t  start = start >>> 0\n\t  end = end === undefined ? this.length : end >>> 0\n\n\t  if (!val) val = 0\n\n\t  var i\n\t  if (typeof val === 'number') {\n\t    for (i = start; i < end; ++i) {\n\t      this[i] = val\n\t    }\n\t  } else {\n\t    var bytes = Buffer.isBuffer(val)\n\t      ? val\n\t      : utf8ToBytes(new Buffer(val, encoding).toString())\n\t    var len = bytes.length\n\t    for (i = 0; i < end - start; ++i) {\n\t      this[i + start] = bytes[i % len]\n\t    }\n\t  }\n\n\t  return this\n\t}\n\n\t// HELPER FUNCTIONS\n\t// ================\n\n\tvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\n\tfunction base64clean (str) {\n\t  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\t  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n\t  // Node converts strings with length < 2 to ''\n\t  if (str.length < 2) return ''\n\t  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\t  while (str.length % 4 !== 0) {\n\t    str = str + '='\n\t  }\n\t  return str\n\t}\n\n\tfunction stringtrim (str) {\n\t  if (str.trim) return str.trim()\n\t  return str.replace(/^\\s+|\\s+$/g, '')\n\t}\n\n\tfunction toHex (n) {\n\t  if (n < 16) return '0' + n.toString(16)\n\t  return n.toString(16)\n\t}\n\n\tfunction utf8ToBytes (string, units) {\n\t  units = units || Infinity\n\t  var codePoint\n\t  var length = string.length\n\t  var leadSurrogate = null\n\t  var bytes = []\n\n\t  for (var i = 0; i < length; ++i) {\n\t    codePoint = string.charCodeAt(i)\n\n\t    // is surrogate component\n\t    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\t      // last char was a lead\n\t      if (!leadSurrogate) {\n\t        // no lead yet\n\t        if (codePoint > 0xDBFF) {\n\t          // unexpected trail\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        } else if (i + 1 === length) {\n\t          // unpaired lead\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        }\n\n\t        // valid lead\n\t        leadSurrogate = codePoint\n\n\t        continue\n\t      }\n\n\t      // 2 leads in a row\n\t      if (codePoint < 0xDC00) {\n\t        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t        leadSurrogate = codePoint\n\t        continue\n\t      }\n\n\t      // valid surrogate pair\n\t      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n\t    } else if (leadSurrogate) {\n\t      // valid bmp char, but last char was a lead\n\t      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t    }\n\n\t    leadSurrogate = null\n\n\t    // encode utf8\n\t    if (codePoint < 0x80) {\n\t      if ((units -= 1) < 0) break\n\t      bytes.push(codePoint)\n\t    } else if (codePoint < 0x800) {\n\t      if ((units -= 2) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x6 | 0xC0,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x10000) {\n\t      if ((units -= 3) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0xC | 0xE0,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x110000) {\n\t      if ((units -= 4) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x12 | 0xF0,\n\t        codePoint >> 0xC & 0x3F | 0x80,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else {\n\t      throw new Error('Invalid code point')\n\t    }\n\t  }\n\n\t  return bytes\n\t}\n\n\tfunction asciiToBytes (str) {\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    // Node's code seems to be doing this and not & 0x7F..\n\t    byteArray.push(str.charCodeAt(i) & 0xFF)\n\t  }\n\t  return byteArray\n\t}\n\n\tfunction utf16leToBytes (str, units) {\n\t  var c, hi, lo\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    if ((units -= 2) < 0) break\n\n\t    c = str.charCodeAt(i)\n\t    hi = c >> 8\n\t    lo = c % 256\n\t    byteArray.push(lo)\n\t    byteArray.push(hi)\n\t  }\n\n\t  return byteArray\n\t}\n\n\tfunction base64ToBytes (str) {\n\t  return base64.toByteArray(base64clean(str))\n\t}\n\n\tfunction blitBuffer (src, dst, offset, length) {\n\t  for (var i = 0; i < length; ++i) {\n\t    if ((i + offset >= dst.length) || (i >= src.length)) break\n\t    dst[i + offset] = src[i]\n\t  }\n\t  return i\n\t}\n\n\tfunction isnan (val) {\n\t  return val !== val // eslint-disable-line no-self-compare\n\t}\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports) {\n\n\t'use strict'\n\n\texports.byteLength = byteLength\n\texports.toByteArray = toByteArray\n\texports.fromByteArray = fromByteArray\n\n\tvar lookup = []\n\tvar revLookup = []\n\tvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\n\tvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\tfor (var i = 0, len = code.length; i < len; ++i) {\n\t  lookup[i] = code[i]\n\t  revLookup[code.charCodeAt(i)] = i\n\t}\n\n\t// Support decoding URL-safe base64 strings, as Node.js does.\n\t// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\trevLookup['-'.charCodeAt(0)] = 62\n\trevLookup['_'.charCodeAt(0)] = 63\n\n\tfunction getLens (b64) {\n\t  var len = b64.length\n\n\t  if (len % 4 > 0) {\n\t    throw new Error('Invalid string. Length must be a multiple of 4')\n\t  }\n\n\t  // Trim off extra bytes after placeholder bytes are found\n\t  // See: https://github.com/beatgammit/base64-js/issues/42\n\t  var validLen = b64.indexOf('=')\n\t  if (validLen === -1) validLen = len\n\n\t  var placeHoldersLen = validLen === len\n\t    ? 0\n\t    : 4 - (validLen % 4)\n\n\t  return [validLen, placeHoldersLen]\n\t}\n\n\t// base64 is 4/3 + up to two characters of the original data\n\tfunction byteLength (b64) {\n\t  var lens = getLens(b64)\n\t  var validLen = lens[0]\n\t  var placeHoldersLen = lens[1]\n\t  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n\t}\n\n\tfunction _byteLength (b64, validLen, placeHoldersLen) {\n\t  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n\t}\n\n\tfunction toByteArray (b64) {\n\t  var tmp\n\t  var lens = getLens(b64)\n\t  var validLen = lens[0]\n\t  var placeHoldersLen = lens[1]\n\n\t  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n\t  var curByte = 0\n\n\t  // if there are placeholders, only get up to the last complete 4 chars\n\t  var len = placeHoldersLen > 0\n\t    ? validLen - 4\n\t    : validLen\n\n\t  for (var i = 0; i < len; i += 4) {\n\t    tmp =\n\t      (revLookup[b64.charCodeAt(i)] << 18) |\n\t      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n\t      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n\t      revLookup[b64.charCodeAt(i + 3)]\n\t    arr[curByte++] = (tmp >> 16) & 0xFF\n\t    arr[curByte++] = (tmp >> 8) & 0xFF\n\t    arr[curByte++] = tmp & 0xFF\n\t  }\n\n\t  if (placeHoldersLen === 2) {\n\t    tmp =\n\t      (revLookup[b64.charCodeAt(i)] << 2) |\n\t      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n\t    arr[curByte++] = tmp & 0xFF\n\t  }\n\n\t  if (placeHoldersLen === 1) {\n\t    tmp =\n\t      (revLookup[b64.charCodeAt(i)] << 10) |\n\t      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n\t      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n\t    arr[curByte++] = (tmp >> 8) & 0xFF\n\t    arr[curByte++] = tmp & 0xFF\n\t  }\n\n\t  return arr\n\t}\n\n\tfunction tripletToBase64 (num) {\n\t  return lookup[num >> 18 & 0x3F] +\n\t    lookup[num >> 12 & 0x3F] +\n\t    lookup[num >> 6 & 0x3F] +\n\t    lookup[num & 0x3F]\n\t}\n\n\tfunction encodeChunk (uint8, start, end) {\n\t  var tmp\n\t  var output = []\n\t  for (var i = start; i < end; i += 3) {\n\t    tmp =\n\t      ((uint8[i] << 16) & 0xFF0000) +\n\t      ((uint8[i + 1] << 8) & 0xFF00) +\n\t      (uint8[i + 2] & 0xFF)\n\t    output.push(tripletToBase64(tmp))\n\t  }\n\t  return output.join('')\n\t}\n\n\tfunction fromByteArray (uint8) {\n\t  var tmp\n\t  var len = uint8.length\n\t  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n\t  var parts = []\n\t  var maxChunkLength = 16383 // must be multiple of 3\n\n\t  // go through the array every three bytes, we'll deal with trailing stuff later\n\t  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n\t    parts.push(encodeChunk(\n\t      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n\t    ))\n\t  }\n\n\t  // pad the end with zeros, but make sure to not forget the extra bytes\n\t  if (extraBytes === 1) {\n\t    tmp = uint8[len - 1]\n\t    parts.push(\n\t      lookup[tmp >> 2] +\n\t      lookup[(tmp << 4) & 0x3F] +\n\t      '=='\n\t    )\n\t  } else if (extraBytes === 2) {\n\t    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n\t    parts.push(\n\t      lookup[tmp >> 10] +\n\t      lookup[(tmp >> 4) & 0x3F] +\n\t      lookup[(tmp << 2) & 0x3F] +\n\t      '='\n\t    )\n\t  }\n\n\t  return parts.join('')\n\t}\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports) {\n\n\texports.read = function (buffer, offset, isLE, mLen, nBytes) {\n\t  var e, m\n\t  var eLen = (nBytes * 8) - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var nBits = -7\n\t  var i = isLE ? (nBytes - 1) : 0\n\t  var d = isLE ? -1 : 1\n\t  var s = buffer[offset + i]\n\n\t  i += d\n\n\t  e = s & ((1 << (-nBits)) - 1)\n\t  s >>= (-nBits)\n\t  nBits += eLen\n\t  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n\t  m = e & ((1 << (-nBits)) - 1)\n\t  e >>= (-nBits)\n\t  nBits += mLen\n\t  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n\t  if (e === 0) {\n\t    e = 1 - eBias\n\t  } else if (e === eMax) {\n\t    return m ? NaN : ((s ? -1 : 1) * Infinity)\n\t  } else {\n\t    m = m + Math.pow(2, mLen)\n\t    e = e - eBias\n\t  }\n\t  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n\t}\n\n\texports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n\t  var e, m, c\n\t  var eLen = (nBytes * 8) - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n\t  var i = isLE ? 0 : (nBytes - 1)\n\t  var d = isLE ? 1 : -1\n\t  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n\t  value = Math.abs(value)\n\n\t  if (isNaN(value) || value === Infinity) {\n\t    m = isNaN(value) ? 1 : 0\n\t    e = eMax\n\t  } else {\n\t    e = Math.floor(Math.log(value) / Math.LN2)\n\t    if (value * (c = Math.pow(2, -e)) < 1) {\n\t      e--\n\t      c *= 2\n\t    }\n\t    if (e + eBias >= 1) {\n\t      value += rt / c\n\t    } else {\n\t      value += rt * Math.pow(2, 1 - eBias)\n\t    }\n\t    if (value * c >= 2) {\n\t      e++\n\t      c /= 2\n\t    }\n\n\t    if (e + eBias >= eMax) {\n\t      m = 0\n\t      e = eMax\n\t    } else if (e + eBias >= 1) {\n\t      m = ((value * c) - 1) * Math.pow(2, mLen)\n\t      e = e + eBias\n\t    } else {\n\t      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n\t      e = 0\n\t    }\n\t  }\n\n\t  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n\t  e = (e << mLen) | m\n\t  eLen += mLen\n\t  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n\t  buffer[offset + i - d] |= s * 128\n\t}\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports) {\n\n\tvar toString = {}.toString;\n\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar dispatcher_1 = __webpack_require__(24);\n\tvar timers_1 = __webpack_require__(12);\n\tvar logger_1 = __webpack_require__(8);\n\tvar Collections = __webpack_require__(9);\n\tvar runtime_1 = __webpack_require__(2);\n\tvar ConnectionManager = (function (_super) {\n\t    __extends(ConnectionManager, _super);\n\t    function ConnectionManager(key, options) {\n\t        var _this = this;\n\t        _super.call(this);\n\t        this.key = key;\n\t        this.options = options || {};\n\t        this.state = \"initialized\";\n\t        this.connection = null;\n\t        this.usingTLS = !!options.useTLS;\n\t        this.timeline = this.options.timeline;\n\t        this.connectionCallbacks = this.buildConnectionCallbacks();\n\t        this.errorCallbacks = this.buildErrorCallbacks();\n\t        this.handshakeCallbacks = this.buildHandshakeCallbacks(this.errorCallbacks);\n\t        var Network = runtime_1[\"default\"].getNetwork();\n\t        Network.bind(\"online\", function () {\n\t            _this.timeline.info({ netinfo: \"online\" });\n\t            if (_this.state === \"connecting\" || _this.state === \"unavailable\") {\n\t                _this.retryIn(0);\n\t            }\n\t        });\n\t        Network.bind(\"offline\", function () {\n\t            _this.timeline.info({ netinfo: \"offline\" });\n\t            if (_this.connection) {\n\t                _this.sendActivityCheck();\n\t            }\n\t        });\n\t        this.updateStrategy();\n\t    }\n\t    ConnectionManager.prototype.connect = function () {\n\t        if (this.connection || this.runner) {\n\t            return;\n\t        }\n\t        if (!this.strategy.isSupported()) {\n\t            this.updateState(\"failed\");\n\t            return;\n\t        }\n\t        this.updateState(\"connecting\");\n\t        this.startConnecting();\n\t        this.setUnavailableTimer();\n\t    };\n\t    ;\n\t    ConnectionManager.prototype.send = function (data) {\n\t        if (this.connection) {\n\t            return this.connection.send(data);\n\t        }\n\t        else {\n\t            return false;\n\t        }\n\t    };\n\t    ;\n\t    ConnectionManager.prototype.send_event = function (name, data, channel) {\n\t        if (this.connection) {\n\t            return this.connection.send_event(name, data, channel);\n\t        }\n\t        else {\n\t            return false;\n\t        }\n\t    };\n\t    ;\n\t    ConnectionManager.prototype.disconnect = function () {\n\t        this.disconnectInternally();\n\t        this.updateState(\"disconnected\");\n\t    };\n\t    ;\n\t    ConnectionManager.prototype.isUsingTLS = function () {\n\t        return this.usingTLS;\n\t    };\n\t    ;\n\t    ConnectionManager.prototype.startConnecting = function () {\n\t        var _this = this;\n\t        var callback = function (error, handshake) {\n\t            if (error) {\n\t                _this.runner = _this.strategy.connect(0, callback);\n\t            }\n\t            else {\n\t                if (handshake.action === \"error\") {\n\t                    _this.emit(\"error\", { type: \"HandshakeError\", error: handshake.error });\n\t                    _this.timeline.error({ handshakeError: handshake.error });\n\t                }\n\t                else {\n\t                    _this.abortConnecting();\n\t                    _this.handshakeCallbacks[handshake.action](handshake);\n\t                }\n\t            }\n\t        };\n\t        this.runner = this.strategy.connect(0, callback);\n\t    };\n\t    ;\n\t    ConnectionManager.prototype.abortConnecting = function () {\n\t        if (this.runner) {\n\t            this.runner.abort();\n\t            this.runner = null;\n\t        }\n\t    };\n\t    ;\n\t    ConnectionManager.prototype.disconnectInternally = function () {\n\t        this.abortConnecting();\n\t        this.clearRetryTimer();\n\t        this.clearUnavailableTimer();\n\t        if (this.connection) {\n\t            var connection = this.abandonConnection();\n\t            connection.close();\n\t        }\n\t    };\n\t    ;\n\t    ConnectionManager.prototype.updateStrategy = function () {\n\t        this.strategy = this.options.getStrategy({\n\t            key: this.key,\n\t            timeline: this.timeline,\n\t            useTLS: this.usingTLS\n\t        });\n\t    };\n\t    ;\n\t    ConnectionManager.prototype.retryIn = function (delay) {\n\t        var _this = this;\n\t        this.timeline.info({ action: \"retry\", delay: delay });\n\t        if (delay > 0) {\n\t            this.emit(\"connecting_in\", Math.round(delay / 1000));\n\t        }\n\t        this.retryTimer = new timers_1.OneOffTimer(delay || 0, function () {\n\t            _this.disconnectInternally();\n\t            _this.connect();\n\t        });\n\t    };\n\t    ;\n\t    ConnectionManager.prototype.clearRetryTimer = function () {\n\t        if (this.retryTimer) {\n\t            this.retryTimer.ensureAborted();\n\t            this.retryTimer = null;\n\t        }\n\t    };\n\t    ;\n\t    ConnectionManager.prototype.setUnavailableTimer = function () {\n\t        var _this = this;\n\t        this.unavailableTimer = new timers_1.OneOffTimer(this.options.unavailableTimeout, function () {\n\t            _this.updateState(\"unavailable\");\n\t        });\n\t    };\n\t    ;\n\t    ConnectionManager.prototype.clearUnavailableTimer = function () {\n\t        if (this.unavailableTimer) {\n\t            this.unavailableTimer.ensureAborted();\n\t        }\n\t    };\n\t    ;\n\t    ConnectionManager.prototype.sendActivityCheck = function () {\n\t        var _this = this;\n\t        this.stopActivityCheck();\n\t        this.connection.ping();\n\t        this.activityTimer = new timers_1.OneOffTimer(this.options.pongTimeout, function () {\n\t            _this.timeline.error({ pong_timed_out: _this.options.pongTimeout });\n\t            _this.retryIn(0);\n\t        });\n\t    };\n\t    ;\n\t    ConnectionManager.prototype.resetActivityCheck = function () {\n\t        var _this = this;\n\t        this.stopActivityCheck();\n\t        if (this.connection && !this.connection.handlesActivityChecks()) {\n\t            this.activityTimer = new timers_1.OneOffTimer(this.activityTimeout, function () {\n\t                _this.sendActivityCheck();\n\t            });\n\t        }\n\t    };\n\t    ;\n\t    ConnectionManager.prototype.stopActivityCheck = function () {\n\t        if (this.activityTimer) {\n\t            this.activityTimer.ensureAborted();\n\t        }\n\t    };\n\t    ;\n\t    ConnectionManager.prototype.buildConnectionCallbacks = function () {\n\t        var _this = this;\n\t        return {\n\t            message: function (message) {\n\t                _this.resetActivityCheck();\n\t                _this.emit('message', message);\n\t            },\n\t            ping: function () {\n\t                _this.send_event('pusher:pong', {});\n\t            },\n\t            activity: function () {\n\t                _this.resetActivityCheck();\n\t            },\n\t            error: function (error) {\n\t                _this.emit(\"error\", { type: \"WebSocketError\", error: error });\n\t            },\n\t            closed: function () {\n\t                _this.abandonConnection();\n\t                if (_this.shouldRetry()) {\n\t                    _this.retryIn(1000);\n\t                }\n\t            }\n\t        };\n\t    };\n\t    ;\n\t    ConnectionManager.prototype.buildHandshakeCallbacks = function (errorCallbacks) {\n\t        var _this = this;\n\t        return Collections.extend({}, errorCallbacks, {\n\t            connected: function (handshake) {\n\t                _this.activityTimeout = Math.min(_this.options.activityTimeout, handshake.activityTimeout, handshake.connection.activityTimeout || Infinity);\n\t                _this.clearUnavailableTimer();\n\t                _this.setConnection(handshake.connection);\n\t                _this.socket_id = _this.connection.id;\n\t                _this.updateState(\"connected\", { socket_id: _this.socket_id });\n\t            }\n\t        });\n\t    };\n\t    ;\n\t    ConnectionManager.prototype.buildErrorCallbacks = function () {\n\t        var _this = this;\n\t        var withErrorEmitted = function (callback) {\n\t            return function (result) {\n\t                if (result.error) {\n\t                    _this.emit(\"error\", { type: \"WebSocketError\", error: result.error });\n\t                }\n\t                callback(result);\n\t            };\n\t        };\n\t        return {\n\t            tls_only: withErrorEmitted(function () {\n\t                _this.usingTLS = true;\n\t                _this.updateStrategy();\n\t                _this.retryIn(0);\n\t            }),\n\t            refused: withErrorEmitted(function () {\n\t                _this.disconnect();\n\t            }),\n\t            backoff: withErrorEmitted(function () {\n\t                _this.retryIn(1000);\n\t            }),\n\t            retry: withErrorEmitted(function () {\n\t                _this.retryIn(0);\n\t            })\n\t        };\n\t    };\n\t    ;\n\t    ConnectionManager.prototype.setConnection = function (connection) {\n\t        this.connection = connection;\n\t        for (var event in this.connectionCallbacks) {\n\t            this.connection.bind(event, this.connectionCallbacks[event]);\n\t        }\n\t        this.resetActivityCheck();\n\t    };\n\t    ;\n\t    ConnectionManager.prototype.abandonConnection = function () {\n\t        if (!this.connection) {\n\t            return;\n\t        }\n\t        this.stopActivityCheck();\n\t        for (var event in this.connectionCallbacks) {\n\t            this.connection.unbind(event, this.connectionCallbacks[event]);\n\t        }\n\t        var connection = this.connection;\n\t        this.connection = null;\n\t        return connection;\n\t    };\n\t    ConnectionManager.prototype.updateState = function (newState, data) {\n\t        var previousState = this.state;\n\t        this.state = newState;\n\t        if (previousState !== newState) {\n\t            var newStateDescription = newState;\n\t            if (newStateDescription === \"connected\") {\n\t                newStateDescription += \" with new socket ID \" + data.socket_id;\n\t            }\n\t            logger_1[\"default\"].debug('State changed', previousState + ' -> ' + newStateDescription);\n\t            this.timeline.info({ state: newState, params: data });\n\t            this.emit('state_change', { previous: previousState, current: newState });\n\t            this.emit(newState, data);\n\t        }\n\t    };\n\t    ConnectionManager.prototype.shouldRetry = function () {\n\t        return this.state === \"connecting\" || this.state === \"connected\";\n\t    };\n\t    return ConnectionManager;\n\t}(dispatcher_1[\"default\"]));\n\texports.__esModule = true;\n\texports[\"default\"] = ConnectionManager;\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Collections = __webpack_require__(9);\n\tvar factory_1 = __webpack_require__(43);\n\tvar Errors = __webpack_require__(31);\n\tvar Channels = (function () {\n\t    function Channels() {\n\t        this.channels = {};\n\t    }\n\t    Channels.prototype.add = function (name, pusher) {\n\t        if (!this.channels[name]) {\n\t            this.channels[name] = createChannel(name, pusher);\n\t        }\n\t        return this.channels[name];\n\t    };\n\t    Channels.prototype.all = function () {\n\t        return Collections.values(this.channels);\n\t    };\n\t    Channels.prototype.find = function (name) {\n\t        return this.channels[name];\n\t    };\n\t    Channels.prototype.remove = function (name) {\n\t        var channel = this.channels[name];\n\t        delete this.channels[name];\n\t        return channel;\n\t    };\n\t    Channels.prototype.disconnect = function () {\n\t        Collections.objectApply(this.channels, function (channel) {\n\t            channel.disconnect();\n\t        });\n\t    };\n\t    return Channels;\n\t}());\n\texports.__esModule = true;\n\texports[\"default\"] = Channels;\n\tfunction createChannel(name, pusher) {\n\t    if (name.indexOf('private-encrypted-') === 0) {\n\t        if (navigator.product == \"ReactNative\") {\n\t            var errorMsg = \"Encrypted channels are not yet supported when using React Native builds.\";\n\t            throw new Errors.UnsupportedFeature(errorMsg);\n\t        }\n\t        return factory_1[\"default\"].createEncryptedChannel(name, pusher);\n\t    }\n\t    else if (name.indexOf('private-') === 0) {\n\t        return factory_1[\"default\"].createPrivateChannel(name, pusher);\n\t    }\n\t    else if (name.indexOf('presence-') === 0) {\n\t        return factory_1[\"default\"].createPresenceChannel(name, pusher);\n\t    }\n\t    else {\n\t        return factory_1[\"default\"].createChannel(name, pusher);\n\t    }\n\t}\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar factory_1 = __webpack_require__(43);\n\tvar util_1 = __webpack_require__(11);\n\tvar Errors = __webpack_require__(31);\n\tvar Collections = __webpack_require__(9);\n\tvar TransportStrategy = (function () {\n\t    function TransportStrategy(name, priority, transport, options) {\n\t        this.name = name;\n\t        this.priority = priority;\n\t        this.transport = transport;\n\t        this.options = options || {};\n\t    }\n\t    TransportStrategy.prototype.isSupported = function () {\n\t        return this.transport.isSupported({\n\t            useTLS: this.options.useTLS\n\t        });\n\t    };\n\t    TransportStrategy.prototype.connect = function (minPriority, callback) {\n\t        var _this = this;\n\t        if (!this.isSupported()) {\n\t            return failAttempt(new Errors.UnsupportedStrategy(), callback);\n\t        }\n\t        else if (this.priority < minPriority) {\n\t            return failAttempt(new Errors.TransportPriorityTooLow(), callback);\n\t        }\n\t        var connected = false;\n\t        var transport = this.transport.createConnection(this.name, this.priority, this.options.key, this.options);\n\t        var handshake = null;\n\t        var onInitialized = function () {\n\t            transport.unbind(\"initialized\", onInitialized);\n\t            transport.connect();\n\t        };\n\t        var onOpen = function () {\n\t            handshake = factory_1[\"default\"].createHandshake(transport, function (result) {\n\t                connected = true;\n\t                unbindListeners();\n\t                callback(null, result);\n\t            });\n\t        };\n\t        var onError = function (error) {\n\t            unbindListeners();\n\t            callback(error);\n\t        };\n\t        var onClosed = function () {\n\t            unbindListeners();\n\t            var serializedTransport;\n\t            serializedTransport = Collections.safeJSONStringify(transport);\n\t            callback(new Errors.TransportClosed(serializedTransport));\n\t        };\n\t        var unbindListeners = function () {\n\t            transport.unbind(\"initialized\", onInitialized);\n\t            transport.unbind(\"open\", onOpen);\n\t            transport.unbind(\"error\", onError);\n\t            transport.unbind(\"closed\", onClosed);\n\t        };\n\t        transport.bind(\"initialized\", onInitialized);\n\t        transport.bind(\"open\", onOpen);\n\t        transport.bind(\"error\", onError);\n\t        transport.bind(\"closed\", onClosed);\n\t        transport.initialize();\n\t        return {\n\t            abort: function () {\n\t                if (connected) {\n\t                    return;\n\t                }\n\t                unbindListeners();\n\t                if (handshake) {\n\t                    handshake.close();\n\t                }\n\t                else {\n\t                    transport.close();\n\t                }\n\t            },\n\t            forceMinPriority: function (p) {\n\t                if (connected) {\n\t                    return;\n\t                }\n\t                if (_this.priority < p) {\n\t                    if (handshake) {\n\t                        handshake.close();\n\t                    }\n\t                    else {\n\t                        transport.close();\n\t                    }\n\t                }\n\t            }\n\t        };\n\t    };\n\t    return TransportStrategy;\n\t}());\n\texports.__esModule = true;\n\texports[\"default\"] = TransportStrategy;\n\tfunction failAttempt(error, callback) {\n\t    util_1[\"default\"].defer(function () {\n\t        callback(error);\n\t    });\n\t    return {\n\t        abort: function () { },\n\t        forceMinPriority: function () { }\n\t    };\n\t}\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Collections = __webpack_require__(9);\n\tvar util_1 = __webpack_require__(11);\n\tvar timers_1 = __webpack_require__(12);\n\tvar SequentialStrategy = (function () {\n\t    function SequentialStrategy(strategies, options) {\n\t        this.strategies = strategies;\n\t        this.loop = Boolean(options.loop);\n\t        this.failFast = Boolean(options.failFast);\n\t        this.timeout = options.timeout;\n\t        this.timeoutLimit = options.timeoutLimit;\n\t    }\n\t    SequentialStrategy.prototype.isSupported = function () {\n\t        return Collections.any(this.strategies, util_1[\"default\"].method(\"isSupported\"));\n\t    };\n\t    SequentialStrategy.prototype.connect = function (minPriority, callback) {\n\t        var _this = this;\n\t        var strategies = this.strategies;\n\t        var current = 0;\n\t        var timeout = this.timeout;\n\t        var runner = null;\n\t        var tryNextStrategy = function (error, handshake) {\n\t            if (handshake) {\n\t                callback(null, handshake);\n\t            }\n\t            else {\n\t                current = current + 1;\n\t                if (_this.loop) {\n\t                    current = current % strategies.length;\n\t                }\n\t                if (current < strategies.length) {\n\t                    if (timeout) {\n\t                        timeout = timeout * 2;\n\t                        if (_this.timeoutLimit) {\n\t                            timeout = Math.min(timeout, _this.timeoutLimit);\n\t                        }\n\t                    }\n\t                    runner = _this.tryStrategy(strategies[current], minPriority, { timeout: timeout, failFast: _this.failFast }, tryNextStrategy);\n\t                }\n\t                else {\n\t                    callback(true);\n\t                }\n\t            }\n\t        };\n\t        runner = this.tryStrategy(strategies[current], minPriority, { timeout: timeout, failFast: this.failFast }, tryNextStrategy);\n\t        return {\n\t            abort: function () {\n\t                runner.abort();\n\t            },\n\t            forceMinPriority: function (p) {\n\t                minPriority = p;\n\t                if (runner) {\n\t                    runner.forceMinPriority(p);\n\t                }\n\t            }\n\t        };\n\t    };\n\t    SequentialStrategy.prototype.tryStrategy = function (strategy, minPriority, options, callback) {\n\t        var timer = null;\n\t        var runner = null;\n\t        if (options.timeout > 0) {\n\t            timer = new timers_1.OneOffTimer(options.timeout, function () {\n\t                runner.abort();\n\t                callback(true);\n\t            });\n\t        }\n\t        runner = strategy.connect(minPriority, function (error, handshake) {\n\t            if (error && timer && timer.isRunning() && !options.failFast) {\n\t                return;\n\t            }\n\t            if (timer) {\n\t                timer.ensureAborted();\n\t            }\n\t            callback(error, handshake);\n\t        });\n\t        return {\n\t            abort: function () {\n\t                if (timer) {\n\t                    timer.ensureAborted();\n\t                }\n\t                runner.abort();\n\t            },\n\t            forceMinPriority: function (p) {\n\t                runner.forceMinPriority(p);\n\t            }\n\t        };\n\t    };\n\t    return SequentialStrategy;\n\t}());\n\texports.__esModule = true;\n\texports[\"default\"] = SequentialStrategy;\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Collections = __webpack_require__(9);\n\tvar util_1 = __webpack_require__(11);\n\tvar BestConnectedEverStrategy = (function () {\n\t    function BestConnectedEverStrategy(strategies) {\n\t        this.strategies = strategies;\n\t    }\n\t    BestConnectedEverStrategy.prototype.isSupported = function () {\n\t        return Collections.any(this.strategies, util_1[\"default\"].method(\"isSupported\"));\n\t    };\n\t    BestConnectedEverStrategy.prototype.connect = function (minPriority, callback) {\n\t        return connect(this.strategies, minPriority, function (i, runners) {\n\t            return function (error, handshake) {\n\t                runners[i].error = error;\n\t                if (error) {\n\t                    if (allRunnersFailed(runners)) {\n\t                        callback(true);\n\t                    }\n\t                    return;\n\t                }\n\t                Collections.apply(runners, function (runner) {\n\t                    runner.forceMinPriority(handshake.transport.priority);\n\t                });\n\t                callback(null, handshake);\n\t            };\n\t        });\n\t    };\n\t    return BestConnectedEverStrategy;\n\t}());\n\texports.__esModule = true;\n\texports[\"default\"] = BestConnectedEverStrategy;\n\tfunction connect(strategies, minPriority, callbackBuilder) {\n\t    var runners = Collections.map(strategies, function (strategy, i, _, rs) {\n\t        return strategy.connect(minPriority, callbackBuilder(i, rs));\n\t    });\n\t    return {\n\t        abort: function () {\n\t            Collections.apply(runners, abortRunner);\n\t        },\n\t        forceMinPriority: function (p) {\n\t            Collections.apply(runners, function (runner) {\n\t                runner.forceMinPriority(p);\n\t            });\n\t        }\n\t    };\n\t}\n\tfunction allRunnersFailed(runners) {\n\t    return Collections.all(runners, function (runner) {\n\t        return Boolean(runner.error);\n\t    });\n\t}\n\tfunction abortRunner(runner) {\n\t    if (!runner.error && !runner.aborted) {\n\t        runner.abort();\n\t        runner.aborted = true;\n\t    }\n\t}\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar util_1 = __webpack_require__(11);\n\tvar runtime_1 = __webpack_require__(2);\n\tvar sequential_strategy_1 = __webpack_require__(65);\n\tvar Collections = __webpack_require__(9);\n\tvar CachedStrategy = (function () {\n\t    function CachedStrategy(strategy, transports, options) {\n\t        this.strategy = strategy;\n\t        this.transports = transports;\n\t        this.ttl = options.ttl || 1800 * 1000;\n\t        this.usingTLS = options.useTLS;\n\t        this.timeline = options.timeline;\n\t    }\n\t    CachedStrategy.prototype.isSupported = function () {\n\t        return this.strategy.isSupported();\n\t    };\n\t    CachedStrategy.prototype.connect = function (minPriority, callback) {\n\t        var usingTLS = this.usingTLS;\n\t        var info = fetchTransportCache(usingTLS);\n\t        var strategies = [this.strategy];\n\t        if (info && info.timestamp + this.ttl >= util_1[\"default\"].now()) {\n\t            var transport = this.transports[info.transport];\n\t            if (transport) {\n\t                this.timeline.info({\n\t                    cached: true,\n\t                    transport: info.transport,\n\t                    latency: info.latency\n\t                });\n\t                strategies.push(new sequential_strategy_1[\"default\"]([transport], {\n\t                    timeout: info.latency * 2 + 1000,\n\t                    failFast: true\n\t                }));\n\t            }\n\t        }\n\t        var startTimestamp = util_1[\"default\"].now();\n\t        var runner = strategies.pop().connect(minPriority, function cb(error, handshake) {\n\t            if (error) {\n\t                flushTransportCache(usingTLS);\n\t                if (strategies.length > 0) {\n\t                    startTimestamp = util_1[\"default\"].now();\n\t                    runner = strategies.pop().connect(minPriority, cb);\n\t                }\n\t                else {\n\t                    callback(error);\n\t                }\n\t            }\n\t            else {\n\t                storeTransportCache(usingTLS, handshake.transport.name, util_1[\"default\"].now() - startTimestamp);\n\t                callback(null, handshake);\n\t            }\n\t        });\n\t        return {\n\t            abort: function () {\n\t                runner.abort();\n\t            },\n\t            forceMinPriority: function (p) {\n\t                minPriority = p;\n\t                if (runner) {\n\t                    runner.forceMinPriority(p);\n\t                }\n\t            }\n\t        };\n\t    };\n\t    return CachedStrategy;\n\t}());\n\texports.__esModule = true;\n\texports[\"default\"] = CachedStrategy;\n\tfunction getTransportCacheKey(usingTLS) {\n\t    return \"pusherTransport\" + (usingTLS ? \"TLS\" : \"NonTLS\");\n\t}\n\tfunction fetchTransportCache(usingTLS) {\n\t    var storage = runtime_1[\"default\"].getLocalStorage();\n\t    if (storage) {\n\t        try {\n\t            var serializedCache = storage[getTransportCacheKey(usingTLS)];\n\t            if (serializedCache) {\n\t                return JSON.parse(serializedCache);\n\t            }\n\t        }\n\t        catch (e) {\n\t            flushTransportCache(usingTLS);\n\t        }\n\t    }\n\t    return null;\n\t}\n\tfunction storeTransportCache(usingTLS, transport, latency) {\n\t    var storage = runtime_1[\"default\"].getLocalStorage();\n\t    if (storage) {\n\t        try {\n\t            storage[getTransportCacheKey(usingTLS)] = Collections.safeJSONStringify({\n\t                timestamp: util_1[\"default\"].now(),\n\t                transport: transport,\n\t                latency: latency\n\t            });\n\t        }\n\t        catch (e) {\n\t        }\n\t    }\n\t}\n\tfunction flushTransportCache(usingTLS) {\n\t    var storage = runtime_1[\"default\"].getLocalStorage();\n\t    if (storage) {\n\t        try {\n\t            delete storage[getTransportCacheKey(usingTLS)];\n\t        }\n\t        catch (e) {\n\t        }\n\t    }\n\t}\n\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar timers_1 = __webpack_require__(12);\n\tvar DelayedStrategy = (function () {\n\t    function DelayedStrategy(strategy, _a) {\n\t        var number = _a.delay;\n\t        this.strategy = strategy;\n\t        this.options = { delay: number };\n\t    }\n\t    DelayedStrategy.prototype.isSupported = function () {\n\t        return this.strategy.isSupported();\n\t    };\n\t    DelayedStrategy.prototype.connect = function (minPriority, callback) {\n\t        var strategy = this.strategy;\n\t        var runner;\n\t        var timer = new timers_1.OneOffTimer(this.options.delay, function () {\n\t            runner = strategy.connect(minPriority, callback);\n\t        });\n\t        return {\n\t            abort: function () {\n\t                timer.ensureAborted();\n\t                if (runner) {\n\t                    runner.abort();\n\t                }\n\t            },\n\t            forceMinPriority: function (p) {\n\t                minPriority = p;\n\t                if (runner) {\n\t                    runner.forceMinPriority(p);\n\t                }\n\t            }\n\t        };\n\t    };\n\t    return DelayedStrategy;\n\t}());\n\texports.__esModule = true;\n\texports[\"default\"] = DelayedStrategy;\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tvar IfStrategy = (function () {\n\t    function IfStrategy(test, trueBranch, falseBranch) {\n\t        this.test = test;\n\t        this.trueBranch = trueBranch;\n\t        this.falseBranch = falseBranch;\n\t    }\n\t    IfStrategy.prototype.isSupported = function () {\n\t        var branch = this.test() ? this.trueBranch : this.falseBranch;\n\t        return branch.isSupported();\n\t    };\n\t    IfStrategy.prototype.connect = function (minPriority, callback) {\n\t        var branch = this.test() ? this.trueBranch : this.falseBranch;\n\t        return branch.connect(minPriority, callback);\n\t    };\n\t    return IfStrategy;\n\t}());\n\texports.__esModule = true;\n\texports[\"default\"] = IfStrategy;\n\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tvar FirstConnectedStrategy = (function () {\n\t    function FirstConnectedStrategy(strategy) {\n\t        this.strategy = strategy;\n\t    }\n\t    FirstConnectedStrategy.prototype.isSupported = function () {\n\t        return this.strategy.isSupported();\n\t    };\n\t    FirstConnectedStrategy.prototype.connect = function (minPriority, callback) {\n\t        var runner = this.strategy.connect(minPriority, function (error, handshake) {\n\t            if (handshake) {\n\t                runner.abort();\n\t            }\n\t            callback(error, handshake);\n\t        });\n\t        return runner;\n\t    };\n\t    return FirstConnectedStrategy;\n\t}());\n\texports.__esModule = true;\n\texports[\"default\"] = FirstConnectedStrategy;\n\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar defaults_1 = __webpack_require__(5);\n\texports.getGlobalConfig = function () {\n\t    return {\n\t        wsHost: defaults_1[\"default\"].host,\n\t        wsPort: defaults_1[\"default\"].ws_port,\n\t        wssPort: defaults_1[\"default\"].wss_port,\n\t        wsPath: defaults_1[\"default\"].ws_path,\n\t        httpHost: defaults_1[\"default\"].sockjs_host,\n\t        httpPort: defaults_1[\"default\"].sockjs_http_port,\n\t        httpsPort: defaults_1[\"default\"].sockjs_https_port,\n\t        httpPath: defaults_1[\"default\"].sockjs_path,\n\t        statsHost: defaults_1[\"default\"].stats_host,\n\t        authEndpoint: defaults_1[\"default\"].channel_auth_endpoint,\n\t        authTransport: defaults_1[\"default\"].channel_auth_transport,\n\t        activity_timeout: defaults_1[\"default\"].activity_timeout,\n\t        pong_timeout: defaults_1[\"default\"].pong_timeout,\n\t        unavailable_timeout: defaults_1[\"default\"].unavailable_timeout\n\t    };\n\t};\n\texports.getClusterConfig = function (clusterName) {\n\t    return {\n\t        wsHost: \"ws-\" + clusterName + \".pusher.com\",\n\t        httpHost: \"sockjs-\" + clusterName + \".pusher.com\"\n\t    };\n\t};\n\n\n/***/ })\n/******/ ])\n});\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/pusher-js/dist/web/pusher.js\n");

/***/ }),

/***/ "./node_modules/vue-loader/lib/component-normalizer.js":
/***/ (function(module, exports) {

eval("/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvY29tcG9uZW50LW5vcm1hbGl6ZXIuanM/NTU0ZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvY29tcG9uZW50LW5vcm1hbGl6ZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWxzIF9fVlVFX1NTUl9DT05URVhUX18gKi9cblxuLy8gSU1QT1JUQU5UOiBEbyBOT1QgdXNlIEVTMjAxNSBmZWF0dXJlcyBpbiB0aGlzIGZpbGUuXG4vLyBUaGlzIG1vZHVsZSBpcyBhIHJ1bnRpbWUgdXRpbGl0eSBmb3IgY2xlYW5lciBjb21wb25lbnQgbW9kdWxlIG91dHB1dCBhbmQgd2lsbFxuLy8gYmUgaW5jbHVkZWQgaW4gdGhlIGZpbmFsIHdlYnBhY2sgdXNlciBidW5kbGUuXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbm9ybWFsaXplQ29tcG9uZW50IChcbiAgcmF3U2NyaXB0RXhwb3J0cyxcbiAgY29tcGlsZWRUZW1wbGF0ZSxcbiAgZnVuY3Rpb25hbFRlbXBsYXRlLFxuICBpbmplY3RTdHlsZXMsXG4gIHNjb3BlSWQsXG4gIG1vZHVsZUlkZW50aWZpZXIgLyogc2VydmVyIG9ubHkgKi9cbikge1xuICB2YXIgZXNNb2R1bGVcbiAgdmFyIHNjcmlwdEV4cG9ydHMgPSByYXdTY3JpcHRFeHBvcnRzID0gcmF3U2NyaXB0RXhwb3J0cyB8fCB7fVxuXG4gIC8vIEVTNiBtb2R1bGVzIGludGVyb3BcbiAgdmFyIHR5cGUgPSB0eXBlb2YgcmF3U2NyaXB0RXhwb3J0cy5kZWZhdWx0XG4gIGlmICh0eXBlID09PSAnb2JqZWN0JyB8fCB0eXBlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgZXNNb2R1bGUgPSByYXdTY3JpcHRFeHBvcnRzXG4gICAgc2NyaXB0RXhwb3J0cyA9IHJhd1NjcmlwdEV4cG9ydHMuZGVmYXVsdFxuICB9XG5cbiAgLy8gVnVlLmV4dGVuZCBjb25zdHJ1Y3RvciBleHBvcnQgaW50ZXJvcFxuICB2YXIgb3B0aW9ucyA9IHR5cGVvZiBzY3JpcHRFeHBvcnRzID09PSAnZnVuY3Rpb24nXG4gICAgPyBzY3JpcHRFeHBvcnRzLm9wdGlvbnNcbiAgICA6IHNjcmlwdEV4cG9ydHNcblxuICAvLyByZW5kZXIgZnVuY3Rpb25zXG4gIGlmIChjb21waWxlZFRlbXBsYXRlKSB7XG4gICAgb3B0aW9ucy5yZW5kZXIgPSBjb21waWxlZFRlbXBsYXRlLnJlbmRlclxuICAgIG9wdGlvbnMuc3RhdGljUmVuZGVyRm5zID0gY29tcGlsZWRUZW1wbGF0ZS5zdGF0aWNSZW5kZXJGbnNcbiAgICBvcHRpb25zLl9jb21waWxlZCA9IHRydWVcbiAgfVxuXG4gIC8vIGZ1bmN0aW9uYWwgdGVtcGxhdGVcbiAgaWYgKGZ1bmN0aW9uYWxUZW1wbGF0ZSkge1xuICAgIG9wdGlvbnMuZnVuY3Rpb25hbCA9IHRydWVcbiAgfVxuXG4gIC8vIHNjb3BlZElkXG4gIGlmIChzY29wZUlkKSB7XG4gICAgb3B0aW9ucy5fc2NvcGVJZCA9IHNjb3BlSWRcbiAgfVxuXG4gIHZhciBob29rXG4gIGlmIChtb2R1bGVJZGVudGlmaWVyKSB7IC8vIHNlcnZlciBidWlsZFxuICAgIGhvb2sgPSBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgLy8gMi4zIGluamVjdGlvblxuICAgICAgY29udGV4dCA9XG4gICAgICAgIGNvbnRleHQgfHwgLy8gY2FjaGVkIGNhbGxcbiAgICAgICAgKHRoaXMuJHZub2RlICYmIHRoaXMuJHZub2RlLnNzckNvbnRleHQpIHx8IC8vIHN0YXRlZnVsXG4gICAgICAgICh0aGlzLnBhcmVudCAmJiB0aGlzLnBhcmVudC4kdm5vZGUgJiYgdGhpcy5wYXJlbnQuJHZub2RlLnNzckNvbnRleHQpIC8vIGZ1bmN0aW9uYWxcbiAgICAgIC8vIDIuMiB3aXRoIHJ1bkluTmV3Q29udGV4dDogdHJ1ZVxuICAgICAgaWYgKCFjb250ZXh0ICYmIHR5cGVvZiBfX1ZVRV9TU1JfQ09OVEVYVF9fICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBjb250ZXh0ID0gX19WVUVfU1NSX0NPTlRFWFRfX1xuICAgICAgfVxuICAgICAgLy8gaW5qZWN0IGNvbXBvbmVudCBzdHlsZXNcbiAgICAgIGlmIChpbmplY3RTdHlsZXMpIHtcbiAgICAgICAgaW5qZWN0U3R5bGVzLmNhbGwodGhpcywgY29udGV4dClcbiAgICAgIH1cbiAgICAgIC8vIHJlZ2lzdGVyIGNvbXBvbmVudCBtb2R1bGUgaWRlbnRpZmllciBmb3IgYXN5bmMgY2h1bmsgaW5mZXJyZW5jZVxuICAgICAgaWYgKGNvbnRleHQgJiYgY29udGV4dC5fcmVnaXN0ZXJlZENvbXBvbmVudHMpIHtcbiAgICAgICAgY29udGV4dC5fcmVnaXN0ZXJlZENvbXBvbmVudHMuYWRkKG1vZHVsZUlkZW50aWZpZXIpXG4gICAgICB9XG4gICAgfVxuICAgIC8vIHVzZWQgYnkgc3NyIGluIGNhc2UgY29tcG9uZW50IGlzIGNhY2hlZCBhbmQgYmVmb3JlQ3JlYXRlXG4gICAgLy8gbmV2ZXIgZ2V0cyBjYWxsZWRcbiAgICBvcHRpb25zLl9zc3JSZWdpc3RlciA9IGhvb2tcbiAgfSBlbHNlIGlmIChpbmplY3RTdHlsZXMpIHtcbiAgICBob29rID0gaW5qZWN0U3R5bGVzXG4gIH1cblxuICBpZiAoaG9vaykge1xuICAgIHZhciBmdW5jdGlvbmFsID0gb3B0aW9ucy5mdW5jdGlvbmFsXG4gICAgdmFyIGV4aXN0aW5nID0gZnVuY3Rpb25hbFxuICAgICAgPyBvcHRpb25zLnJlbmRlclxuICAgICAgOiBvcHRpb25zLmJlZm9yZUNyZWF0ZVxuXG4gICAgaWYgKCFmdW5jdGlvbmFsKSB7XG4gICAgICAvLyBpbmplY3QgY29tcG9uZW50IHJlZ2lzdHJhdGlvbiBhcyBiZWZvcmVDcmVhdGUgaG9va1xuICAgICAgb3B0aW9ucy5iZWZvcmVDcmVhdGUgPSBleGlzdGluZ1xuICAgICAgICA/IFtdLmNvbmNhdChleGlzdGluZywgaG9vaylcbiAgICAgICAgOiBbaG9va11cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gZm9yIHRlbXBsYXRlLW9ubHkgaG90LXJlbG9hZCBiZWNhdXNlIGluIHRoYXQgY2FzZSB0aGUgcmVuZGVyIGZuIGRvZXNuJ3RcbiAgICAgIC8vIGdvIHRocm91Z2ggdGhlIG5vcm1hbGl6ZXJcbiAgICAgIG9wdGlvbnMuX2luamVjdFN0eWxlcyA9IGhvb2tcbiAgICAgIC8vIHJlZ2lzdGVyIGZvciBmdW5jdGlvYWwgY29tcG9uZW50IGluIHZ1ZSBmaWxlXG4gICAgICBvcHRpb25zLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcldpdGhTdHlsZUluamVjdGlvbiAoaCwgY29udGV4dCkge1xuICAgICAgICBob29rLmNhbGwoY29udGV4dClcbiAgICAgICAgcmV0dXJuIGV4aXN0aW5nKGgsIGNvbnRleHQpXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBlc01vZHVsZTogZXNNb2R1bGUsXG4gICAgZXhwb3J0czogc2NyaXB0RXhwb3J0cyxcbiAgICBvcHRpb25zOiBvcHRpb25zXG4gIH1cbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2NvbXBvbmVudC1ub3JtYWxpemVyLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9jb21wb25lbnQtbm9ybWFsaXplci5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/vue-loader/lib/component-normalizer.js\n");

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-2e2ca97c\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/assets/js/components/Client.vue":
/***/ (function(module, exports, __webpack_require__) {

eval("var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"p\", [\n      _c(\"strong\", [_vm._v(\"Cliente: \")]),\n      _vm._v(\" \" + _vm._s(_vm.name))\n    ]),\n    _vm._v(\" \"),\n    _c(\n      \"p\",\n      {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.hasPhoneOne,\n            expression: \"hasPhoneOne\"\n          }\n        ]\n      },\n      [_c(\"strong\", [_vm._v(\"Teléfono:\")]), _vm._v(\" \" + _vm._s(_vm.phoneOne))]\n    ),\n    _vm._v(\" \"),\n    _c(\n      \"p\",\n      {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.hasPhoneTwo,\n            expression: \"hasPhoneTwo\"\n          }\n        ]\n      },\n      [_c(\"strong\", [_vm._v(\"Teléfono:\")]), _vm._v(\" \" + _vm._s(_vm.phoneTwo))]\n    ),\n    _vm._v(\" \"),\n    _c(\n      \"p\",\n      {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.hasBusiness,\n            expression: \"hasBusiness\"\n          }\n        ]\n      },\n      [_c(\"strong\", [_vm._v(\"Empresa:\")]), _vm._v(\" \" + _vm._s(_vm.business))]\n    ),\n    _vm._v(\" \"),\n    _c(\n      \"p\",\n      {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.hasEmailOne,\n            expression: \"hasEmailOne\"\n          }\n        ]\n      },\n      [\n        _c(\"strong\", [_vm._v(\"Email:\")]),\n        _vm._v(\" \"),\n        _c(\n          \"a\",\n          {\n            attrs: { href: _vm._f(\"mailto\")(_vm.emailOne), title: _vm.emailOne }\n          },\n          [_vm._v(_vm._s(_vm.emailOne))]\n        )\n      ]\n    ),\n    _vm._v(\" \"),\n    _c(\n      \"p\",\n      {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.hasEmailTwo,\n            expression: \"hasEmailTwo\"\n          }\n        ]\n      },\n      [\n        _c(\"strong\", [_vm._v(\"Email:\")]),\n        _vm._v(\" \"),\n        _c(\n          \"a\",\n          {\n            attrs: { href: _vm._f(\"mailto\")(_vm.emailTwo), title: _vm.emailTwo }\n          },\n          [_vm._v(_vm._s(_vm.emailTwo))]\n        )\n      ]\n    ),\n    _vm._v(\" \"),\n    _c(\n      \"p\",\n      {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.hasReference,\n            expression: \"hasReference\"\n          }\n        ]\n      },\n      [\n        _c(\"strong\", [_vm._v(\"Referencia:\")]),\n        _vm._v(\" \" + _vm._s(_vm.reference))\n      ]\n    ),\n    _vm._v(\" \"),\n    _vm._m(0)\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"strong\", { staticClass: \"text-danger\" }, [\n        _vm._v(\"\\n      ¿No es el cliente que querías?\\n    \")\n      ]),\n      _vm._v(\" \"),\n      _c(\"strong\", [\n        _vm._v(\"\\n      Selecciona otro o\\n      \"),\n        _c(\n          \"a\",\n          {\n            attrs: {\n              href: \"#\",\n              title: \"crea uno nuevo\",\n              target: \"_self\",\n              \"data-toggle\": \"modal\",\n              \"data-target\": \"#newClient\"\n            }\n          },\n          [_vm._v(\"crea uno nuevo\")]\n        )\n      ])\n    ])\n  }\n]\nrender._withStripped = true\nmodule.exports = { render: render, staticRenderFns: staticRenderFns }\nif (false) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-2e2ca97c\", module.exports)\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2NvbXBvbmVudHMvQ2xpZW50LnZ1ZT8zMDZiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEIsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQixXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDZCQUE2QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3RlbXBsYXRlLWNvbXBpbGVyL2luZGV4LmpzP3tcImlkXCI6XCJkYXRhLXYtMmUyY2E5N2NcIixcImhhc1Njb3BlZFwiOmZhbHNlLFwiYnVibGVcIjp7XCJ0cmFuc2Zvcm1zXCI6e319fSEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvci5qcz90eXBlPXRlbXBsYXRlJmluZGV4PTAhLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2NvbXBvbmVudHMvQ2xpZW50LnZ1ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciByZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIF92bSA9IHRoaXNcbiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICByZXR1cm4gX2MoXCJkaXZcIiwgW1xuICAgIF9jKFwicFwiLCBbXG4gICAgICBfYyhcInN0cm9uZ1wiLCBbX3ZtLl92KFwiQ2xpZW50ZTogXCIpXSksXG4gICAgICBfdm0uX3YoXCIgXCIgKyBfdm0uX3MoX3ZtLm5hbWUpKVxuICAgIF0pLFxuICAgIF92bS5fdihcIiBcIiksXG4gICAgX2MoXG4gICAgICBcInBcIixcbiAgICAgIHtcbiAgICAgICAgZGlyZWN0aXZlczogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6IFwic2hvd1wiLFxuICAgICAgICAgICAgcmF3TmFtZTogXCJ2LXNob3dcIixcbiAgICAgICAgICAgIHZhbHVlOiBfdm0uaGFzUGhvbmVPbmUsXG4gICAgICAgICAgICBleHByZXNzaW9uOiBcImhhc1Bob25lT25lXCJcbiAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICAgIH0sXG4gICAgICBbX2MoXCJzdHJvbmdcIiwgW192bS5fdihcIlRlbMOpZm9ubzpcIildKSwgX3ZtLl92KFwiIFwiICsgX3ZtLl9zKF92bS5waG9uZU9uZSkpXVxuICAgICksXG4gICAgX3ZtLl92KFwiIFwiKSxcbiAgICBfYyhcbiAgICAgIFwicFwiLFxuICAgICAge1xuICAgICAgICBkaXJlY3RpdmVzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogXCJzaG93XCIsXG4gICAgICAgICAgICByYXdOYW1lOiBcInYtc2hvd1wiLFxuICAgICAgICAgICAgdmFsdWU6IF92bS5oYXNQaG9uZVR3byxcbiAgICAgICAgICAgIGV4cHJlc3Npb246IFwiaGFzUGhvbmVUd29cIlxuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgfSxcbiAgICAgIFtfYyhcInN0cm9uZ1wiLCBbX3ZtLl92KFwiVGVsw6lmb25vOlwiKV0pLCBfdm0uX3YoXCIgXCIgKyBfdm0uX3MoX3ZtLnBob25lVHdvKSldXG4gICAgKSxcbiAgICBfdm0uX3YoXCIgXCIpLFxuICAgIF9jKFxuICAgICAgXCJwXCIsXG4gICAgICB7XG4gICAgICAgIGRpcmVjdGl2ZXM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiBcInNob3dcIixcbiAgICAgICAgICAgIHJhd05hbWU6IFwidi1zaG93XCIsXG4gICAgICAgICAgICB2YWx1ZTogX3ZtLmhhc0J1c2luZXNzLFxuICAgICAgICAgICAgZXhwcmVzc2lvbjogXCJoYXNCdXNpbmVzc1wiXG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9LFxuICAgICAgW19jKFwic3Ryb25nXCIsIFtfdm0uX3YoXCJFbXByZXNhOlwiKV0pLCBfdm0uX3YoXCIgXCIgKyBfdm0uX3MoX3ZtLmJ1c2luZXNzKSldXG4gICAgKSxcbiAgICBfdm0uX3YoXCIgXCIpLFxuICAgIF9jKFxuICAgICAgXCJwXCIsXG4gICAgICB7XG4gICAgICAgIGRpcmVjdGl2ZXM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiBcInNob3dcIixcbiAgICAgICAgICAgIHJhd05hbWU6IFwidi1zaG93XCIsXG4gICAgICAgICAgICB2YWx1ZTogX3ZtLmhhc0VtYWlsT25lLFxuICAgICAgICAgICAgZXhwcmVzc2lvbjogXCJoYXNFbWFpbE9uZVwiXG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9LFxuICAgICAgW1xuICAgICAgICBfYyhcInN0cm9uZ1wiLCBbX3ZtLl92KFwiRW1haWw6XCIpXSksXG4gICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgIF9jKFxuICAgICAgICAgIFwiYVwiLFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6IF92bS5fZihcIm1haWx0b1wiKShfdm0uZW1haWxPbmUpLCB0aXRsZTogX3ZtLmVtYWlsT25lIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIFtfdm0uX3YoX3ZtLl9zKF92bS5lbWFpbE9uZSkpXVxuICAgICAgICApXG4gICAgICBdXG4gICAgKSxcbiAgICBfdm0uX3YoXCIgXCIpLFxuICAgIF9jKFxuICAgICAgXCJwXCIsXG4gICAgICB7XG4gICAgICAgIGRpcmVjdGl2ZXM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiBcInNob3dcIixcbiAgICAgICAgICAgIHJhd05hbWU6IFwidi1zaG93XCIsXG4gICAgICAgICAgICB2YWx1ZTogX3ZtLmhhc0VtYWlsVHdvLFxuICAgICAgICAgICAgZXhwcmVzc2lvbjogXCJoYXNFbWFpbFR3b1wiXG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9LFxuICAgICAgW1xuICAgICAgICBfYyhcInN0cm9uZ1wiLCBbX3ZtLl92KFwiRW1haWw6XCIpXSksXG4gICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgIF9jKFxuICAgICAgICAgIFwiYVwiLFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6IF92bS5fZihcIm1haWx0b1wiKShfdm0uZW1haWxUd28pLCB0aXRsZTogX3ZtLmVtYWlsVHdvIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIFtfdm0uX3YoX3ZtLl9zKF92bS5lbWFpbFR3bykpXVxuICAgICAgICApXG4gICAgICBdXG4gICAgKSxcbiAgICBfdm0uX3YoXCIgXCIpLFxuICAgIF9jKFxuICAgICAgXCJwXCIsXG4gICAgICB7XG4gICAgICAgIGRpcmVjdGl2ZXM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiBcInNob3dcIixcbiAgICAgICAgICAgIHJhd05hbWU6IFwidi1zaG93XCIsXG4gICAgICAgICAgICB2YWx1ZTogX3ZtLmhhc1JlZmVyZW5jZSxcbiAgICAgICAgICAgIGV4cHJlc3Npb246IFwiaGFzUmVmZXJlbmNlXCJcbiAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICAgIH0sXG4gICAgICBbXG4gICAgICAgIF9jKFwic3Ryb25nXCIsIFtfdm0uX3YoXCJSZWZlcmVuY2lhOlwiKV0pLFxuICAgICAgICBfdm0uX3YoXCIgXCIgKyBfdm0uX3MoX3ZtLnJlZmVyZW5jZSkpXG4gICAgICBdXG4gICAgKSxcbiAgICBfdm0uX3YoXCIgXCIpLFxuICAgIF92bS5fbSgwKVxuICBdKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtcbiAgZnVuY3Rpb24oKSB7XG4gICAgdmFyIF92bSA9IHRoaXNcbiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgICByZXR1cm4gX2MoXCJwXCIsIFtcbiAgICAgIF9jKFwic3Ryb25nXCIsIHsgc3RhdGljQ2xhc3M6IFwidGV4dC1kYW5nZXJcIiB9LCBbXG4gICAgICAgIF92bS5fdihcIlxcbiAgICAgIMK/Tm8gZXMgZWwgY2xpZW50ZSBxdWUgcXVlcsOtYXM/XFxuICAgIFwiKVxuICAgICAgXSksXG4gICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgX2MoXCJzdHJvbmdcIiwgW1xuICAgICAgICBfdm0uX3YoXCJcXG4gICAgICBTZWxlY2Npb25hIG90cm8gb1xcbiAgICAgIFwiKSxcbiAgICAgICAgX2MoXG4gICAgICAgICAgXCJhXCIsXG4gICAgICAgICAge1xuICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgaHJlZjogXCIjXCIsXG4gICAgICAgICAgICAgIHRpdGxlOiBcImNyZWEgdW5vIG51ZXZvXCIsXG4gICAgICAgICAgICAgIHRhcmdldDogXCJfc2VsZlwiLFxuICAgICAgICAgICAgICBcImRhdGEtdG9nZ2xlXCI6IFwibW9kYWxcIixcbiAgICAgICAgICAgICAgXCJkYXRhLXRhcmdldFwiOiBcIiNuZXdDbGllbnRcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgW192bS5fdihcImNyZWEgdW5vIG51ZXZvXCIpXVxuICAgICAgICApXG4gICAgICBdKVxuICAgIF0pXG4gIH1cbl1cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxubW9kdWxlLmV4cG9ydHMgPSB7IHJlbmRlcjogcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZucyB9XG5pZiAobW9kdWxlLmhvdCkge1xuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmIChtb2R1bGUuaG90LmRhdGEpIHtcbiAgICByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpICAgICAgLnJlcmVuZGVyKFwiZGF0YS12LTJlMmNhOTdjXCIsIG1vZHVsZS5leHBvcnRzKVxuICB9XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvdGVtcGxhdGUtY29tcGlsZXI/e1wiaWRcIjpcImRhdGEtdi0yZTJjYTk3Y1wiLFwiaGFzU2NvcGVkXCI6ZmFsc2UsXCJidWJsZVwiOntcInRyYW5zZm9ybXNcIjp7fX19IS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9dGVtcGxhdGUmaW5kZXg9MCEuL3Jlc291cmNlcy9hc3NldHMvanMvY29tcG9uZW50cy9DbGllbnQudnVlXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi90ZW1wbGF0ZS1jb21waWxlci9pbmRleC5qcz97XCJpZFwiOlwiZGF0YS12LTJlMmNhOTdjXCIsXCJoYXNTY29wZWRcIjpmYWxzZSxcImJ1YmxlXCI6e1widHJhbnNmb3Jtc1wiOnt9fX0hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT10ZW1wbGF0ZSZpbmRleD0wIS4vcmVzb3VyY2VzL2Fzc2V0cy9qcy9jb21wb25lbnRzL0NsaWVudC52dWVcbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-2e2ca97c\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/assets/js/components/Client.vue\n");

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-36a7cc9c\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/assets/js/components/Spinner.vue":
/***/ (function(module, exports, __webpack_require__) {

eval("var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"loader\" }, [_vm._v(\"Cargando...\")])\n}\nvar staticRenderFns = []\nrender._withStripped = true\nmodule.exports = { render: render, staticRenderFns: staticRenderFns }\nif (false) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-36a7cc9c\", module.exports)\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2NvbXBvbmVudHMvU3Bpbm5lci52dWU/ZjkxMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQix3QkFBd0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi90ZW1wbGF0ZS1jb21waWxlci9pbmRleC5qcz97XCJpZFwiOlwiZGF0YS12LTM2YTdjYzljXCIsXCJoYXNTY29wZWRcIjpmYWxzZSxcImJ1YmxlXCI6e1widHJhbnNmb3Jtc1wiOnt9fX0hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT10ZW1wbGF0ZSZpbmRleD0wIS4vcmVzb3VyY2VzL2Fzc2V0cy9qcy9jb21wb25lbnRzL1NwaW5uZXIudnVlLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gIHJldHVybiBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcImxvYWRlclwiIH0sIFtfdm0uX3YoXCJDYXJnYW5kby4uLlwiKV0pXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxubW9kdWxlLmV4cG9ydHMgPSB7IHJlbmRlcjogcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZucyB9XG5pZiAobW9kdWxlLmhvdCkge1xuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmIChtb2R1bGUuaG90LmRhdGEpIHtcbiAgICByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpICAgICAgLnJlcmVuZGVyKFwiZGF0YS12LTM2YTdjYzljXCIsIG1vZHVsZS5leHBvcnRzKVxuICB9XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvdGVtcGxhdGUtY29tcGlsZXI/e1wiaWRcIjpcImRhdGEtdi0zNmE3Y2M5Y1wiLFwiaGFzU2NvcGVkXCI6ZmFsc2UsXCJidWJsZVwiOntcInRyYW5zZm9ybXNcIjp7fX19IS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9dGVtcGxhdGUmaW5kZXg9MCEuL3Jlc291cmNlcy9hc3NldHMvanMvY29tcG9uZW50cy9TcGlubmVyLnZ1ZVxuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvdGVtcGxhdGUtY29tcGlsZXIvaW5kZXguanM/e1wiaWRcIjpcImRhdGEtdi0zNmE3Y2M5Y1wiLFwiaGFzU2NvcGVkXCI6ZmFsc2UsXCJidWJsZVwiOntcInRyYW5zZm9ybXNcIjp7fX19IS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9dGVtcGxhdGUmaW5kZXg9MCEuL3Jlc291cmNlcy9hc3NldHMvanMvY29tcG9uZW50cy9TcGlubmVyLnZ1ZVxuLy8gbW9kdWxlIGNodW5rcyA9IDEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-36a7cc9c\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/assets/js/components/Spinner.vue\n");

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-ab86eb92\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/assets/js/components/Expedient.vue":
/***/ (function(module, exports, __webpack_require__) {

eval("var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return !_vm.isEmpty\n    ? _c(\n        \"div\",\n        {\n          staticClass:\n            \"clearfix block col-xs-12 col-sm-offset-3 col-sm-9 col-md-offset-2 col-md-9 col-lg-offset-2 col-lg-10 alert alert-info\"\n        },\n        [\n          _c(\"div\", [\n            _c(\n              \"p\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.hasExpedient,\n                    expression: \"hasExpedient\"\n                  }\n                ]\n              },\n              [\n                _c(\"strong\", [_vm._v(\"Expediente interno:\")]),\n                _vm._v(\" \" + _vm._s(_vm.expedient))\n              ]\n            )\n          ]),\n          _vm._v(\" \"),\n          _vm.hasClient\n            ? _c(\"client\", {\n                attrs: {\n                  name: _vm.name,\n                  \"phone-one\": _vm.phoneOne,\n                  \"phone-two\": _vm.phoneTwo,\n                  business: _vm.business,\n                  \"email-one\": _vm.emailOne,\n                  \"email-two\": _vm.emailTwo,\n                  reference: _vm.reference\n                }\n              })\n            : _vm._e()\n        ],\n        1\n      )\n    : _vm._e()\n}\nvar staticRenderFns = []\nrender._withStripped = true\nmodule.exports = { render: render, staticRenderFns: staticRenderFns }\nif (false) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-ab86eb92\", module.exports)\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2NvbXBvbmVudHMvRXhwZWRpZW50LnZ1ZT9lMDMyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi90ZW1wbGF0ZS1jb21waWxlci9pbmRleC5qcz97XCJpZFwiOlwiZGF0YS12LWFiODZlYjkyXCIsXCJoYXNTY29wZWRcIjpmYWxzZSxcImJ1YmxlXCI6e1widHJhbnNmb3Jtc1wiOnt9fX0hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT10ZW1wbGF0ZSZpbmRleD0wIS4vcmVzb3VyY2VzL2Fzc2V0cy9qcy9jb21wb25lbnRzL0V4cGVkaWVudC52dWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmVuZGVyID0gZnVuY3Rpb24oKSB7XG4gIHZhciBfdm0gPSB0aGlzXG4gIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudFxuICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgcmV0dXJuICFfdm0uaXNFbXB0eVxuICAgID8gX2MoXG4gICAgICAgIFwiZGl2XCIsXG4gICAgICAgIHtcbiAgICAgICAgICBzdGF0aWNDbGFzczpcbiAgICAgICAgICAgIFwiY2xlYXJmaXggYmxvY2sgY29sLXhzLTEyIGNvbC1zbS1vZmZzZXQtMyBjb2wtc20tOSBjb2wtbWQtb2Zmc2V0LTIgY29sLW1kLTkgY29sLWxnLW9mZnNldC0yIGNvbC1sZy0xMCBhbGVydCBhbGVydC1pbmZvXCJcbiAgICAgICAgfSxcbiAgICAgICAgW1xuICAgICAgICAgIF9jKFwiZGl2XCIsIFtcbiAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICBcInBcIixcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFtcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJzaG93XCIsXG4gICAgICAgICAgICAgICAgICAgIHJhd05hbWU6IFwidi1zaG93XCIsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uaGFzRXhwZWRpZW50LFxuICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiBcImhhc0V4cGVkaWVudFwiXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgX2MoXCJzdHJvbmdcIiwgW192bS5fdihcIkV4cGVkaWVudGUgaW50ZXJubzpcIildKSxcbiAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIgKyBfdm0uX3MoX3ZtLmV4cGVkaWVudCkpXG4gICAgICAgICAgICAgIF1cbiAgICAgICAgICAgIClcbiAgICAgICAgICBdKSxcbiAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgIF92bS5oYXNDbGllbnRcbiAgICAgICAgICAgID8gX2MoXCJjbGllbnRcIiwge1xuICAgICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICBuYW1lOiBfdm0ubmFtZSxcbiAgICAgICAgICAgICAgICAgIFwicGhvbmUtb25lXCI6IF92bS5waG9uZU9uZSxcbiAgICAgICAgICAgICAgICAgIFwicGhvbmUtdHdvXCI6IF92bS5waG9uZVR3byxcbiAgICAgICAgICAgICAgICAgIGJ1c2luZXNzOiBfdm0uYnVzaW5lc3MsXG4gICAgICAgICAgICAgICAgICBcImVtYWlsLW9uZVwiOiBfdm0uZW1haWxPbmUsXG4gICAgICAgICAgICAgICAgICBcImVtYWlsLXR3b1wiOiBfdm0uZW1haWxUd28sXG4gICAgICAgICAgICAgICAgICByZWZlcmVuY2U6IF92bS5yZWZlcmVuY2VcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICA6IF92bS5fZSgpXG4gICAgICAgIF0sXG4gICAgICAgIDFcbiAgICAgIClcbiAgICA6IF92bS5fZSgpXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxubW9kdWxlLmV4cG9ydHMgPSB7IHJlbmRlcjogcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZucyB9XG5pZiAobW9kdWxlLmhvdCkge1xuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmIChtb2R1bGUuaG90LmRhdGEpIHtcbiAgICByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpICAgICAgLnJlcmVuZGVyKFwiZGF0YS12LWFiODZlYjkyXCIsIG1vZHVsZS5leHBvcnRzKVxuICB9XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvdGVtcGxhdGUtY29tcGlsZXI/e1wiaWRcIjpcImRhdGEtdi1hYjg2ZWI5MlwiLFwiaGFzU2NvcGVkXCI6ZmFsc2UsXCJidWJsZVwiOntcInRyYW5zZm9ybXNcIjp7fX19IS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9dGVtcGxhdGUmaW5kZXg9MCEuL3Jlc291cmNlcy9hc3NldHMvanMvY29tcG9uZW50cy9FeHBlZGllbnQudnVlXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi90ZW1wbGF0ZS1jb21waWxlci9pbmRleC5qcz97XCJpZFwiOlwiZGF0YS12LWFiODZlYjkyXCIsXCJoYXNTY29wZWRcIjpmYWxzZSxcImJ1YmxlXCI6e1widHJhbnNmb3Jtc1wiOnt9fX0hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT10ZW1wbGF0ZSZpbmRleD0wIS4vcmVzb3VyY2VzL2Fzc2V0cy9qcy9jb21wb25lbnRzL0V4cGVkaWVudC52dWVcbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-ab86eb92\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/assets/js/components/Expedient.vue\n");

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js?sourceMap!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-36a7cc9c\",\"scoped\":false,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/assets/js/components/Spinner.vue":
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"./node_modules/css-loader/index.js?sourceMap!./node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-36a7cc9c\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/assets/js/components/Spinner.vue\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"./node_modules/vue-style-loader/lib/addStylesClient.js\")(\"15208fd8\", content, false, {});\n// Hot Module Replacement\nif(false) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-36a7cc9c\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Spinner.vue\", function() {\n     var newContent = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-36a7cc9c\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Spinner.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2NvbXBvbmVudHMvU3Bpbm5lci52dWU/MzFmZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBLHFVQUFtTztBQUNuTztBQUNBO0FBQ0E7QUFDQSx5SEFBd0g7QUFDeEg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnSkFBZ0osa0ZBQWtGO0FBQ2xPLHlKQUF5SixrRkFBa0Y7QUFDM087QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsZ0NBQWdDLFVBQVUsRUFBRTtBQUM1QyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy92dWUtc3R5bGUtbG9hZGVyL2luZGV4LmpzIS4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLWNvbXBpbGVyL2luZGV4LmpzP3tcInZ1ZVwiOnRydWUsXCJpZFwiOlwiZGF0YS12LTM2YTdjYzljXCIsXCJzY29wZWRcIjpmYWxzZSxcImhhc0lubGluZUNvbmZpZ1wiOnRydWV9IS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9c3R5bGVzJmluZGV4PTAhLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2NvbXBvbmVudHMvU3Bpbm5lci52dWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zdHlsZS1jb21waWxlci9pbmRleC5qcz97XFxcInZ1ZVxcXCI6dHJ1ZSxcXFwiaWRcXFwiOlxcXCJkYXRhLXYtMzZhN2NjOWNcXFwiLFxcXCJzY29wZWRcXFwiOmZhbHNlLFxcXCJoYXNJbmxpbmVDb25maWdcXFwiOnRydWV9IS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvci5qcz90eXBlPXN0eWxlcyZpbmRleD0wIS4vU3Bpbm5lci52dWVcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlc0NsaWVudC5qc1wiKShcIjE1MjA4ZmQ4XCIsIGNvbnRlbnQsIGZhbHNlLCB7fSk7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG4gLy8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3NcbiBpZighY29udGVudC5sb2NhbHMpIHtcbiAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXAhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLWNvbXBpbGVyL2luZGV4LmpzP3tcXFwidnVlXFxcIjp0cnVlLFxcXCJpZFxcXCI6XFxcImRhdGEtdi0zNmE3Y2M5Y1xcXCIsXFxcInNjb3BlZFxcXCI6ZmFsc2UsXFxcImhhc0lubGluZUNvbmZpZ1xcXCI6dHJ1ZX0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9c3R5bGVzJmluZGV4PTAhLi9TcGlubmVyLnZ1ZVwiLCBmdW5jdGlvbigpIHtcbiAgICAgdmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXAhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLWNvbXBpbGVyL2luZGV4LmpzP3tcXFwidnVlXFxcIjp0cnVlLFxcXCJpZFxcXCI6XFxcImRhdGEtdi0zNmE3Y2M5Y1xcXCIsXFxcInNjb3BlZFxcXCI6ZmFsc2UsXFxcImhhc0lubGluZUNvbmZpZ1xcXCI6dHJ1ZX0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9c3R5bGVzJmluZGV4PTAhLi9TcGlubmVyLnZ1ZVwiKTtcbiAgICAgaWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG4gICAgIHVwZGF0ZShuZXdDb250ZW50KTtcbiAgIH0pO1xuIH1cbiAvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG4gbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlciEuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyP3NvdXJjZU1hcCEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zdHlsZS1jb21waWxlcj97XCJ2dWVcIjp0cnVlLFwiaWRcIjpcImRhdGEtdi0zNmE3Y2M5Y1wiLFwic2NvcGVkXCI6ZmFsc2UsXCJoYXNJbmxpbmVDb25maWdcIjp0cnVlfSEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvci5qcz90eXBlPXN0eWxlcyZpbmRleD0wIS4vcmVzb3VyY2VzL2Fzc2V0cy9qcy9jb21wb25lbnRzL1NwaW5uZXIudnVlXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy92dWUtc3R5bGUtbG9hZGVyL2luZGV4LmpzIS4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLWNvbXBpbGVyL2luZGV4LmpzP3tcInZ1ZVwiOnRydWUsXCJpZFwiOlwiZGF0YS12LTM2YTdjYzljXCIsXCJzY29wZWRcIjpmYWxzZSxcImhhc0lubGluZUNvbmZpZ1wiOnRydWV9IS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9c3R5bGVzJmluZGV4PTAhLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2NvbXBvbmVudHMvU3Bpbm5lci52dWVcbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js?sourceMap!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-36a7cc9c\",\"scoped\":false,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/assets/js/components/Spinner.vue\n");

/***/ }),

/***/ "./node_modules/vue-style-loader/lib/addStylesClient.js":
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(\"./node_modules/vue-style-loader/lib/listToStyles.js\")\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzQ2xpZW50LmpzP2FlMzgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsaUJBQWlCO0FBQzNCO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxtQkFBbUIsbUJBQW1CO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLG1CQUFtQixzQkFBc0I7QUFDekM7QUFDQTtBQUNBLHVCQUF1QiwyQkFBMkI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxpQkFBaUIsbUJBQW1CO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDJCQUEyQjtBQUNoRDtBQUNBO0FBQ0EsWUFBWSx1QkFBdUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHFCQUFxQix1QkFBdUI7QUFDNUM7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5REFBeUQ7QUFDekQ7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzQ2xpZW50LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuICBNb2RpZmllZCBieSBFdmFuIFlvdSBAeXl4OTkwODAzXG4qL1xuXG52YXIgaGFzRG9jdW1lbnQgPSB0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnXG5cbmlmICh0eXBlb2YgREVCVUcgIT09ICd1bmRlZmluZWQnICYmIERFQlVHKSB7XG4gIGlmICghaGFzRG9jdW1lbnQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgJ3Z1ZS1zdHlsZS1sb2FkZXIgY2Fubm90IGJlIHVzZWQgaW4gYSBub24tYnJvd3NlciBlbnZpcm9ubWVudC4gJyArXG4gICAgXCJVc2UgeyB0YXJnZXQ6ICdub2RlJyB9IGluIHlvdXIgV2VicGFjayBjb25maWcgdG8gaW5kaWNhdGUgYSBzZXJ2ZXItcmVuZGVyaW5nIGVudmlyb25tZW50LlwiXG4gICkgfVxufVxuXG52YXIgbGlzdFRvU3R5bGVzID0gcmVxdWlyZSgnLi9saXN0VG9TdHlsZXMnKVxuXG4vKlxudHlwZSBTdHlsZU9iamVjdCA9IHtcbiAgaWQ6IG51bWJlcjtcbiAgcGFydHM6IEFycmF5PFN0eWxlT2JqZWN0UGFydD5cbn1cblxudHlwZSBTdHlsZU9iamVjdFBhcnQgPSB7XG4gIGNzczogc3RyaW5nO1xuICBtZWRpYTogc3RyaW5nO1xuICBzb3VyY2VNYXA6ID9zdHJpbmdcbn1cbiovXG5cbnZhciBzdHlsZXNJbkRvbSA9IHsvKlxuICBbaWQ6IG51bWJlcl06IHtcbiAgICBpZDogbnVtYmVyLFxuICAgIHJlZnM6IG51bWJlcixcbiAgICBwYXJ0czogQXJyYXk8KG9iaj86IFN0eWxlT2JqZWN0UGFydCkgPT4gdm9pZD5cbiAgfVxuKi99XG5cbnZhciBoZWFkID0gaGFzRG9jdW1lbnQgJiYgKGRvY3VtZW50LmhlYWQgfHwgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXSlcbnZhciBzaW5nbGV0b25FbGVtZW50ID0gbnVsbFxudmFyIHNpbmdsZXRvbkNvdW50ZXIgPSAwXG52YXIgaXNQcm9kdWN0aW9uID0gZmFsc2VcbnZhciBub29wID0gZnVuY3Rpb24gKCkge31cbnZhciBvcHRpb25zID0gbnVsbFxudmFyIHNzcklkS2V5ID0gJ2RhdGEtdnVlLXNzci1pZCdcblxuLy8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG4vLyB0YWdzIGl0IHdpbGwgYWxsb3cgb24gYSBwYWdlXG52YXIgaXNPbGRJRSA9IHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIC9tc2llIFs2LTldXFxiLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKSlcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAocGFyZW50SWQsIGxpc3QsIF9pc1Byb2R1Y3Rpb24sIF9vcHRpb25zKSB7XG4gIGlzUHJvZHVjdGlvbiA9IF9pc1Byb2R1Y3Rpb25cblxuICBvcHRpb25zID0gX29wdGlvbnMgfHwge31cblxuICB2YXIgc3R5bGVzID0gbGlzdFRvU3R5bGVzKHBhcmVudElkLCBsaXN0KVxuICBhZGRTdHlsZXNUb0RvbShzdHlsZXMpXG5cbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZSAobmV3TGlzdCkge1xuICAgIHZhciBtYXlSZW1vdmUgPSBbXVxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaXRlbSA9IHN0eWxlc1tpXVxuICAgICAgdmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF1cbiAgICAgIGRvbVN0eWxlLnJlZnMtLVxuICAgICAgbWF5UmVtb3ZlLnB1c2goZG9tU3R5bGUpXG4gICAgfVxuICAgIGlmIChuZXdMaXN0KSB7XG4gICAgICBzdHlsZXMgPSBsaXN0VG9TdHlsZXMocGFyZW50SWQsIG5ld0xpc3QpXG4gICAgICBhZGRTdHlsZXNUb0RvbShzdHlsZXMpXG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlcyA9IFtdXG4gICAgfVxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbWF5UmVtb3ZlLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgZG9tU3R5bGUgPSBtYXlSZW1vdmVbaV1cbiAgICAgIGlmIChkb21TdHlsZS5yZWZzID09PSAwKSB7XG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICBkb21TdHlsZS5wYXJ0c1tqXSgpXG4gICAgICAgIH1cbiAgICAgICAgZGVsZXRlIHN0eWxlc0luRG9tW2RvbVN0eWxlLmlkXVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBhZGRTdHlsZXNUb0RvbSAoc3R5bGVzIC8qIEFycmF5PFN0eWxlT2JqZWN0PiAqLykge1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gc3R5bGVzW2ldXG4gICAgdmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF1cbiAgICBpZiAoZG9tU3R5bGUpIHtcbiAgICAgIGRvbVN0eWxlLnJlZnMrK1xuICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykge1xuICAgICAgICBkb21TdHlsZS5wYXJ0c1tqXShpdGVtLnBhcnRzW2pdKVxuICAgICAgfVxuICAgICAgZm9yICg7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSB7XG4gICAgICAgIGRvbVN0eWxlLnBhcnRzLnB1c2goYWRkU3R5bGUoaXRlbS5wYXJ0c1tqXSkpXG4gICAgICB9XG4gICAgICBpZiAoZG9tU3R5bGUucGFydHMubGVuZ3RoID4gaXRlbS5wYXJ0cy5sZW5ndGgpIHtcbiAgICAgICAgZG9tU3R5bGUucGFydHMubGVuZ3RoID0gaXRlbS5wYXJ0cy5sZW5ndGhcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHBhcnRzID0gW11cbiAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgaXRlbS5wYXJ0cy5sZW5ndGg7IGorKykge1xuICAgICAgICBwYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0pKVxuICAgICAgfVxuICAgICAgc3R5bGVzSW5Eb21baXRlbS5pZF0gPSB7IGlkOiBpdGVtLmlkLCByZWZzOiAxLCBwYXJ0czogcGFydHMgfVxuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBjcmVhdGVTdHlsZUVsZW1lbnQgKCkge1xuICB2YXIgc3R5bGVFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKVxuICBzdHlsZUVsZW1lbnQudHlwZSA9ICd0ZXh0L2NzcydcbiAgaGVhZC5hcHBlbmRDaGlsZChzdHlsZUVsZW1lbnQpXG4gIHJldHVybiBzdHlsZUVsZW1lbnRcbn1cblxuZnVuY3Rpb24gYWRkU3R5bGUgKG9iaiAvKiBTdHlsZU9iamVjdFBhcnQgKi8pIHtcbiAgdmFyIHVwZGF0ZSwgcmVtb3ZlXG4gIHZhciBzdHlsZUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdzdHlsZVsnICsgc3NySWRLZXkgKyAnfj1cIicgKyBvYmouaWQgKyAnXCJdJylcblxuICBpZiAoc3R5bGVFbGVtZW50KSB7XG4gICAgaWYgKGlzUHJvZHVjdGlvbikge1xuICAgICAgLy8gaGFzIFNTUiBzdHlsZXMgYW5kIGluIHByb2R1Y3Rpb24gbW9kZS5cbiAgICAgIC8vIHNpbXBseSBkbyBub3RoaW5nLlxuICAgICAgcmV0dXJuIG5vb3BcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gaGFzIFNTUiBzdHlsZXMgYnV0IGluIGRldiBtb2RlLlxuICAgICAgLy8gZm9yIHNvbWUgcmVhc29uIENocm9tZSBjYW4ndCBoYW5kbGUgc291cmNlIG1hcCBpbiBzZXJ2ZXItcmVuZGVyZWRcbiAgICAgIC8vIHN0eWxlIHRhZ3MgLSBzb3VyY2UgbWFwcyBpbiA8c3R5bGU+IG9ubHkgd29ya3MgaWYgdGhlIHN0eWxlIHRhZyBpc1xuICAgICAgLy8gY3JlYXRlZCBhbmQgaW5zZXJ0ZWQgZHluYW1pY2FsbHkuIFNvIHdlIHJlbW92ZSB0aGUgc2VydmVyIHJlbmRlcmVkXG4gICAgICAvLyBzdHlsZXMgYW5kIGluamVjdCBuZXcgb25lcy5cbiAgICAgIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudClcbiAgICB9XG4gIH1cblxuICBpZiAoaXNPbGRJRSkge1xuICAgIC8vIHVzZSBzaW5nbGV0b24gbW9kZSBmb3IgSUU5LlxuICAgIHZhciBzdHlsZUluZGV4ID0gc2luZ2xldG9uQ291bnRlcisrXG4gICAgc3R5bGVFbGVtZW50ID0gc2luZ2xldG9uRWxlbWVudCB8fCAoc2luZ2xldG9uRWxlbWVudCA9IGNyZWF0ZVN0eWxlRWxlbWVudCgpKVxuICAgIHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZUVsZW1lbnQsIHN0eWxlSW5kZXgsIGZhbHNlKVxuICAgIHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZUVsZW1lbnQsIHN0eWxlSW5kZXgsIHRydWUpXG4gIH0gZWxzZSB7XG4gICAgLy8gdXNlIG11bHRpLXN0eWxlLXRhZyBtb2RlIGluIGFsbCBvdGhlciBjYXNlc1xuICAgIHN0eWxlRWxlbWVudCA9IGNyZWF0ZVN0eWxlRWxlbWVudCgpXG4gICAgdXBkYXRlID0gYXBwbHlUb1RhZy5iaW5kKG51bGwsIHN0eWxlRWxlbWVudClcbiAgICByZW1vdmUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpXG4gICAgfVxuICB9XG5cbiAgdXBkYXRlKG9iailcblxuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlU3R5bGUgKG5ld09iaiAvKiBTdHlsZU9iamVjdFBhcnQgKi8pIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJlxuICAgICAgICAgIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmXG4gICAgICAgICAgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCkge1xuICAgICAgICByZXR1cm5cbiAgICAgIH1cbiAgICAgIHVwZGF0ZShvYmogPSBuZXdPYmopXG4gICAgfSBlbHNlIHtcbiAgICAgIHJlbW92ZSgpXG4gICAgfVxuICB9XG59XG5cbnZhciByZXBsYWNlVGV4dCA9IChmdW5jdGlvbiAoKSB7XG4gIHZhciB0ZXh0U3RvcmUgPSBbXVxuXG4gIHJldHVybiBmdW5jdGlvbiAoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG4gICAgdGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50XG4gICAgcmV0dXJuIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbignXFxuJylcbiAgfVxufSkoKVxuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnIChzdHlsZUVsZW1lbnQsIGluZGV4LCByZW1vdmUsIG9iaikge1xuICB2YXIgY3NzID0gcmVtb3ZlID8gJycgOiBvYmouY3NzXG5cbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpXG4gIH0gZWxzZSB7XG4gICAgdmFyIGNzc05vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpXG4gICAgdmFyIGNoaWxkTm9kZXMgPSBzdHlsZUVsZW1lbnQuY2hpbGROb2Rlc1xuICAgIGlmIChjaGlsZE5vZGVzW2luZGV4XSkgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKVxuICAgIGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xuICAgICAgc3R5bGVFbGVtZW50Lmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSlcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGNzc05vZGUpXG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGFwcGx5VG9UYWcgKHN0eWxlRWxlbWVudCwgb2JqKSB7XG4gIHZhciBjc3MgPSBvYmouY3NzXG4gIHZhciBtZWRpYSA9IG9iai5tZWRpYVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcFxuXG4gIGlmIChtZWRpYSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ21lZGlhJywgbWVkaWEpXG4gIH1cbiAgaWYgKG9wdGlvbnMuc3NySWQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKHNzcklkS2V5LCBvYmouaWQpXG4gIH1cblxuICBpZiAoc291cmNlTWFwKSB7XG4gICAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIuY2hyb21lLmNvbS9kZXZ0b29scy9kb2NzL2phdmFzY3JpcHQtZGVidWdnaW5nXG4gICAgLy8gdGhpcyBtYWtlcyBzb3VyY2UgbWFwcyBpbnNpZGUgc3R5bGUgdGFncyB3b3JrIHByb3Blcmx5IGluIENocm9tZVxuICAgIGNzcyArPSAnXFxuLyojIHNvdXJjZVVSTD0nICsgc291cmNlTWFwLnNvdXJjZXNbMF0gKyAnICovJ1xuICAgIC8vIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzI2NjAzODc1XG4gICAgY3NzICs9ICdcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LCcgKyBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpICsgJyAqLydcbiAgfVxuXG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3NcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZClcbiAgICB9XG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpXG4gIH1cbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3Z1ZS1zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlc0NsaWVudC5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzQ2xpZW50LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/vue-style-loader/lib/addStylesClient.js\n");

/***/ }),

/***/ "./node_modules/vue-style-loader/lib/listToStyles.js":
/***/ (function(module, exports) {

eval("/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlci9saWIvbGlzdFRvU3R5bGVzLmpzP2I1MzUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsaUJBQWlCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyx3QkFBd0I7QUFDM0QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlci9saWIvbGlzdFRvU3R5bGVzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUcmFuc2xhdGVzIHRoZSBsaXN0IGZvcm1hdCBwcm9kdWNlZCBieSBjc3MtbG9hZGVyIGludG8gc29tZXRoaW5nXG4gKiBlYXNpZXIgdG8gbWFuaXB1bGF0ZS5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBsaXN0VG9TdHlsZXMgKHBhcmVudElkLCBsaXN0KSB7XG4gIHZhciBzdHlsZXMgPSBbXVxuICB2YXIgbmV3U3R5bGVzID0ge31cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldXG4gICAgdmFyIGlkID0gaXRlbVswXVxuICAgIHZhciBjc3MgPSBpdGVtWzFdXG4gICAgdmFyIG1lZGlhID0gaXRlbVsyXVxuICAgIHZhciBzb3VyY2VNYXAgPSBpdGVtWzNdXG4gICAgdmFyIHBhcnQgPSB7XG4gICAgICBpZDogcGFyZW50SWQgKyAnOicgKyBpLFxuICAgICAgY3NzOiBjc3MsXG4gICAgICBtZWRpYTogbWVkaWEsXG4gICAgICBzb3VyY2VNYXA6IHNvdXJjZU1hcFxuICAgIH1cbiAgICBpZiAoIW5ld1N0eWxlc1tpZF0pIHtcbiAgICAgIHN0eWxlcy5wdXNoKG5ld1N0eWxlc1tpZF0gPSB7IGlkOiBpZCwgcGFydHM6IFtwYXJ0XSB9KVxuICAgIH0gZWxzZSB7XG4gICAgICBuZXdTdHlsZXNbaWRdLnBhcnRzLnB1c2gocGFydClcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHN0eWxlc1xufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlci9saWIvbGlzdFRvU3R5bGVzLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy92dWUtc3R5bGUtbG9hZGVyL2xpYi9saXN0VG9TdHlsZXMuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/vue-style-loader/lib/listToStyles.js\n");

/***/ }),

/***/ "./resources/assets/js/app.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function(__webpack_provided_window_dot_Vue) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__apps_callInfo__ = __webpack_require__(\"./resources/assets/js/apps/callInfo.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__apps_clientFilter__ = __webpack_require__(\"./resources/assets/js/apps/clientFilter.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__apps_createSeller__ = __webpack_require__(\"./resources/assets/js/apps/createSeller.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__apps_editSeller__ = __webpack_require__(\"./resources/assets/js/apps/editSeller.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__apps_editClosingContract__ = __webpack_require__(\"./resources/assets/js/apps/editClosingContract.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_newExpedient__ = __webpack_require__(\"./resources/assets/js/components/newExpedient.js\");\n\n\n\n\n\n// import editContract from './apps/editContract'\n\n\n/**\n * First we will load all of this project's JavaScript dependencies which\n * includes Vue and other libraries. It is a great starting point when\n * building robust, powerful web applications using Vue and Laravel.\n */\n\n__webpack_require__(\"./resources/assets/js/bootstrap.js\");\n\n__webpack_provided_window_dot_Vue = __webpack_require__(\"./node_modules/vue/dist/vue.common.js\");\n\nvar Vue = __webpack_provided_window_dot_Vue;\n\n/**\n * Next, we will create a fresh Vue application instance and attach it to\n * the page. Then, you may begin adding components to this application\n * or customize the JavaScript scaffolding to fit your unique needs.\n */\n\nvar clientFilterRoot = document.getElementById('client__filter') || null;\nvar callInfoRoot = document.getElementById('call__info') || null;\nvar createSellerRoot = document.getElementById('create__seller') || null;\nvar editSellerRoot = document.getElementById('edit__seller') || null;\nvar editClosingContractRoot = document.getElementById('edit__closing-contract') || null;\n// const editContractRoot = document.getElementById('edit__contract') || null\nvar newExpedientRoot = document.getElementById('new__expedient') || null;\n\nif (callInfoRoot !== null) {\n  var $vmCall = new Vue(__WEBPACK_IMPORTED_MODULE_0__apps_callInfo__[\"a\" /* default */]);\n}\n\nif (clientFilterRoot) {\n  var $vmClientFilter = new Vue(__WEBPACK_IMPORTED_MODULE_1__apps_clientFilter__[\"a\" /* default */]);\n}\n\nif (createSellerRoot !== null) {\n  var $vmCreateSeller = new Vue(__WEBPACK_IMPORTED_MODULE_2__apps_createSeller__[\"a\" /* default */]);\n}\n\nif (editSellerRoot !== null) {\n  var $vmEditSeller = new Vue(__WEBPACK_IMPORTED_MODULE_3__apps_editSeller__[\"a\" /* default */]);\n}\n\nif (editClosingContractRoot !== null) {\n  var $vmEditClosingContract = new Vue(__WEBPACK_IMPORTED_MODULE_4__apps_editClosingContract__[\"a\" /* default */]);\n}\n//\n// if (editContractRoot !== null) {\n//   const $vmEditContract = new Vue(editContract)\n// }\n\nif (newExpedientRoot !== null) {\n  var $vmNewExpedient = new Vue(__WEBPACK_IMPORTED_MODULE_5__components_newExpedient__[\"a\" /* default */]);\n}\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(\"./node_modules/vue/dist/vue.common.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2FwcC5qcz9iMTVmIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJWdWUiLCJjbGllbnRGaWx0ZXJSb290IiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImNhbGxJbmZvUm9vdCIsImNyZWF0ZVNlbGxlclJvb3QiLCJlZGl0U2VsbGVyUm9vdCIsImVkaXRDbG9zaW5nQ29udHJhY3RSb290IiwibmV3RXhwZWRpZW50Um9vdCIsIiR2bUNhbGwiLCIkdm1DbGllbnRGaWx0ZXIiLCIkdm1DcmVhdGVTZWxsZXIiLCIkdm1FZGl0U2VsbGVyIiwiJHZtRWRpdENsb3NpbmdDb250cmFjdCIsIiR2bU5ld0V4cGVkaWVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7QUFNQSxtQkFBQUEsQ0FBUSxvQ0FBUjs7QUFFQSxvQ0FBYSxtQkFBQUEsQ0FBUSx1Q0FBUixDQUFiOztBQUVBLElBQU1DLE1BQU0saUNBQVo7O0FBRUE7Ozs7OztBQU1BLElBQU1DLG1CQUFtQkMsU0FBU0MsY0FBVCxDQUF3QixnQkFBeEIsS0FBNkMsSUFBdEU7QUFDQSxJQUFNQyxlQUFlRixTQUFTQyxjQUFULENBQXdCLFlBQXhCLEtBQXlDLElBQTlEO0FBQ0EsSUFBTUUsbUJBQW1CSCxTQUFTQyxjQUFULENBQXdCLGdCQUF4QixLQUE2QyxJQUF0RTtBQUNBLElBQU1HLGlCQUFpQkosU0FBU0MsY0FBVCxDQUF3QixjQUF4QixLQUEyQyxJQUFsRTtBQUNBLElBQU1JLDBCQUEwQkwsU0FBU0MsY0FBVCxDQUF3Qix3QkFBeEIsS0FBcUQsSUFBckY7QUFDQTtBQUNBLElBQU1LLG1CQUFtQk4sU0FBU0MsY0FBVCxDQUF3QixnQkFBeEIsS0FBNkMsSUFBdEU7O0FBRUEsSUFBSUMsaUJBQWlCLElBQXJCLEVBQTJCO0FBQ3pCLE1BQU1LLFVBQVUsSUFBSVQsR0FBSixDQUFRLCtEQUFSLENBQWhCO0FBQ0Q7O0FBRUQsSUFBSUMsZ0JBQUosRUFBc0I7QUFDcEIsTUFBTVMsa0JBQWtCLElBQUlWLEdBQUosQ0FBUSxtRUFBUixDQUF4QjtBQUNEOztBQUVELElBQUlLLHFCQUFxQixJQUF6QixFQUErQjtBQUM3QixNQUFNTSxrQkFBa0IsSUFBSVgsR0FBSixDQUFRLG1FQUFSLENBQXhCO0FBQ0Q7O0FBRUQsSUFBSU0sbUJBQW1CLElBQXZCLEVBQTZCO0FBQzNCLE1BQU1NLGdCQUFnQixJQUFJWixHQUFKLENBQVEsaUVBQVIsQ0FBdEI7QUFDRDs7QUFFRCxJQUFJTyw0QkFBNEIsSUFBaEMsRUFBc0M7QUFDcEMsTUFBTU0seUJBQXlCLElBQUliLEdBQUosQ0FBUSwwRUFBUixDQUEvQjtBQUNEO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSVEscUJBQXFCLElBQXpCLEVBQStCO0FBQzdCLE1BQU1NLGtCQUFrQixJQUFJZCxHQUFKLENBQVEseUVBQVIsQ0FBeEI7QUFDRCxDIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2Fzc2V0cy9qcy9hcHAuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2FsbEluZm8gZnJvbSAnLi9hcHBzL2NhbGxJbmZvJ1xuaW1wb3J0IGNsaWVudEZpbHRlciBmcm9tICcuL2FwcHMvY2xpZW50RmlsdGVyJ1xuaW1wb3J0IGNyZWF0ZVNlbGxlciBmcm9tICcuL2FwcHMvY3JlYXRlU2VsbGVyJ1xuaW1wb3J0IGVkaXRTZWxsZXIgZnJvbSAnLi9hcHBzL2VkaXRTZWxsZXInXG5pbXBvcnQgZWRpdENsb3NpbmdDb250cmFjdCBmcm9tICcuL2FwcHMvZWRpdENsb3NpbmdDb250cmFjdCdcbi8vIGltcG9ydCBlZGl0Q29udHJhY3QgZnJvbSAnLi9hcHBzL2VkaXRDb250cmFjdCdcbmltcG9ydCBuZXdFeHBlZGllbnQgZnJvbSAnLi9jb21wb25lbnRzL25ld0V4cGVkaWVudCdcblxuLyoqXG4gKiBGaXJzdCB3ZSB3aWxsIGxvYWQgYWxsIG9mIHRoaXMgcHJvamVjdCdzIEphdmFTY3JpcHQgZGVwZW5kZW5jaWVzIHdoaWNoXG4gKiBpbmNsdWRlcyBWdWUgYW5kIG90aGVyIGxpYnJhcmllcy4gSXQgaXMgYSBncmVhdCBzdGFydGluZyBwb2ludCB3aGVuXG4gKiBidWlsZGluZyByb2J1c3QsIHBvd2VyZnVsIHdlYiBhcHBsaWNhdGlvbnMgdXNpbmcgVnVlIGFuZCBMYXJhdmVsLlxuICovXG5cbnJlcXVpcmUoJy4vYm9vdHN0cmFwJylcblxud2luZG93LlZ1ZSA9IHJlcXVpcmUoJ3Z1ZScpXG5cbmNvbnN0IFZ1ZSA9IHdpbmRvdy5WdWVcblxuLyoqXG4gKiBOZXh0LCB3ZSB3aWxsIGNyZWF0ZSBhIGZyZXNoIFZ1ZSBhcHBsaWNhdGlvbiBpbnN0YW5jZSBhbmQgYXR0YWNoIGl0IHRvXG4gKiB0aGUgcGFnZS4gVGhlbiwgeW91IG1heSBiZWdpbiBhZGRpbmcgY29tcG9uZW50cyB0byB0aGlzIGFwcGxpY2F0aW9uXG4gKiBvciBjdXN0b21pemUgdGhlIEphdmFTY3JpcHQgc2NhZmZvbGRpbmcgdG8gZml0IHlvdXIgdW5pcXVlIG5lZWRzLlxuICovXG5cbmNvbnN0IGNsaWVudEZpbHRlclJvb3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2xpZW50X19maWx0ZXInKSB8fCBudWxsXG5jb25zdCBjYWxsSW5mb1Jvb3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2FsbF9faW5mbycpIHx8IG51bGxcbmNvbnN0IGNyZWF0ZVNlbGxlclJvb3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY3JlYXRlX19zZWxsZXInKSB8fCBudWxsXG5jb25zdCBlZGl0U2VsbGVyUm9vdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdlZGl0X19zZWxsZXInKSB8fCBudWxsXG5jb25zdCBlZGl0Q2xvc2luZ0NvbnRyYWN0Um9vdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdlZGl0X19jbG9zaW5nLWNvbnRyYWN0JykgfHwgbnVsbFxuLy8gY29uc3QgZWRpdENvbnRyYWN0Um9vdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdlZGl0X19jb250cmFjdCcpIHx8IG51bGxcbmNvbnN0IG5ld0V4cGVkaWVudFJvb3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbmV3X19leHBlZGllbnQnKSB8fCBudWxsXG5cbmlmIChjYWxsSW5mb1Jvb3QgIT09IG51bGwpIHtcbiAgY29uc3QgJHZtQ2FsbCA9IG5ldyBWdWUoY2FsbEluZm8pXG59XG5cbmlmIChjbGllbnRGaWx0ZXJSb290KSB7XG4gIGNvbnN0ICR2bUNsaWVudEZpbHRlciA9IG5ldyBWdWUoY2xpZW50RmlsdGVyKVxufVxuXG5pZiAoY3JlYXRlU2VsbGVyUm9vdCAhPT0gbnVsbCkge1xuICBjb25zdCAkdm1DcmVhdGVTZWxsZXIgPSBuZXcgVnVlKGNyZWF0ZVNlbGxlcilcbn1cblxuaWYgKGVkaXRTZWxsZXJSb290ICE9PSBudWxsKSB7XG4gIGNvbnN0ICR2bUVkaXRTZWxsZXIgPSBuZXcgVnVlKGVkaXRTZWxsZXIpXG59XG5cbmlmIChlZGl0Q2xvc2luZ0NvbnRyYWN0Um9vdCAhPT0gbnVsbCkge1xuICBjb25zdCAkdm1FZGl0Q2xvc2luZ0NvbnRyYWN0ID0gbmV3IFZ1ZShlZGl0Q2xvc2luZ0NvbnRyYWN0KVxufVxuLy9cbi8vIGlmIChlZGl0Q29udHJhY3RSb290ICE9PSBudWxsKSB7XG4vLyAgIGNvbnN0ICR2bUVkaXRDb250cmFjdCA9IG5ldyBWdWUoZWRpdENvbnRyYWN0KVxuLy8gfVxuXG5pZiAobmV3RXhwZWRpZW50Um9vdCAhPT0gbnVsbCkge1xuICBjb25zdCAkdm1OZXdFeHBlZGllbnQgPSBuZXcgVnVlKG5ld0V4cGVkaWVudClcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3Jlc291cmNlcy9hc3NldHMvanMvYXBwLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/assets/js/app.js\n");

/***/ }),

/***/ "./resources/assets/js/apps/callInfo.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios__ = __webpack_require__(\"./node_modules/axios/index.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_axios__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_Spinner__ = __webpack_require__(\"./resources/assets/js/components/Spinner.vue\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_Spinner___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_Spinner__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_Expedient__ = __webpack_require__(\"./resources/assets/js/components/Expedient.vue\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_Expedient___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__components_Expedient__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_Client__ = __webpack_require__(\"./resources/assets/js/components/Client.vue\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_Client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__components_Client__);\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  el: '#call__info',\n  data: {\n    client: {\n      id: '',\n      firstName: '',\n      lastName: '',\n      expedient: {\n        key: '',\n        number: '',\n        year: ''\n      },\n      phoneOne: '',\n      phoneTwo: '',\n      business: '',\n      emailOne: '',\n      emailTwo: '',\n      reference: ''\n    },\n    loading: false,\n    empty: true\n  },\n  components: {\n    Spinner: __WEBPACK_IMPORTED_MODULE_1__components_Spinner___default.a,\n    Expedient: __WEBPACK_IMPORTED_MODULE_2__components_Expedient___default.a,\n    Client: __WEBPACK_IMPORTED_MODULE_3__components_Client___default.a\n  },\n  computed: {\n    hasClient: function hasClient() {\n      return this.client.phoneOne.length !== 0 || this.client.phoneTwo.length !== 0 || this.client.emailOne.length !== 0 || this.client.emailTwo.length !== 0;\n    },\n    hasExpedient: function hasExpedient() {\n      return this.client.reference.length !== 0;\n    },\n    fullName: function fullName() {\n      return this.client.firstName + ' ' + this.client.lastName;\n    },\n    expedient: function expedient() {\n      return this.client.expedient.key + '/' + this.client.expedient.number + '/' + this.client.expedient.year;\n    }\n  },\n  methods: {\n    getClientInfo: function getClientInfo() {\n      var _this = this;\n\n      this.loading = true;\n      var clientId = document.getElementById('client_id').value;\n\n      if (clientId !== '') {\n        var uri = '/api/clients/show/' + clientId;\n\n        var inicialization = {\n          withCredentials: false\n        };\n\n        __WEBPACK_IMPORTED_MODULE_0_axios___default.a.get(uri, inicialization).then(function (response) {\n          return response.data[0];\n        }).catch(function (error) {\n          return console.log(error);\n        }).then(function (response) {\n          _this.client.id = response.id || '';\n          _this.client.firstName = response.first_name || '';\n          _this.client.lastName = response.last_name || '';\n          _this.client.phoneOne = response.phone_1 || '';\n          _this.client.phoneTwo = response.phone_2 || '';\n          _this.client.business = response.business || '';\n          _this.client.emailOne = response.email_1 || '';\n          _this.client.emailTwo = response.email_2 || '';\n          _this.client.reference = response.reference || '';\n          _this.loading = false;\n          _this.empty = false;\n        });\n      } else {\n        this.client.id = '';\n        this.client.firstName = '';\n        this.client.lastName = '';\n        this.client.phoneOne = '';\n        this.client.phoneTwo = '';\n        this.client.emailOne = '';\n        this.client.emailTwo = '';\n        this.loading = false;\n        this.empty = true;\n      }\n    },\n    getExpedientInfo: function getExpedientInfo() {\n      var _this2 = this;\n\n      var expedientId = document.getElementById('internal_expedient_id').value;\n      this.loading = true;\n\n      if (expedientId !== '') {\n        var uri = '/api/internal_expedients/show/' + expedientId;\n\n        var inicialization = {\n          withCredentials: false\n        };\n\n        __WEBPACK_IMPORTED_MODULE_0_axios___default.a.get(uri, inicialization).then(function (response) {\n          return response.data[0];\n        }).catch(function (error) {\n          return console.log(error);\n        }).then(function (response) {\n          _this2.client.id = response.id || '';\n          _this2.client.expedient.key = response.expedient_key || '';\n          _this2.client.expedient.number = response.expedient_number || '';\n          _this2.client.expedient.year = response.expedient_year || '';\n          _this2.client.firstName = response.client.first_name || '';\n          _this2.client.lastName = response.client.last_name || '';\n          _this2.client.phoneOne = response.client.phone_1 || '';\n          _this2.client.phoneTwo = response.client.phone_2 || '';\n          _this2.client.business = response.client.business || '';\n          _this2.client.emailOne = response.client.email_1 || '';\n          _this2.client.emailTwo = response.client.email_2 || '';\n          _this2.client.reference = response.client.reference || '';\n          _this2.loading = false;\n          _this2.empty = false;\n        });\n      } else {\n        this.client.id = '';\n        this.client.firstName = '';\n        this.client.lastName = '';\n        this.client.phoneOne = '';\n        this.client.phoneTwo = '';\n        this.client.emailOne = '';\n        this.client.emailTwo = '';\n        this.client.reference = '';\n        this.loading = false;\n        this.empty = true;\n      }\n    }\n  },\n  created: function created() {},\n  mounted: function mounted() {\n    var withExpedient = document.getElementById('internal_expedient_id').value;\n\n    if (withExpedient !== '') {\n      this.empty = false;\n    }\n\n    if (this.empty === false) {\n      this.getExpedientInfo();\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/js/apps/callInfo.js\n");

/***/ }),

/***/ "./resources/assets/js/apps/clientFilter.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  el: '#client__filter',\n  data: {\n    filter: '',\n    first_name: '',\n    last_name: '',\n    phone_1: '',\n    phone_2: '',\n    business: '',\n    email_1: '',\n    email_2: '',\n    reference: ''\n  },\n  computed: {},\n  methods: {},\n  created: function created() {\n    var filterBy = document.getElementById('filter_by');\n    this.filter = filterBy[filterBy.selectedIndex].value;\n\n    switch (this.filter) {\n      case 'first_name':\n        var firstName = document.getElementById('first_name').value;\n        this.first_name = firstName;\n        break;\n      case 'last_name':\n        var lastName = document.getElementById('last_name').value;\n        this.last_name = lastName;\n        break;\n      case 'phone_1':\n        var phone1 = document.getElementById('phone_1').value;\n        this.phone_1 = phone1;\n        break;\n      case 'phone_2':\n        var phone2 = document.getElementById('phone_2').value;\n        this.phone_2 = phone2;\n        break;\n      case 'business':\n        var business = document.getElementById('business').value;\n        this.business = business;\n        break;\n      case 'email_1':\n        var email1 = document.getElementById('email_1').value;\n        this.email_1 = email1;\n        break;\n      case 'email_2':\n        var email2 = document.getElementById('email_2').value;\n        this.email_2 = email2;\n        break;\n      case 'reference':\n        var reference = document.getElementById('reference').value;\n        this.reference = reference;\n        break;\n      default:\n        break;\n    }\n  },\n  mounted: function mounted() {}\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2FwcHMvY2xpZW50RmlsdGVyLmpzPzk2NmEiXSwibmFtZXMiOlsiZWwiLCJkYXRhIiwiZmlsdGVyIiwiZmlyc3RfbmFtZSIsImxhc3RfbmFtZSIsInBob25lXzEiLCJwaG9uZV8yIiwiYnVzaW5lc3MiLCJlbWFpbF8xIiwiZW1haWxfMiIsInJlZmVyZW5jZSIsImNvbXB1dGVkIiwibWV0aG9kcyIsImNyZWF0ZWQiLCJmaWx0ZXJCeSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJzZWxlY3RlZEluZGV4IiwidmFsdWUiLCJmaXJzdE5hbWUiLCJsYXN0TmFtZSIsInBob25lMSIsInBob25lMiIsImVtYWlsMSIsImVtYWlsMiIsIm1vdW50ZWQiXSwibWFwcGluZ3MiOiJBQUFBLHlEQUFlO0FBQ2JBLE1BQUksaUJBRFM7QUFFYkMsUUFBTTtBQUNKQyxZQUFRLEVBREo7QUFFSkMsZ0JBQVksRUFGUjtBQUdKQyxlQUFXLEVBSFA7QUFJSkMsYUFBUyxFQUpMO0FBS0pDLGFBQVMsRUFMTDtBQU1KQyxjQUFVLEVBTk47QUFPSkMsYUFBUyxFQVBMO0FBUUpDLGFBQVMsRUFSTDtBQVNKQyxlQUFXO0FBVFAsR0FGTztBQWFiQyxZQUFVLEVBYkc7QUFjYkMsV0FBUyxFQWRJO0FBZWJDLFdBQVMsbUJBQVk7QUFDbkIsUUFBTUMsV0FBV0MsU0FBU0MsY0FBVCxDQUF3QixXQUF4QixDQUFqQjtBQUNBLFNBQUtkLE1BQUwsR0FBY1ksU0FBU0EsU0FBU0csYUFBbEIsRUFBaUNDLEtBQS9DOztBQUVBLFlBQVEsS0FBS2hCLE1BQWI7QUFDRSxXQUFLLFlBQUw7QUFDRSxZQUFNaUIsWUFBWUosU0FBU0MsY0FBVCxDQUF3QixZQUF4QixFQUFzQ0UsS0FBeEQ7QUFDQSxhQUFLZixVQUFMLEdBQWtCZ0IsU0FBbEI7QUFDQTtBQUNGLFdBQUssV0FBTDtBQUNFLFlBQU1DLFdBQVdMLFNBQVNDLGNBQVQsQ0FBd0IsV0FBeEIsRUFBcUNFLEtBQXREO0FBQ0EsYUFBS2QsU0FBTCxHQUFpQmdCLFFBQWpCO0FBQ0E7QUFDRixXQUFLLFNBQUw7QUFDRSxZQUFNQyxTQUFTTixTQUFTQyxjQUFULENBQXdCLFNBQXhCLEVBQW1DRSxLQUFsRDtBQUNBLGFBQUtiLE9BQUwsR0FBZWdCLE1BQWY7QUFDQTtBQUNGLFdBQUssU0FBTDtBQUNFLFlBQU1DLFNBQVNQLFNBQVNDLGNBQVQsQ0FBd0IsU0FBeEIsRUFBbUNFLEtBQWxEO0FBQ0EsYUFBS1osT0FBTCxHQUFlZ0IsTUFBZjtBQUNBO0FBQ0YsV0FBSyxVQUFMO0FBQ0UsWUFBTWYsV0FBV1EsU0FBU0MsY0FBVCxDQUF3QixVQUF4QixFQUFvQ0UsS0FBckQ7QUFDQSxhQUFLWCxRQUFMLEdBQWdCQSxRQUFoQjtBQUNBO0FBQ0YsV0FBSyxTQUFMO0FBQ0UsWUFBTWdCLFNBQVNSLFNBQVNDLGNBQVQsQ0FBd0IsU0FBeEIsRUFBbUNFLEtBQWxEO0FBQ0EsYUFBS1YsT0FBTCxHQUFlZSxNQUFmO0FBQ0E7QUFDRixXQUFLLFNBQUw7QUFDRSxZQUFNQyxTQUFTVCxTQUFTQyxjQUFULENBQXdCLFNBQXhCLEVBQW1DRSxLQUFsRDtBQUNBLGFBQUtULE9BQUwsR0FBZWUsTUFBZjtBQUNBO0FBQ0YsV0FBSyxXQUFMO0FBQ0UsWUFBTWQsWUFBWUssU0FBU0MsY0FBVCxDQUF3QixXQUF4QixFQUFxQ0UsS0FBdkQ7QUFDQSxhQUFLUixTQUFMLEdBQWlCQSxTQUFqQjtBQUNBO0FBQ0Y7QUFDRTtBQWxDSjtBQW9DRCxHQXZEWTtBQXdEYmUsV0FBUyxtQkFBWSxDQUFFO0FBeERWLENBQWYiLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2FwcHMvY2xpZW50RmlsdGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICBlbDogJyNjbGllbnRfX2ZpbHRlcicsXG4gIGRhdGE6IHtcbiAgICBmaWx0ZXI6ICcnLFxuICAgIGZpcnN0X25hbWU6ICcnLFxuICAgIGxhc3RfbmFtZTogJycsXG4gICAgcGhvbmVfMTogJycsXG4gICAgcGhvbmVfMjogJycsXG4gICAgYnVzaW5lc3M6ICcnLFxuICAgIGVtYWlsXzE6ICcnLFxuICAgIGVtYWlsXzI6ICcnLFxuICAgIHJlZmVyZW5jZTogJydcbiAgfSxcbiAgY29tcHV0ZWQ6IHt9LFxuICBtZXRob2RzOiB7fSxcbiAgY3JlYXRlZDogZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IGZpbHRlckJ5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZpbHRlcl9ieScpXG4gICAgdGhpcy5maWx0ZXIgPSBmaWx0ZXJCeVtmaWx0ZXJCeS5zZWxlY3RlZEluZGV4XS52YWx1ZVxuXG4gICAgc3dpdGNoICh0aGlzLmZpbHRlcikge1xuICAgICAgY2FzZSAnZmlyc3RfbmFtZSc6XG4gICAgICAgIGNvbnN0IGZpcnN0TmFtZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmaXJzdF9uYW1lJykudmFsdWVcbiAgICAgICAgdGhpcy5maXJzdF9uYW1lID0gZmlyc3ROYW1lXG4gICAgICAgIGJyZWFrXG4gICAgICBjYXNlICdsYXN0X25hbWUnOlxuICAgICAgICBjb25zdCBsYXN0TmFtZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsYXN0X25hbWUnKS52YWx1ZVxuICAgICAgICB0aGlzLmxhc3RfbmFtZSA9IGxhc3ROYW1lXG4gICAgICAgIGJyZWFrXG4gICAgICBjYXNlICdwaG9uZV8xJzpcbiAgICAgICAgY29uc3QgcGhvbmUxID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Bob25lXzEnKS52YWx1ZVxuICAgICAgICB0aGlzLnBob25lXzEgPSBwaG9uZTFcbiAgICAgICAgYnJlYWtcbiAgICAgIGNhc2UgJ3Bob25lXzInOlxuICAgICAgICBjb25zdCBwaG9uZTIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncGhvbmVfMicpLnZhbHVlXG4gICAgICAgIHRoaXMucGhvbmVfMiA9IHBob25lMlxuICAgICAgICBicmVha1xuICAgICAgY2FzZSAnYnVzaW5lc3MnOlxuICAgICAgICBjb25zdCBidXNpbmVzcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdidXNpbmVzcycpLnZhbHVlXG4gICAgICAgIHRoaXMuYnVzaW5lc3MgPSBidXNpbmVzc1xuICAgICAgICBicmVha1xuICAgICAgY2FzZSAnZW1haWxfMSc6XG4gICAgICAgIGNvbnN0IGVtYWlsMSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdlbWFpbF8xJykudmFsdWVcbiAgICAgICAgdGhpcy5lbWFpbF8xID0gZW1haWwxXG4gICAgICAgIGJyZWFrXG4gICAgICBjYXNlICdlbWFpbF8yJzpcbiAgICAgICAgY29uc3QgZW1haWwyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2VtYWlsXzInKS52YWx1ZVxuICAgICAgICB0aGlzLmVtYWlsXzIgPSBlbWFpbDJcbiAgICAgICAgYnJlYWtcbiAgICAgIGNhc2UgJ3JlZmVyZW5jZSc6XG4gICAgICAgIGNvbnN0IHJlZmVyZW5jZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZWZlcmVuY2UnKS52YWx1ZVxuICAgICAgICB0aGlzLnJlZmVyZW5jZSA9IHJlZmVyZW5jZVxuICAgICAgICBicmVha1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgYnJlYWtcbiAgICB9XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uICgpIHt9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2FwcHMvY2xpZW50RmlsdGVyLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/assets/js/apps/clientFilter.js\n");

/***/ }),

/***/ "./resources/assets/js/apps/createSeller.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(\"./node_modules/vue/dist/vue.common.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vuex__ = __webpack_require__(\"./node_modules/vuex/dist/vuex.esm.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__store_sale__ = __webpack_require__(\"./resources/assets/js/store/sale/index.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_axios__ = __webpack_require__(\"./node_modules/axios/index.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_axios__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_Spinner__ = __webpack_require__(\"./resources/assets/js/components/Spinner.vue\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_Spinner___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__components_Spinner__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_Expedient__ = __webpack_require__(\"./resources/assets/js/components/Expedient.vue\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_Expedient___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__components_Expedient__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_Client__ = __webpack_require__(\"./resources/assets/js/components/Client.vue\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_Client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__components_Client__);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue___default.a.use(__WEBPACK_IMPORTED_MODULE_1_vuex__[\"default\"]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  el: '#create__seller',\n  store: __WEBPACK_IMPORTED_MODULE_2__store_sale__[\"a\" /* default */],\n  components: {\n    Spinner: __WEBPACK_IMPORTED_MODULE_4__components_Spinner___default.a,\n    Expedient: __WEBPACK_IMPORTED_MODULE_5__components_Expedient___default.a,\n    Client: __WEBPACK_IMPORTED_MODULE_6__components_Client___default.a\n  },\n  computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_1_vuex__[\"mapState\"])(['client', 'sale', 'loading', 'empty']), Object(__WEBPACK_IMPORTED_MODULE_1_vuex__[\"mapGetters\"])(['sellerIsComplete', 'hasClient', 'hasExpedient', 'getFullName', 'getExpedient'])),\n  methods: {\n    getClientInfo: function getClientInfo() {\n      this.$store.dispatch('getClientInfo');\n    },\n    getExpedientInfo: function getExpedientInfo() {\n      var payload = document.getElementById('internal_expedient_id').value;\n      this.$store.dispatch('getExpedientInfo', payload);\n    },\n    onSubmit: function onSubmit(event) {\n      if (this.$store.state.sellerIsComplete) {\n        var form = document.getElementById('sale__seller');\n        form.submit();\n      }\n      return false;\n    },\n    setSellerDeed: function setSellerDeed(event) {\n      this.$store.commit('updateSellerDeed', document.getElementById('SD_deed').checked);\n    },\n    setSellerWater: function setSellerWater(event) {\n      this.$store.commit('updateSellerWater', document.getElementById('SD_water').checked);\n    },\n    setSellerPredial: function setSellerPredial(event) {\n      this.$store.commit('updateSellerPredial', document.getElementById('SD_predial').checked);\n    },\n    setSellerLight: function setSellerLight(event) {\n      this.$store.commit('updateSellerLight', document.getElementById('SD_light').checked);\n    },\n    setSellerBirthCertificate: function setSellerBirthCertificate(event) {\n      this.$store.commit('updateSellerBirthCertificate', document.getElementById('SD_birth_certificate').checked);\n    },\n    setSellerID: function setSellerID(event) {\n      this.$store.commit('updateSellerID', document.getElementById('SD_ID').checked);\n    },\n    setSellerCURP: function setSellerCURP(event) {\n      this.$store.commit('updateSellerCURP', document.getElementById('SD_CURP').value);\n    },\n    setSellerRFC: function setSellerRFC(event) {\n      this.$store.commit('updateSellerRFC', document.getElementById('SD_RFC').value);\n    },\n    setSellerAccountStatus: function setSellerAccountStatus(event) {\n      this.$store.commit('updateSellerAccountStatus', document.getElementById('SD_account_status').checked);\n    },\n    setSellerEmail: function setSellerEmail(event) {\n      this.$store.commit('updateSellerEmail', document.getElementById('SD_email').checked);\n    },\n    setSellerPhone: function setSellerPhone(event) {\n      this.$store.commit('updateSellerPhone', document.getElementById('SD_phone').checked);\n    },\n    setSellerCivilStatus: function setSellerCivilStatus(event) {\n      this.$store.commit('updateSellerCivilStatus', document.getElementById('SD_civil_status').value);\n    },\n    updateSellerDeed: function updateSellerDeed(event) {\n      this.$store.commit('updateSellerDeed', event.target.checked);\n    },\n    updateSellerWater: function updateSellerWater(event) {\n      this.$store.commit('updateSellerWater', event.target.checked);\n    },\n    updateSellerPredial: function updateSellerPredial(event) {\n      this.$store.commit('updateSellerPredial', event.target.checked);\n    },\n    updateSellerLight: function updateSellerLight(event) {\n      this.$store.commit('updateSellerLight', event.target.checked);\n    },\n    updateSellerBirthCertificate: function updateSellerBirthCertificate(event) {\n      this.$store.commit('updateSellerBirthCertificate', event.target.checked);\n    },\n    updateSellerID: function updateSellerID(event) {\n      this.$store.commit('updateSellerID', event.target.checked);\n    },\n    updateSellerCURP: function updateSellerCURP(event) {\n      this.$store.commit('updateSellerCURP', event.target.value);\n    },\n    updateSellerRFC: function updateSellerRFC(event) {\n      this.$store.commit('updateSellerRFC', event.target.value);\n    },\n    updateSellerAccountStatus: function updateSellerAccountStatus(event) {\n      this.$store.commit('updateSellerAccountStatus', event.target.checked);\n    },\n    updateSellerEmail: function updateSellerEmail(event) {\n      this.$store.commit('updateSellerEmail', event.target.checked);\n    },\n    updateSellerPhone: function updateSellerPhone(event) {\n      this.$store.commit('updateSellerPhone', event.target.checked);\n    },\n    updateSellerCivilStatus: function updateSellerCivilStatus(event) {\n      this.$store.commit('updateSellerCivilStatus', event.target.value);\n    }\n  },\n  created: function created() {\n    this.setSellerDeed();\n    this.setSellerWater();\n    this.setSellerPredial();\n    this.setSellerLight();\n    this.setSellerBirthCertificate();\n    this.setSellerID();\n    this.setSellerCURP();\n    this.setSellerRFC();\n    this.setSellerAccountStatus();\n    this.setSellerEmail();\n    this.setSellerPhone();\n    this.setSellerCivilStatus();\n  },\n  mounted: function mounted() {}\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/js/apps/createSeller.js\n");

/***/ }),

/***/ "./resources/assets/js/apps/editClosingContract.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(\"./node_modules/vue/dist/vue.common.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_axios__ = __webpack_require__(\"./node_modules/axios/index.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_axios__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vuex__ = __webpack_require__(\"./node_modules/vuex/dist/vuex.esm.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__store_sale_ClosingContractStore__ = __webpack_require__(\"./resources/assets/js/store/sale/ClosingContractStore.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_Spinner__ = __webpack_require__(\"./resources/assets/js/components/Spinner.vue\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_Spinner___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__components_Spinner__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_Expedient__ = __webpack_require__(\"./resources/assets/js/components/Expedient.vue\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_Expedient___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__components_Expedient__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_Client__ = __webpack_require__(\"./resources/assets/js/components/Client.vue\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_Client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__components_Client__);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue___default.a.use(__WEBPACK_IMPORTED_MODULE_2_vuex__[\"default\"]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  el: '#edit__closing-contract',\n  store: __WEBPACK_IMPORTED_MODULE_3__store_sale_ClosingContractStore__[\"a\" /* default */],\n  components: {\n    Spinner: __WEBPACK_IMPORTED_MODULE_4__components_Spinner___default.a,\n    Expedient: __WEBPACK_IMPORTED_MODULE_5__components_Expedient___default.a,\n    Client: __WEBPACK_IMPORTED_MODULE_6__components_Client___default.a\n  },\n  computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_2_vuex__[\"mapState\"])(['client', 'sale', 'loading', 'empty']), Object(__WEBPACK_IMPORTED_MODULE_2_vuex__[\"mapGetters\"])(['closingContractIsComplete', 'hasClient', 'hasExpedient', 'getFullName', 'getExpedient'])),\n  methods: {\n    getClientInfo: function getClientInfo() {\n      this.$store.dispatch('getClientInfo');\n      console.log(this.client.expedient);\n    },\n    getExpedientInfo: function getExpedientInfo() {\n      var payload = document.getElementById('internal_expedient_id').value;\n      this.$store.dispatch('getExpedientInfo', payload);\n    },\n    onSubmit: function onSubmit(event) {\n      if (this.$store.state.closingContractIsComplete) {\n        var form = document.getElementById('edit__closing-contract');\n        form.submit();\n      }\n      return false;\n    },\n    setClosingContractExclusitivyContract: function setClosingContractExclusitivyContract(event) {\n      this.$store.commit('updateClosingContractExclusivityContract', document.getElementById('SCC_exclusivity_contract').value);\n    },\n    setClosingContractCommercialValuation: function setClosingContractCommercialValuation(event) {\n      this.$store.commit('updateClosingContractCommercialValuation', document.getElementById('SCC_commercial_valuation').value);\n    },\n    setClosingContractPublication: function setClosingContractPublication(event) {\n      this.$store.commit('updateClosingContractPublication', document.getElementById('SCC_publication').value);\n    },\n    setClosingContractDataSheet: function setClosingContractDataSheet(event) {\n      this.$store.commit('updateClosingContractDataSheet', document.getElementById('SCC_data_sheet').value);\n    },\n    setClosingContractObservations: function setClosingContractObservations(event) {\n      this.$store.commit('updateClosingContractObservations', document.getElementById('SCC_closing_contract_observations').value);\n    }\n  },\n  created: function created() {\n    this.setClosingContractExclusitivyContract();\n    this.setClosingContractCommercialValuation();\n    this.setClosingContractPublication();\n    this.setClosingContractDataSheet();\n    this.setClosingContractObservations();\n  },\n  beforeMounted: function beforeMounted() {\n    this.getClientInfo();\n  },\n  mounted: function mounted() {}\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2FwcHMvZWRpdENsb3NpbmdDb250cmFjdC5qcz9hODRhIl0sIm5hbWVzIjpbIlZ1ZSIsInVzZSIsImVsIiwic3RvcmUiLCJjb21wb25lbnRzIiwiU3Bpbm5lciIsIkV4cGVkaWVudCIsIkNsaWVudCIsImNvbXB1dGVkIiwibWFwU3RhdGUiLCJtYXBHZXR0ZXJzIiwibWV0aG9kcyIsImdldENsaWVudEluZm8iLCIkc3RvcmUiLCJkaXNwYXRjaCIsImNvbnNvbGUiLCJsb2ciLCJjbGllbnQiLCJleHBlZGllbnQiLCJnZXRFeHBlZGllbnRJbmZvIiwicGF5bG9hZCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJ2YWx1ZSIsIm9uU3VibWl0IiwiZXZlbnQiLCJzdGF0ZSIsImNsb3NpbmdDb250cmFjdElzQ29tcGxldGUiLCJmb3JtIiwic3VibWl0Iiwic2V0Q2xvc2luZ0NvbnRyYWN0RXhjbHVzaXRpdnlDb250cmFjdCIsImNvbW1pdCIsInNldENsb3NpbmdDb250cmFjdENvbW1lcmNpYWxWYWx1YXRpb24iLCJzZXRDbG9zaW5nQ29udHJhY3RQdWJsaWNhdGlvbiIsInNldENsb3NpbmdDb250cmFjdERhdGFTaGVldCIsInNldENsb3NpbmdDb250cmFjdE9ic2VydmF0aW9ucyIsImNyZWF0ZWQiLCJiZWZvcmVNb3VudGVkIiwibW91bnRlZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwyQ0FBQUEsQ0FBSUMsR0FBSixDQUFRLDZDQUFSOztBQUVBLHlEQUFlO0FBQ2JDLE1BQUkseUJBRFM7QUFFYkMsU0FBQSxpRkFGYTtBQUdiQyxjQUFZO0FBQ1ZDLGFBQUEsMkRBRFU7QUFFVkMsZUFBQSw2REFGVTtBQUdWQyxZQUFBLDBEQUFBQTtBQUhVLEdBSEM7QUFRYkMseUJBQ0ssc0RBQUFDLENBQVMsQ0FDVixRQURVLEVBRVYsTUFGVSxFQUdWLFNBSFUsRUFJVixPQUpVLENBQVQsQ0FETCxFQU9LLHdEQUFBQyxDQUFXLENBQ1osMkJBRFksRUFFWixXQUZZLEVBR1osY0FIWSxFQUlaLGFBSlksRUFLWixjQUxZLENBQVgsQ0FQTCxDQVJhO0FBdUJiQyxXQUFTO0FBQ1BDLGlCQURPLDJCQUNTO0FBQ2QsV0FBS0MsTUFBTCxDQUFZQyxRQUFaLENBQXFCLGVBQXJCO0FBQ0FDLGNBQVFDLEdBQVIsQ0FBWSxLQUFLQyxNQUFMLENBQVlDLFNBQXhCO0FBQ0QsS0FKTTtBQUtQQyxvQkFMTyw4QkFLWTtBQUNqQixVQUFNQyxVQUFVQyxTQUFTQyxjQUFULENBQXdCLHVCQUF4QixFQUFpREMsS0FBakU7QUFDQSxXQUFLVixNQUFMLENBQVlDLFFBQVosQ0FBcUIsa0JBQXJCLEVBQXlDTSxPQUF6QztBQUNELEtBUk07QUFTUEksWUFUTyxvQkFTRUMsS0FURixFQVNTO0FBQ2QsVUFBSSxLQUFLWixNQUFMLENBQVlhLEtBQVosQ0FBa0JDLHlCQUF0QixFQUFpRDtBQUMvQyxZQUFJQyxPQUFPUCxTQUFTQyxjQUFULENBQXdCLHdCQUF4QixDQUFYO0FBQ0FNLGFBQUtDLE1BQUw7QUFDRDtBQUNELGFBQU8sS0FBUDtBQUNELEtBZk07QUFnQlBDLHlDQWhCTyxpREFnQitCTCxLQWhCL0IsRUFnQnNDO0FBQzNDLFdBQUtaLE1BQUwsQ0FBWWtCLE1BQVosQ0FBbUIsMENBQW5CLEVBQStEVixTQUFTQyxjQUFULENBQXdCLDBCQUF4QixFQUFvREMsS0FBbkg7QUFDRCxLQWxCTTtBQW1CUFMseUNBbkJPLGlEQW1CK0JQLEtBbkIvQixFQW1Cc0M7QUFDM0MsV0FBS1osTUFBTCxDQUFZa0IsTUFBWixDQUFtQiwwQ0FBbkIsRUFBK0RWLFNBQVNDLGNBQVQsQ0FBd0IsMEJBQXhCLEVBQW9EQyxLQUFuSDtBQUNELEtBckJNO0FBc0JQVSxpQ0F0Qk8seUNBc0J1QlIsS0F0QnZCLEVBc0I4QjtBQUNuQyxXQUFLWixNQUFMLENBQVlrQixNQUFaLENBQW1CLGtDQUFuQixFQUF1RFYsU0FBU0MsY0FBVCxDQUF3QixpQkFBeEIsRUFBMkNDLEtBQWxHO0FBQ0QsS0F4Qk07QUF5QlBXLCtCQXpCTyx1Q0F5QnFCVCxLQXpCckIsRUF5QjRCO0FBQ2pDLFdBQUtaLE1BQUwsQ0FBWWtCLE1BQVosQ0FBbUIsZ0NBQW5CLEVBQXFEVixTQUFTQyxjQUFULENBQXdCLGdCQUF4QixFQUEwQ0MsS0FBL0Y7QUFDRCxLQTNCTTtBQTRCUFksa0NBNUJPLDBDQTRCd0JWLEtBNUJ4QixFQTRCK0I7QUFDcEMsV0FBS1osTUFBTCxDQUFZa0IsTUFBWixDQUFtQixtQ0FBbkIsRUFBd0RWLFNBQVNDLGNBQVQsQ0FBd0IsbUNBQXhCLEVBQTZEQyxLQUFySDtBQUNEO0FBOUJNLEdBdkJJO0FBdURiYSxTQXZEYSxxQkF1REg7QUFDUixTQUFLTixxQ0FBTDtBQUNBLFNBQUtFLHFDQUFMO0FBQ0EsU0FBS0MsNkJBQUw7QUFDQSxTQUFLQywyQkFBTDtBQUNBLFNBQUtDLDhCQUFMO0FBQ0QsR0E3RFk7QUE4RGJFLGVBOURhLDJCQThERztBQUNkLFNBQUt6QixhQUFMO0FBQ0QsR0FoRVk7QUFpRWIwQixTQWpFYSxxQkFpRUgsQ0FFVDtBQW5FWSxDQUFmIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2Fzc2V0cy9qcy9hcHBzL2VkaXRDbG9zaW5nQ29udHJhY3QuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVnVlIGZyb20gJ3Z1ZSdcbmltcG9ydCBheGlvcyBmcm9tICdheGlvcydcbmltcG9ydCBWdWV4LCB7IG1hcFN0YXRlLCBtYXBHZXR0ZXJzLCBtYXBBY3Rpb25zIH0gZnJvbSAndnVleCdcbmltcG9ydCBzdG9yZSBmcm9tICcuLi9zdG9yZS9zYWxlL0Nsb3NpbmdDb250cmFjdFN0b3JlJ1xuaW1wb3J0IFNwaW5uZXIgZnJvbSAnLi4vY29tcG9uZW50cy9TcGlubmVyJ1xuaW1wb3J0IEV4cGVkaWVudCBmcm9tICcuLi9jb21wb25lbnRzL0V4cGVkaWVudCdcbmltcG9ydCBDbGllbnQgZnJvbSAnLi4vY29tcG9uZW50cy9DbGllbnQnXG5cblZ1ZS51c2UoVnVleClcblxuZXhwb3J0IGRlZmF1bHQge1xuICBlbDogJyNlZGl0X19jbG9zaW5nLWNvbnRyYWN0JyxcbiAgc3RvcmUsXG4gIGNvbXBvbmVudHM6IHtcbiAgICBTcGlubmVyLFxuICAgIEV4cGVkaWVudCxcbiAgICBDbGllbnRcbiAgfSxcbiAgY29tcHV0ZWQ6IHtcbiAgICAuLi5tYXBTdGF0ZShbXG4gICAgICAnY2xpZW50JyxcbiAgICAgICdzYWxlJyxcbiAgICAgICdsb2FkaW5nJyxcbiAgICAgICdlbXB0eSdcbiAgICBdKSxcbiAgICAuLi5tYXBHZXR0ZXJzKFtcbiAgICAgICdjbG9zaW5nQ29udHJhY3RJc0NvbXBsZXRlJyxcbiAgICAgICdoYXNDbGllbnQnLFxuICAgICAgJ2hhc0V4cGVkaWVudCcsXG4gICAgICAnZ2V0RnVsbE5hbWUnLFxuICAgICAgJ2dldEV4cGVkaWVudCdcbiAgICBdKSxcbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIGdldENsaWVudEluZm8oKSB7XG4gICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZ2V0Q2xpZW50SW5mbycpXG4gICAgICBjb25zb2xlLmxvZyh0aGlzLmNsaWVudC5leHBlZGllbnQpXG4gICAgfSxcbiAgICBnZXRFeHBlZGllbnRJbmZvKCkge1xuICAgICAgY29uc3QgcGF5bG9hZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbnRlcm5hbF9leHBlZGllbnRfaWQnKS52YWx1ZVxuICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2dldEV4cGVkaWVudEluZm8nLCBwYXlsb2FkKVxuICAgIH0sXG4gICAgb25TdWJtaXQoZXZlbnQpIHtcbiAgICAgIGlmICh0aGlzLiRzdG9yZS5zdGF0ZS5jbG9zaW5nQ29udHJhY3RJc0NvbXBsZXRlKSB7XG4gICAgICAgIGxldCBmb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2VkaXRfX2Nsb3NpbmctY29udHJhY3QnKVxuICAgICAgICBmb3JtLnN1Ym1pdCgpXG4gICAgICB9XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9LFxuICAgIHNldENsb3NpbmdDb250cmFjdEV4Y2x1c2l0aXZ5Q29udHJhY3QoZXZlbnQpIHtcbiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgndXBkYXRlQ2xvc2luZ0NvbnRyYWN0RXhjbHVzaXZpdHlDb250cmFjdCcsIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdTQ0NfZXhjbHVzaXZpdHlfY29udHJhY3QnKS52YWx1ZSlcbiAgICB9LFxuICAgIHNldENsb3NpbmdDb250cmFjdENvbW1lcmNpYWxWYWx1YXRpb24oZXZlbnQpIHtcbiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgndXBkYXRlQ2xvc2luZ0NvbnRyYWN0Q29tbWVyY2lhbFZhbHVhdGlvbicsIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdTQ0NfY29tbWVyY2lhbF92YWx1YXRpb24nKS52YWx1ZSlcbiAgICB9LFxuICAgIHNldENsb3NpbmdDb250cmFjdFB1YmxpY2F0aW9uKGV2ZW50KSB7XG4gICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3VwZGF0ZUNsb3NpbmdDb250cmFjdFB1YmxpY2F0aW9uJywgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ1NDQ19wdWJsaWNhdGlvbicpLnZhbHVlKVxuICAgIH0sXG4gICAgc2V0Q2xvc2luZ0NvbnRyYWN0RGF0YVNoZWV0KGV2ZW50KSB7XG4gICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3VwZGF0ZUNsb3NpbmdDb250cmFjdERhdGFTaGVldCcsIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdTQ0NfZGF0YV9zaGVldCcpLnZhbHVlKVxuICAgIH0sXG4gICAgc2V0Q2xvc2luZ0NvbnRyYWN0T2JzZXJ2YXRpb25zKGV2ZW50KSB7XG4gICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3VwZGF0ZUNsb3NpbmdDb250cmFjdE9ic2VydmF0aW9ucycsIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdTQ0NfY2xvc2luZ19jb250cmFjdF9vYnNlcnZhdGlvbnMnKS52YWx1ZSlcbiAgICB9XG4gIH0sXG4gIGNyZWF0ZWQoKSB7XG4gICAgdGhpcy5zZXRDbG9zaW5nQ29udHJhY3RFeGNsdXNpdGl2eUNvbnRyYWN0KClcbiAgICB0aGlzLnNldENsb3NpbmdDb250cmFjdENvbW1lcmNpYWxWYWx1YXRpb24oKVxuICAgIHRoaXMuc2V0Q2xvc2luZ0NvbnRyYWN0UHVibGljYXRpb24oKVxuICAgIHRoaXMuc2V0Q2xvc2luZ0NvbnRyYWN0RGF0YVNoZWV0KClcbiAgICB0aGlzLnNldENsb3NpbmdDb250cmFjdE9ic2VydmF0aW9ucygpXG4gIH0sXG4gIGJlZm9yZU1vdW50ZWQoKSB7XG4gICAgdGhpcy5nZXRDbGllbnRJbmZvKClcbiAgfSxcbiAgbW91bnRlZCgpIHtcblxuICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2FwcHMvZWRpdENsb3NpbmdDb250cmFjdC5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/assets/js/apps/editClosingContract.js\n");

/***/ }),

/***/ "./resources/assets/js/apps/editSeller.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(\"./node_modules/vue/dist/vue.common.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vuex__ = __webpack_require__(\"./node_modules/vuex/dist/vuex.esm.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__store_sale__ = __webpack_require__(\"./resources/assets/js/store/sale/index.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_axios__ = __webpack_require__(\"./node_modules/axios/index.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_axios__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_Spinner__ = __webpack_require__(\"./resources/assets/js/components/Spinner.vue\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_Spinner___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__components_Spinner__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_Expedient__ = __webpack_require__(\"./resources/assets/js/components/Expedient.vue\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_Expedient___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__components_Expedient__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_Client__ = __webpack_require__(\"./resources/assets/js/components/Client.vue\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_Client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__components_Client__);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  el: '#edit__seller',\n  store: __WEBPACK_IMPORTED_MODULE_2__store_sale__[\"a\" /* default */],\n  components: {\n    Spinner: __WEBPACK_IMPORTED_MODULE_4__components_Spinner___default.a,\n    Expedient: __WEBPACK_IMPORTED_MODULE_5__components_Expedient___default.a,\n    Client: __WEBPACK_IMPORTED_MODULE_6__components_Client___default.a\n  },\n  computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_1_vuex__[\"mapState\"])(['client', 'sale', 'loading', 'empty']), Object(__WEBPACK_IMPORTED_MODULE_1_vuex__[\"mapGetters\"])(['sellerIsComplete', 'hasClient', 'hasExpedient', 'getFullName', 'getExpedient'])),\n  methods: {\n    getClientInfo: function getClientInfo() {\n      this.$store.dispatch('getClientInfo');\n      console.log(this.client.expedient);\n    },\n    getExpedientInfo: function getExpedientInfo() {\n      var payload = document.getElementById('internal_expedient_id').value;\n      this.$store.dispatch('getExpedientInfo', payload);\n    },\n    onSubmit: function onSubmit(event) {\n      if (this.$store.state.sellerIsComplete) {\n        var form = document.getElementById('sale__seller');\n        form.submit();\n      }\n      return false;\n    },\n    setSellerDeed: function setSellerDeed(event) {\n      this.$store.commit('updateSellerDeed', document.getElementById('SD_deed').checked);\n    },\n    setSellerWater: function setSellerWater(event) {\n      this.$store.commit('updateSellerWater', document.getElementById('SD_water').checked);\n    },\n    setSellerPredial: function setSellerPredial(event) {\n      this.$store.commit('updateSellerPredial', document.getElementById('SD_predial').checked);\n    },\n    setSellerLight: function setSellerLight(event) {\n      this.$store.commit('updateSellerLight', document.getElementById('SD_light').checked);\n    },\n    setSellerBirthCertificate: function setSellerBirthCertificate(event) {\n      this.$store.commit('updateSellerBirthCertificate', document.getElementById('SD_birth_certificate').checked);\n    },\n    setSellerID: function setSellerID(event) {\n      this.$store.commit('updateSellerID', document.getElementById('SD_ID').checked);\n    },\n    setSellerCURP: function setSellerCURP(event) {\n      this.$store.commit('updateSellerCURP', document.getElementById('SD_CURP').value);\n    },\n    setSellerRFC: function setSellerRFC(event) {\n      this.$store.commit('updateSellerRFC', document.getElementById('SD_RFC').value);\n    },\n    setSellerAccountStatus: function setSellerAccountStatus(event) {\n      this.$store.commit('updateSellerAccountStatus', document.getElementById('SD_account_status').checked);\n    },\n    setSellerEmail: function setSellerEmail(event) {\n      this.$store.commit('updateSellerEmail', document.getElementById('SD_email').checked);\n    },\n    setSellerPhone: function setSellerPhone(event) {\n      this.$store.commit('updateSellerPhone', document.getElementById('SD_phone').checked);\n    },\n    setSellerCivilStatus: function setSellerCivilStatus(event) {\n      this.$store.commit('updateSellerCivilStatus', document.getElementById('SD_civil_status').value);\n    },\n    updateSellerDeed: function updateSellerDeed(event) {\n      this.$store.commit('updateSellerDeed', event.target.checked);\n    },\n    updateSellerWater: function updateSellerWater(event) {\n      this.$store.commit('updateSellerWater', event.target.checked);\n    },\n    updateSellerPredial: function updateSellerPredial(event) {\n      this.$store.commit('updateSellerPredial', event.target.checked);\n    },\n    updateSellerLight: function updateSellerLight(event) {\n      this.$store.commit('updateSellerLight', event.target.checked);\n    },\n    updateSellerBirthCertificate: function updateSellerBirthCertificate(event) {\n      this.$store.commit('updateSellerBirthCertificate', event.target.checked);\n    },\n    updateSellerID: function updateSellerID(event) {\n      this.$store.commit('updateSellerID', event.target.checked);\n    },\n    updateSellerCURP: function updateSellerCURP(event) {\n      this.$store.commit('updateSellerCURP', event.target.value);\n    },\n    updateSellerRFC: function updateSellerRFC(event) {\n      this.$store.commit('updateSellerRFC', event.target.value);\n    },\n    updateSellerAccountStatus: function updateSellerAccountStatus(event) {\n      this.$store.commit('updateSellerAccountStatus', event.target.checked);\n    },\n    updateSellerEmail: function updateSellerEmail(event) {\n      this.$store.commit('updateSellerEmail', event.target.checked);\n    },\n    updateSellerPhone: function updateSellerPhone(event) {\n      this.$store.commit('updateSellerPhone', event.target.checked);\n    },\n    updateSellerCivilStatus: function updateSellerCivilStatus(event) {\n      this.$store.commit('updateSellerCivilStatus', event.target.value);\n    }\n  },\n  created: function created() {\n    this.setSellerDeed();\n    this.setSellerWater();\n    this.setSellerPredial();\n    this.setSellerLight();\n    this.setSellerBirthCertificate();\n    this.setSellerID();\n    this.setSellerCURP();\n    this.setSellerRFC();\n    this.setSellerAccountStatus();\n    this.setSellerEmail();\n    this.setSellerPhone();\n    this.setSellerCivilStatus();\n  },\n  beforeMounted: function beforeMounted() {\n    this.getClientInfo();\n  },\n  mounted: function mounted() {}\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/js/apps/editSeller.js\n");

/***/ }),

/***/ "./resources/assets/js/bootstrap.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function(__webpack_provided_window_dot__, __webpack_provided_window_dot_jQuery, __webpack_provided_window_dot_axios) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_laravel_echo__ = __webpack_require__(\"./node_modules/laravel-echo/dist/echo.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_laravel_echo___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_laravel_echo__);\n\n__webpack_provided_window_dot__ = __webpack_require__(\"./node_modules/lodash/lodash.js\");\n\n/**\n * We'll load jQuery and the Bootstrap jQuery plugin which provides support\n * for JavaScript based Bootstrap features such as modals and tabs. This\n * code may be modified to fit the specific needs of your application.\n */\n\ntry {\n  window.$ = __webpack_provided_window_dot_jQuery = __webpack_require__(\"./node_modules/jquery/dist/jquery.js\");\n\n  __webpack_require__(\"./node_modules/bootstrap-sass/assets/javascripts/bootstrap.js\");\n} catch (e) {}\n\n/**\n * We'll load the axios HTTP library which allows us to easily issue requests\n * to our Laravel back-end. This library automatically handles sending the\n * CSRF token as a header based on the value of the \"XSRF\" token cookie.\n */\n\n__webpack_provided_window_dot_axios = __webpack_require__(\"./node_modules/axios/index.js\");\n\n__webpack_provided_window_dot_axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n\n/**\n * Next we will register the CSRF Token as a common header with Axios so that\n * all outgoing HTTP requests automatically have it attached. This is just\n * a simple convenience so we don't have to attach every token manually.\n */\n\nvar token = document.head.querySelector('meta[name=\"csrf-token\"]');\n\nif (token) {\n  __webpack_provided_window_dot_axios.defaults.headers.common['X-CSRF-TOKEN'] = token.content;\n} else {\n  console.error('CSRF token not found: https://laravel.com/docs/csrf#csrf-x-csrf-token');\n}\n\n/**\n * Echo exposes an expressive API for subscribing to channels and listening\n * for events that are broadcast by Laravel. Echo and event broadcasting\n * allows your team to easily build robust real-time web applications.\n */\n\n\n\nwindow.Pusher = __webpack_require__(\"./node_modules/pusher-js/dist/web/pusher.js\");\n\nwindow.Echo = new __WEBPACK_IMPORTED_MODULE_0_laravel_echo___default.a({\n  broadcaster: 'pusher',\n  key: '65f03f2deee1a063c898'\n});\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(\"./node_modules/lodash/lodash.js\"), __webpack_require__(\"./node_modules/jquery/dist/jquery.js\"), __webpack_require__(\"./node_modules/axios/index.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2Jvb3RzdHJhcC5qcz81OTExIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJ3aW5kb3ciLCIkIiwiZSIsImRlZmF1bHRzIiwiaGVhZGVycyIsImNvbW1vbiIsInRva2VuIiwiZG9jdW1lbnQiLCJoZWFkIiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnQiLCJjb25zb2xlIiwiZXJyb3IiLCJQdXNoZXIiLCJFY2hvIiwiYnJvYWRjYXN0ZXIiLCJrZXkiXSwibWFwcGluZ3MiOiI7Ozs7QUFDQSxrQ0FBVyxtQkFBQUEsQ0FBUSxpQ0FBUixDQUFYOztBQUVBOzs7Ozs7QUFNQSxJQUFJO0FBQ0FDLFNBQU9DLENBQVAsR0FBVyx1Q0FBZ0IsbUJBQUFGLENBQVEsc0NBQVIsQ0FBM0I7O0FBRUFBLEVBQUEsbUJBQUFBLENBQVEsK0RBQVI7QUFDSCxDQUpELENBSUUsT0FBT0csQ0FBUCxFQUFVLENBQUU7O0FBRWQ7Ozs7OztBQU1BLHNDQUFlLG1CQUFBSCxDQUFRLCtCQUFSLENBQWY7O0FBRUEsb0NBQWFJLFFBQWIsQ0FBc0JDLE9BQXRCLENBQThCQyxNQUE5QixDQUFxQyxrQkFBckMsSUFBMkQsZ0JBQTNEOztBQUVBOzs7Ozs7QUFNQSxJQUFJQyxRQUFRQyxTQUFTQyxJQUFULENBQWNDLGFBQWQsQ0FBNEIseUJBQTVCLENBQVo7O0FBRUEsSUFBSUgsS0FBSixFQUFXO0FBQ1BOLEVBQUEsb0NBQWFHLFFBQWIsQ0FBc0JDLE9BQXRCLENBQThCQyxNQUE5QixDQUFxQyxjQUFyQyxJQUF1REMsTUFBTUksT0FBN0Q7QUFDSCxDQUZELE1BRU87QUFDSEMsVUFBUUMsS0FBUixDQUFjLHVFQUFkO0FBQ0g7O0FBRUQ7Ozs7OztBQU1BOztBQUVBWixPQUFPYSxNQUFQLEdBQWdCLG1CQUFBZCxDQUFRLDZDQUFSLENBQWhCOztBQUVBQyxPQUFPYyxJQUFQLEdBQWMsSUFBSSxvREFBSixDQUFTO0FBQ3JCQyxlQUFhLFFBRFE7QUFFckJDLE9BQUs7QUFGZ0IsQ0FBVCxDQUFkLEMiLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2Jvb3RzdHJhcC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxud2luZG93Ll8gPSByZXF1aXJlKCdsb2Rhc2gnKTtcblxuLyoqXG4gKiBXZSdsbCBsb2FkIGpRdWVyeSBhbmQgdGhlIEJvb3RzdHJhcCBqUXVlcnkgcGx1Z2luIHdoaWNoIHByb3ZpZGVzIHN1cHBvcnRcbiAqIGZvciBKYXZhU2NyaXB0IGJhc2VkIEJvb3RzdHJhcCBmZWF0dXJlcyBzdWNoIGFzIG1vZGFscyBhbmQgdGFicy4gVGhpc1xuICogY29kZSBtYXkgYmUgbW9kaWZpZWQgdG8gZml0IHRoZSBzcGVjaWZpYyBuZWVkcyBvZiB5b3VyIGFwcGxpY2F0aW9uLlxuICovXG5cbnRyeSB7XG4gICAgd2luZG93LiQgPSB3aW5kb3cualF1ZXJ5ID0gcmVxdWlyZSgnanF1ZXJ5Jyk7XG5cbiAgICByZXF1aXJlKCdib290c3RyYXAtc2FzcycpO1xufSBjYXRjaCAoZSkge31cblxuLyoqXG4gKiBXZSdsbCBsb2FkIHRoZSBheGlvcyBIVFRQIGxpYnJhcnkgd2hpY2ggYWxsb3dzIHVzIHRvIGVhc2lseSBpc3N1ZSByZXF1ZXN0c1xuICogdG8gb3VyIExhcmF2ZWwgYmFjay1lbmQuIFRoaXMgbGlicmFyeSBhdXRvbWF0aWNhbGx5IGhhbmRsZXMgc2VuZGluZyB0aGVcbiAqIENTUkYgdG9rZW4gYXMgYSBoZWFkZXIgYmFzZWQgb24gdGhlIHZhbHVlIG9mIHRoZSBcIlhTUkZcIiB0b2tlbiBjb29raWUuXG4gKi9cblxud2luZG93LmF4aW9zID0gcmVxdWlyZSgnYXhpb3MnKTtcblxud2luZG93LmF4aW9zLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uWydYLVJlcXVlc3RlZC1XaXRoJ10gPSAnWE1MSHR0cFJlcXVlc3QnO1xuXG4vKipcbiAqIE5leHQgd2Ugd2lsbCByZWdpc3RlciB0aGUgQ1NSRiBUb2tlbiBhcyBhIGNvbW1vbiBoZWFkZXIgd2l0aCBBeGlvcyBzbyB0aGF0XG4gKiBhbGwgb3V0Z29pbmcgSFRUUCByZXF1ZXN0cyBhdXRvbWF0aWNhbGx5IGhhdmUgaXQgYXR0YWNoZWQuIFRoaXMgaXMganVzdFxuICogYSBzaW1wbGUgY29udmVuaWVuY2Ugc28gd2UgZG9uJ3QgaGF2ZSB0byBhdHRhY2ggZXZlcnkgdG9rZW4gbWFudWFsbHkuXG4gKi9cblxubGV0IHRva2VuID0gZG9jdW1lbnQuaGVhZC5xdWVyeVNlbGVjdG9yKCdtZXRhW25hbWU9XCJjc3JmLXRva2VuXCJdJyk7XG5cbmlmICh0b2tlbikge1xuICAgIHdpbmRvdy5heGlvcy5kZWZhdWx0cy5oZWFkZXJzLmNvbW1vblsnWC1DU1JGLVRPS0VOJ10gPSB0b2tlbi5jb250ZW50O1xufSBlbHNlIHtcbiAgICBjb25zb2xlLmVycm9yKCdDU1JGIHRva2VuIG5vdCBmb3VuZDogaHR0cHM6Ly9sYXJhdmVsLmNvbS9kb2NzL2NzcmYjY3NyZi14LWNzcmYtdG9rZW4nKTtcbn1cblxuLyoqXG4gKiBFY2hvIGV4cG9zZXMgYW4gZXhwcmVzc2l2ZSBBUEkgZm9yIHN1YnNjcmliaW5nIHRvIGNoYW5uZWxzIGFuZCBsaXN0ZW5pbmdcbiAqIGZvciBldmVudHMgdGhhdCBhcmUgYnJvYWRjYXN0IGJ5IExhcmF2ZWwuIEVjaG8gYW5kIGV2ZW50IGJyb2FkY2FzdGluZ1xuICogYWxsb3dzIHlvdXIgdGVhbSB0byBlYXNpbHkgYnVpbGQgcm9idXN0IHJlYWwtdGltZSB3ZWIgYXBwbGljYXRpb25zLlxuICovXG5cbmltcG9ydCBFY2hvIGZyb20gJ2xhcmF2ZWwtZWNobydcblxud2luZG93LlB1c2hlciA9IHJlcXVpcmUoJ3B1c2hlci1qcycpO1xuXG53aW5kb3cuRWNobyA9IG5ldyBFY2hvKHtcbiAgYnJvYWRjYXN0ZXI6ICdwdXNoZXInLFxuICBrZXk6ICc2NWYwM2YyZGVlZTFhMDYzYzg5OCdcbn0pO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcmVzb3VyY2VzL2Fzc2V0cy9qcy9ib290c3RyYXAuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/assets/js/bootstrap.js\n");

/***/ }),

/***/ "./resources/assets/js/components/Client.vue":
/***/ (function(module, exports, __webpack_require__) {

eval("var disposed = false\nvar normalizeComponent = __webpack_require__(\"./node_modules/vue-loader/lib/component-normalizer.js\")\n/* script */\nvar __vue_script__ = __webpack_require__(\"./node_modules/babel-loader/lib/index.js?{\\\"cacheDirectory\\\":true,\\\"presets\\\":[[\\\"env\\\",{\\\"modules\\\":false,\\\"targets\\\":{\\\"browsers\\\":[\\\"> 2%\\\"],\\\"uglify\\\":true}}]],\\\"plugins\\\":[\\\"transform-object-rest-spread\\\",[\\\"transform-runtime\\\",{\\\"polyfill\\\":false,\\\"helpers\\\":false}],\\\"transform-object-rest-spread\\\"]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/assets/js/components/Client.vue\")\n/* template */\nvar __vue_template__ = __webpack_require__(\"./node_modules/vue-loader/lib/template-compiler/index.js?{\\\"id\\\":\\\"data-v-2e2ca97c\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/assets/js/components/Client.vue\")\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"resources/assets/js/components/Client.vue\"\n\n/* hot reload */\nif (false) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-2e2ca97c\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-2e2ca97c\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nmodule.exports = Component.exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2NvbXBvbmVudHMvQ2xpZW50LnZ1ZT8wZWRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBLHdjQUF1VDtBQUN2VDtBQUNBLGdTQUFnTDtBQUNoTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsWUFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7O0FBRUQiLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2NvbXBvbmVudHMvQ2xpZW50LnZ1ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBkaXNwb3NlZCA9IGZhbHNlXG52YXIgbm9ybWFsaXplQ29tcG9uZW50ID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvY29tcG9uZW50LW5vcm1hbGl6ZXJcIilcbi8qIHNjcmlwdCAqL1xudmFyIF9fdnVlX3NjcmlwdF9fID0gcmVxdWlyZShcIiEhYmFiZWwtbG9hZGVyP3tcXFwiY2FjaGVEaXJlY3RvcnlcXFwiOnRydWUsXFxcInByZXNldHNcXFwiOltbXFxcImVudlxcXCIse1xcXCJtb2R1bGVzXFxcIjpmYWxzZSxcXFwidGFyZ2V0c1xcXCI6e1xcXCJicm93c2Vyc1xcXCI6W1xcXCI+IDIlXFxcIl0sXFxcInVnbGlmeVxcXCI6dHJ1ZX19XV0sXFxcInBsdWdpbnNcXFwiOltcXFwidHJhbnNmb3JtLW9iamVjdC1yZXN0LXNwcmVhZFxcXCIsW1xcXCJ0cmFuc2Zvcm0tcnVudGltZVxcXCIse1xcXCJwb2x5ZmlsbFxcXCI6ZmFsc2UsXFxcImhlbHBlcnNcXFwiOmZhbHNlfV0sXFxcInRyYW5zZm9ybS1vYmplY3QtcmVzdC1zcHJlYWRcXFwiXX0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9c2NyaXB0JmluZGV4PTAhLi9DbGllbnQudnVlXCIpXG4vKiB0ZW1wbGF0ZSAqL1xudmFyIF9fdnVlX3RlbXBsYXRlX18gPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvdGVtcGxhdGUtY29tcGlsZXIvaW5kZXg/e1xcXCJpZFxcXCI6XFxcImRhdGEtdi0yZTJjYTk3Y1xcXCIsXFxcImhhc1Njb3BlZFxcXCI6ZmFsc2UsXFxcImJ1YmxlXFxcIjp7XFxcInRyYW5zZm9ybXNcXFwiOnt9fX0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9dGVtcGxhdGUmaW5kZXg9MCEuL0NsaWVudC52dWVcIilcbi8qIHRlbXBsYXRlIGZ1bmN0aW9uYWwgKi9cbnZhciBfX3Z1ZV90ZW1wbGF0ZV9mdW5jdGlvbmFsX18gPSBmYWxzZVxuLyogc3R5bGVzICovXG52YXIgX192dWVfc3R5bGVzX18gPSBudWxsXG4vKiBzY29wZUlkICovXG52YXIgX192dWVfc2NvcGVJZF9fID0gbnVsbFxuLyogbW9kdWxlSWRlbnRpZmllciAoc2VydmVyIG9ubHkpICovXG52YXIgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyA9IG51bGxcbnZhciBDb21wb25lbnQgPSBub3JtYWxpemVDb21wb25lbnQoXG4gIF9fdnVlX3NjcmlwdF9fLFxuICBfX3Z1ZV90ZW1wbGF0ZV9fLFxuICBfX3Z1ZV90ZW1wbGF0ZV9mdW5jdGlvbmFsX18sXG4gIF9fdnVlX3N0eWxlc19fLFxuICBfX3Z1ZV9zY29wZUlkX18sXG4gIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX19cbilcbkNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwicmVzb3VyY2VzL2Fzc2V0cy9qcy9jb21wb25lbnRzL0NsaWVudC52dWVcIlxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkgeyhmdW5jdGlvbiAoKSB7XG4gIHZhciBob3RBUEkgPSByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpXG4gIGhvdEFQSS5pbnN0YWxsKHJlcXVpcmUoXCJ2dWVcIiksIGZhbHNlKVxuICBpZiAoIWhvdEFQSS5jb21wYXRpYmxlKSByZXR1cm5cbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgIGhvdEFQSS5jcmVhdGVSZWNvcmQoXCJkYXRhLXYtMmUyY2E5N2NcIiwgQ29tcG9uZW50Lm9wdGlvbnMpXG4gIH0gZWxzZSB7XG4gICAgaG90QVBJLnJlbG9hZChcImRhdGEtdi0yZTJjYTk3Y1wiLCBDb21wb25lbnQub3B0aW9ucylcbiAgfVxuICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICBkaXNwb3NlZCA9IHRydWVcbiAgfSlcbn0pKCl9XG5cbm1vZHVsZS5leHBvcnRzID0gQ29tcG9uZW50LmV4cG9ydHNcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vcmVzb3VyY2VzL2Fzc2V0cy9qcy9jb21wb25lbnRzL0NsaWVudC52dWVcbi8vIG1vZHVsZSBpZCA9IC4vcmVzb3VyY2VzL2Fzc2V0cy9qcy9jb21wb25lbnRzL0NsaWVudC52dWVcbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/assets/js/components/Client.vue\n");

/***/ }),

/***/ "./resources/assets/js/components/Expedient.vue":
/***/ (function(module, exports, __webpack_require__) {

eval("var disposed = false\nvar normalizeComponent = __webpack_require__(\"./node_modules/vue-loader/lib/component-normalizer.js\")\n/* script */\nvar __vue_script__ = __webpack_require__(\"./node_modules/babel-loader/lib/index.js?{\\\"cacheDirectory\\\":true,\\\"presets\\\":[[\\\"env\\\",{\\\"modules\\\":false,\\\"targets\\\":{\\\"browsers\\\":[\\\"> 2%\\\"],\\\"uglify\\\":true}}]],\\\"plugins\\\":[\\\"transform-object-rest-spread\\\",[\\\"transform-runtime\\\",{\\\"polyfill\\\":false,\\\"helpers\\\":false}],\\\"transform-object-rest-spread\\\"]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/assets/js/components/Expedient.vue\")\n/* template */\nvar __vue_template__ = __webpack_require__(\"./node_modules/vue-loader/lib/template-compiler/index.js?{\\\"id\\\":\\\"data-v-ab86eb92\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/assets/js/components/Expedient.vue\")\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"resources/assets/js/components/Expedient.vue\"\n\n/* hot reload */\nif (false) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-ab86eb92\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-ab86eb92\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nmodule.exports = Component.exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2NvbXBvbmVudHMvRXhwZWRpZW50LnZ1ZT85MGJhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBLDJjQUF1VDtBQUN2VDtBQUNBLG1TQUFnTDtBQUNoTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsWUFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7O0FBRUQiLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2NvbXBvbmVudHMvRXhwZWRpZW50LnZ1ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBkaXNwb3NlZCA9IGZhbHNlXG52YXIgbm9ybWFsaXplQ29tcG9uZW50ID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvY29tcG9uZW50LW5vcm1hbGl6ZXJcIilcbi8qIHNjcmlwdCAqL1xudmFyIF9fdnVlX3NjcmlwdF9fID0gcmVxdWlyZShcIiEhYmFiZWwtbG9hZGVyP3tcXFwiY2FjaGVEaXJlY3RvcnlcXFwiOnRydWUsXFxcInByZXNldHNcXFwiOltbXFxcImVudlxcXCIse1xcXCJtb2R1bGVzXFxcIjpmYWxzZSxcXFwidGFyZ2V0c1xcXCI6e1xcXCJicm93c2Vyc1xcXCI6W1xcXCI+IDIlXFxcIl0sXFxcInVnbGlmeVxcXCI6dHJ1ZX19XV0sXFxcInBsdWdpbnNcXFwiOltcXFwidHJhbnNmb3JtLW9iamVjdC1yZXN0LXNwcmVhZFxcXCIsW1xcXCJ0cmFuc2Zvcm0tcnVudGltZVxcXCIse1xcXCJwb2x5ZmlsbFxcXCI6ZmFsc2UsXFxcImhlbHBlcnNcXFwiOmZhbHNlfV0sXFxcInRyYW5zZm9ybS1vYmplY3QtcmVzdC1zcHJlYWRcXFwiXX0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9c2NyaXB0JmluZGV4PTAhLi9FeHBlZGllbnQudnVlXCIpXG4vKiB0ZW1wbGF0ZSAqL1xudmFyIF9fdnVlX3RlbXBsYXRlX18gPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvdGVtcGxhdGUtY29tcGlsZXIvaW5kZXg/e1xcXCJpZFxcXCI6XFxcImRhdGEtdi1hYjg2ZWI5MlxcXCIsXFxcImhhc1Njb3BlZFxcXCI6ZmFsc2UsXFxcImJ1YmxlXFxcIjp7XFxcInRyYW5zZm9ybXNcXFwiOnt9fX0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9dGVtcGxhdGUmaW5kZXg9MCEuL0V4cGVkaWVudC52dWVcIilcbi8qIHRlbXBsYXRlIGZ1bmN0aW9uYWwgKi9cbnZhciBfX3Z1ZV90ZW1wbGF0ZV9mdW5jdGlvbmFsX18gPSBmYWxzZVxuLyogc3R5bGVzICovXG52YXIgX192dWVfc3R5bGVzX18gPSBudWxsXG4vKiBzY29wZUlkICovXG52YXIgX192dWVfc2NvcGVJZF9fID0gbnVsbFxuLyogbW9kdWxlSWRlbnRpZmllciAoc2VydmVyIG9ubHkpICovXG52YXIgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyA9IG51bGxcbnZhciBDb21wb25lbnQgPSBub3JtYWxpemVDb21wb25lbnQoXG4gIF9fdnVlX3NjcmlwdF9fLFxuICBfX3Z1ZV90ZW1wbGF0ZV9fLFxuICBfX3Z1ZV90ZW1wbGF0ZV9mdW5jdGlvbmFsX18sXG4gIF9fdnVlX3N0eWxlc19fLFxuICBfX3Z1ZV9zY29wZUlkX18sXG4gIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX19cbilcbkNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwicmVzb3VyY2VzL2Fzc2V0cy9qcy9jb21wb25lbnRzL0V4cGVkaWVudC52dWVcIlxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkgeyhmdW5jdGlvbiAoKSB7XG4gIHZhciBob3RBUEkgPSByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpXG4gIGhvdEFQSS5pbnN0YWxsKHJlcXVpcmUoXCJ2dWVcIiksIGZhbHNlKVxuICBpZiAoIWhvdEFQSS5jb21wYXRpYmxlKSByZXR1cm5cbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgIGhvdEFQSS5jcmVhdGVSZWNvcmQoXCJkYXRhLXYtYWI4NmViOTJcIiwgQ29tcG9uZW50Lm9wdGlvbnMpXG4gIH0gZWxzZSB7XG4gICAgaG90QVBJLnJlbG9hZChcImRhdGEtdi1hYjg2ZWI5MlwiLCBDb21wb25lbnQub3B0aW9ucylcbiAgfVxuICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICBkaXNwb3NlZCA9IHRydWVcbiAgfSlcbn0pKCl9XG5cbm1vZHVsZS5leHBvcnRzID0gQ29tcG9uZW50LmV4cG9ydHNcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vcmVzb3VyY2VzL2Fzc2V0cy9qcy9jb21wb25lbnRzL0V4cGVkaWVudC52dWVcbi8vIG1vZHVsZSBpZCA9IC4vcmVzb3VyY2VzL2Fzc2V0cy9qcy9jb21wb25lbnRzL0V4cGVkaWVudC52dWVcbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/assets/js/components/Expedient.vue\n");

/***/ }),

/***/ "./resources/assets/js/components/Spinner.vue":
/***/ (function(module, exports, __webpack_require__) {

eval("var disposed = false\nfunction injectStyle (ssrContext) {\n  if (disposed) return\n  __webpack_require__(\"./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js?sourceMap!./node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-36a7cc9c\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/assets/js/components/Spinner.vue\")\n}\nvar normalizeComponent = __webpack_require__(\"./node_modules/vue-loader/lib/component-normalizer.js\")\n/* script */\nvar __vue_script__ = __webpack_require__(\"./node_modules/babel-loader/lib/index.js?{\\\"cacheDirectory\\\":true,\\\"presets\\\":[[\\\"env\\\",{\\\"modules\\\":false,\\\"targets\\\":{\\\"browsers\\\":[\\\"> 2%\\\"],\\\"uglify\\\":true}}]],\\\"plugins\\\":[\\\"transform-object-rest-spread\\\",[\\\"transform-runtime\\\",{\\\"polyfill\\\":false,\\\"helpers\\\":false}],\\\"transform-object-rest-spread\\\"]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/assets/js/components/Spinner.vue\")\n/* template */\nvar __vue_template__ = __webpack_require__(\"./node_modules/vue-loader/lib/template-compiler/index.js?{\\\"id\\\":\\\"data-v-36a7cc9c\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/assets/js/components/Spinner.vue\")\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"resources/assets/js/components/Spinner.vue\"\n\n/* hot reload */\nif (false) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-36a7cc9c\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-36a7cc9c\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nmodule.exports = Component.exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2NvbXBvbmVudHMvU3Bpbm5lci52dWU/MGNlMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSxrV0FBbU07QUFDbk07QUFDQTtBQUNBO0FBQ0EseWNBQXVUO0FBQ3ZUO0FBQ0EsaVNBQWdMO0FBQ2hMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxZQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQzs7QUFFRCIsImZpbGUiOiIuL3Jlc291cmNlcy9hc3NldHMvanMvY29tcG9uZW50cy9TcGlubmVyLnZ1ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBkaXNwb3NlZCA9IGZhbHNlXG5mdW5jdGlvbiBpbmplY3RTdHlsZSAoc3NyQ29udGV4dCkge1xuICBpZiAoZGlzcG9zZWQpIHJldHVyblxuICByZXF1aXJlKFwiISF2dWUtc3R5bGUtbG9hZGVyIWNzcy1sb2FkZXI/c291cmNlTWFwIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zdHlsZS1jb21waWxlci9pbmRleD97XFxcInZ1ZVxcXCI6dHJ1ZSxcXFwiaWRcXFwiOlxcXCJkYXRhLXYtMzZhN2NjOWNcXFwiLFxcXCJzY29wZWRcXFwiOmZhbHNlLFxcXCJoYXNJbmxpbmVDb25maWdcXFwiOnRydWV9IS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvcj90eXBlPXN0eWxlcyZpbmRleD0wIS4vU3Bpbm5lci52dWVcIilcbn1cbnZhciBub3JtYWxpemVDb21wb25lbnQgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9jb21wb25lbnQtbm9ybWFsaXplclwiKVxuLyogc2NyaXB0ICovXG52YXIgX192dWVfc2NyaXB0X18gPSByZXF1aXJlKFwiISFiYWJlbC1sb2FkZXI/e1xcXCJjYWNoZURpcmVjdG9yeVxcXCI6dHJ1ZSxcXFwicHJlc2V0c1xcXCI6W1tcXFwiZW52XFxcIix7XFxcIm1vZHVsZXNcXFwiOmZhbHNlLFxcXCJ0YXJnZXRzXFxcIjp7XFxcImJyb3dzZXJzXFxcIjpbXFxcIj4gMiVcXFwiXSxcXFwidWdsaWZ5XFxcIjp0cnVlfX1dXSxcXFwicGx1Z2luc1xcXCI6W1xcXCJ0cmFuc2Zvcm0tb2JqZWN0LXJlc3Qtc3ByZWFkXFxcIixbXFxcInRyYW5zZm9ybS1ydW50aW1lXFxcIix7XFxcInBvbHlmaWxsXFxcIjpmYWxzZSxcXFwiaGVscGVyc1xcXCI6ZmFsc2V9XSxcXFwidHJhbnNmb3JtLW9iamVjdC1yZXN0LXNwcmVhZFxcXCJdfSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT1zY3JpcHQmaW5kZXg9MCEuL1NwaW5uZXIudnVlXCIpXG4vKiB0ZW1wbGF0ZSAqL1xudmFyIF9fdnVlX3RlbXBsYXRlX18gPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvdGVtcGxhdGUtY29tcGlsZXIvaW5kZXg/e1xcXCJpZFxcXCI6XFxcImRhdGEtdi0zNmE3Y2M5Y1xcXCIsXFxcImhhc1Njb3BlZFxcXCI6ZmFsc2UsXFxcImJ1YmxlXFxcIjp7XFxcInRyYW5zZm9ybXNcXFwiOnt9fX0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9dGVtcGxhdGUmaW5kZXg9MCEuL1NwaW5uZXIudnVlXCIpXG4vKiB0ZW1wbGF0ZSBmdW5jdGlvbmFsICovXG52YXIgX192dWVfdGVtcGxhdGVfZnVuY3Rpb25hbF9fID0gZmFsc2Vcbi8qIHN0eWxlcyAqL1xudmFyIF9fdnVlX3N0eWxlc19fID0gaW5qZWN0U3R5bGVcbi8qIHNjb3BlSWQgKi9cbnZhciBfX3Z1ZV9zY29wZUlkX18gPSBudWxsXG4vKiBtb2R1bGVJZGVudGlmaWVyIChzZXJ2ZXIgb25seSkgKi9cbnZhciBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fID0gbnVsbFxudmFyIENvbXBvbmVudCA9IG5vcm1hbGl6ZUNvbXBvbmVudChcbiAgX192dWVfc2NyaXB0X18sXG4gIF9fdnVlX3RlbXBsYXRlX18sXG4gIF9fdnVlX3RlbXBsYXRlX2Z1bmN0aW9uYWxfXyxcbiAgX192dWVfc3R5bGVzX18sXG4gIF9fdnVlX3Njb3BlSWRfXyxcbiAgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfX1xuKVxuQ29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJyZXNvdXJjZXMvYXNzZXRzL2pzL2NvbXBvbmVudHMvU3Bpbm5lci52dWVcIlxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkgeyhmdW5jdGlvbiAoKSB7XG4gIHZhciBob3RBUEkgPSByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpXG4gIGhvdEFQSS5pbnN0YWxsKHJlcXVpcmUoXCJ2dWVcIiksIGZhbHNlKVxuICBpZiAoIWhvdEFQSS5jb21wYXRpYmxlKSByZXR1cm5cbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgIGhvdEFQSS5jcmVhdGVSZWNvcmQoXCJkYXRhLXYtMzZhN2NjOWNcIiwgQ29tcG9uZW50Lm9wdGlvbnMpXG4gIH0gZWxzZSB7XG4gICAgaG90QVBJLnJlbG9hZChcImRhdGEtdi0zNmE3Y2M5Y1wiLCBDb21wb25lbnQub3B0aW9ucylcbiAgfVxuICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICBkaXNwb3NlZCA9IHRydWVcbiAgfSlcbn0pKCl9XG5cbm1vZHVsZS5leHBvcnRzID0gQ29tcG9uZW50LmV4cG9ydHNcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vcmVzb3VyY2VzL2Fzc2V0cy9qcy9jb21wb25lbnRzL1NwaW5uZXIudnVlXG4vLyBtb2R1bGUgaWQgPSAuL3Jlc291cmNlcy9hc3NldHMvanMvY29tcG9uZW50cy9TcGlubmVyLnZ1ZVxuLy8gbW9kdWxlIGNodW5rcyA9IDEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/assets/js/components/Spinner.vue\n");

/***/ }),

/***/ "./resources/assets/js/components/newExpedient.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(\"./node_modules/vue/dist/vue.common.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_axios__ = __webpack_require__(\"./node_modules/axios/index.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_axios__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Spinner__ = __webpack_require__(\"./resources/assets/js/components/Spinner.vue\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Spinner___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__Spinner__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Client__ = __webpack_require__(\"./resources/assets/js/components/Client.vue\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__Client__);\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue___default.a.component('spinner', __WEBPACK_IMPORTED_MODULE_2__Spinner___default.a);\n__WEBPACK_IMPORTED_MODULE_0_vue___default.a.component('client', __WEBPACK_IMPORTED_MODULE_3__Client___default.a);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  el: '#new__expedient',\n  data: {\n    client: {\n      id: '',\n      firstName: '',\n      lastName: '',\n      expedient: {\n        key: '',\n        number: '',\n        year: ''\n      },\n      phoneOne: '',\n      phoneTwo: '',\n      business: '',\n      emailOne: '',\n      emailTwo: '',\n      reference: ''\n    },\n    loading: false,\n    empty: true\n  },\n  children: ['spinner', 'client'],\n  computed: {\n    hasClient: function hasClient() {\n      return this.client.phoneOne.length !== 0 || this.client.phoneTwo.length !== 0 || this.client.emailOne.length !== 0 || this.client.emailTwo.length !== 0;\n    },\n    hasExpedient: function hasExpedient() {\n      return this.client.reference.length !== 0;\n    },\n    fullName: function fullName() {\n      return this.client.firstName + ' ' + this.client.lastName;\n    },\n    expedient: function expedient() {\n      return this.client.expedient.key + '/' + this.client.expedient.number + '/' + this.client.expedient.year;\n    }\n  },\n  methods: {\n    getClientInfo: function getClientInfo() {\n      var _this = this;\n\n      var clientId = document.getElementById('client_id').value;\n      this.loading = true;\n\n      if (clientId !== '') {\n        var uri = '/api/clients/show/' + clientId;\n\n        var inicialization = {\n          withCredentials: false\n        };\n\n        __WEBPACK_IMPORTED_MODULE_1_axios___default.a.get(uri, inicialization).then(function (response) {\n          return response.data[0];\n        }).catch(function (error) {\n          return console.log(error);\n        }).then(function (response) {\n          _this.loading = false;\n          _this.client.id = response.id || '';\n          _this.client.firstName = response.first_name || '';\n          _this.client.lastName = response.last_name || '';\n          _this.client.phoneOne = response.phone_1 || '';\n          _this.client.phoneTwo = response.phone_2 || '';\n          _this.client.business = response.business || '';\n          _this.client.emailOne = response.email_1 || '';\n          _this.client.emailTwo = response.email_2 || '';\n          _this.client.reference = response.reference || '';\n          _this.empty = false;\n        });\n      } else {\n        this.loading = false;\n        this.client.id = '';\n        this.client.firstName = '';\n        this.client.lastName = '';\n        this.client.phoneOne = '';\n        this.client.phoneTwo = '';\n        this.client.emailOne = '';\n        this.client.emailTwo = '';\n        this.empty = false;\n      }\n    }\n  },\n  created: function created() {},\n  mounted: function mounted() {}\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/js/components/newExpedient.js\n");

/***/ }),

/***/ "./resources/assets/js/store/sale/ClosingContractStore.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Vue, axios) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(\"./node_modules/vuex/dist/vuex.esm.js\");\n\n\nVue.use(__WEBPACK_IMPORTED_MODULE_0_vuex__[\"default\"]);\n\nvar store = new __WEBPACK_IMPORTED_MODULE_0_vuex__[\"default\"].Store({\n  state: {\n    client: {\n      id: '',\n      firstName: '',\n      lastName: '',\n      expedient: {\n        key: '',\n        number: '',\n        year: ''\n      },\n      phoneOne: '',\n      phoneTwo: '',\n      business: '',\n      emailOne: '',\n      emailTwo: '',\n      reference: ''\n    },\n    sale: {\n      closingContract: {\n        exclusivity_contract: 'mm-dd-aaaa',\n        commercial_valuation: 'mm-dd-aaaa',\n        publication: 'mm-dd-aaaa',\n        data_sheet: '',\n        observations: ''\n      }\n    },\n    loading: false,\n    empty: true\n  },\n  getters: {\n    closingContractIsComplete: function closingContractIsComplete(state) {\n      return state.sale.closingContract.exclusivity_contract || state.sale.closingContract.commercial_valuation !== '' || state.sale.closingContract.publication !== '' || state.sale.closingContract.data_sheet !== '' || state.sale.closingContract.observations !== '';\n    },\n    hasClient: function hasClient(state) {\n      return state.client.phoneOne.length !== 0 || state.client.phoneTwo.length !== 0 || state.client.emailOne.length !== 0 || state.client.emailTwo.length !== 0;\n    },\n    hasExpedient: function hasExpedient(state) {\n      return state.client.reference.length !== 0;\n    },\n    getFullName: function getFullName(state) {\n      return state.client.firstName + ' ' + state.client.lastName;\n    },\n    getExpedient: function getExpedient(state) {\n      return state.client.expedient.key + '/' + state.client.expedient.number + '/' + state.client.expedient.year;\n    }\n  },\n  mutations: {\n    updateLoading: function updateLoading(state, payload) {\n      state.loading = payload;\n    },\n    updateEmpty: function updateEmpty(state, payload) {\n      state.empty = payload;\n    },\n    updateClientID: function updateClientID(state, payload) {\n      state.client.id = payload;\n    },\n    updateClientFirstName: function updateClientFirstName(state, payload) {\n      state.client.firstName = payload;\n    },\n    updateClientLastName: function updateClientLastName(state, payload) {\n      state.client.lastName = payload;\n    },\n    updateClientExpedientKey: function updateClientExpedientKey(state, payload) {\n      state.client.expedient.key = payload;\n    },\n    updateClientExpedientNumber: function updateClientExpedientNumber(state, payload) {\n      state.client.expedient.number = payload;\n    },\n    updateClientExpedientYear: function updateClientExpedientYear(state, payload) {\n      state.client.expedient.year = payload;\n    },\n    updateClientPhoneOne: function updateClientPhoneOne(state, payload) {\n      state.client.phoneOne = payload;\n    },\n    updateClientPhoneTwo: function updateClientPhoneTwo(state, payload) {\n      state.client.phoneTwo = payload;\n    },\n    updateClientBusiness: function updateClientBusiness(state, payload) {\n      state.client.business = payload;\n    },\n    updateClientEmailOne: function updateClientEmailOne(state, payload) {\n      state.client.emailOne = payload;\n    },\n    updateClientEmailTwo: function updateClientEmailTwo(state, payload) {\n      state.client.emailTwo = payload;\n    },\n    updateClientReference: function updateClientReference(state, payload) {\n      state.client.reference = payload;\n    },\n    updateClosingContractExclusivityContract: function updateClosingContractExclusivityContract(state, payload) {\n      state.sale.closingContract.exclusivity_contract = payload;\n    },\n    updateClosingContractCommercialValuation: function updateClosingContractCommercialValuation(state, payload) {\n      state.sale.closingContract.commercial_valuation = payload;\n    },\n    updateClosingContractPublication: function updateClosingContractPublication(state, payload) {\n      state.sale.closingContract.publication = payload;\n    },\n    updateClosingContractDataSheet: function updateClosingContractDataSheet(state, payload) {\n      state.sale.closingContract.data_sheet = payload;\n    },\n    updateClosingContractObservations: function updateClosingContractObservations(state, payload) {\n      state.sale.closingContract.observations = payload;\n    }\n  },\n  actions: {\n    getClientInfo: function getClientInfo(context, payload) {\n      var clientId = context.state.client.id;\n      context.commit('updateLoading', true);\n\n      if (clientId.trim().length !== 0 && clientId !== '') {\n        var uri = '/api/clients/show/' + clientId;\n\n        var inicialization = {\n          withCredentials: false\n        };\n\n        axios.get(uri, inicialization).then(function (response) {\n          return response.data[0];\n        }).catch(function (error) {\n          return console.log(error);\n        }).then(function (response) {\n          console.log('Response: ' + response);\n          context.commit('updateLoading', false);\n          context.commit('updateClientID', response.id || '');\n          context.commit('updateClientFirstName', response.first_name || '');\n          context.commit('updateClientLastName', response.last_name || '');\n          context.commit('updateClientPhoneOne', response.phone_1 || '');\n          context.commit('updateClientPhoneTwo', response.phone_2 || '');\n          context.commit('updateClientBusiness', response.business || '');\n          context.commit('updateClientEmailOne', response.email_1 || '');\n          context.commit('updateClientEmailTwo', response.email_2 || '');\n          context.commit('updateClientReference', response.reference || '');\n          context.commit('updateEmpty', false);\n        }).catch(function (error) {\n          return console.log(error);\n        });\n      } else {\n        context.commit('updateLoading', false);\n        context.commit('updateClientID', '');\n        context.commit('updateClientFirstName', '');\n        context.commit('updateClientLastName', '');\n        context.commit('updateClientPhoneOne', '');\n        context.commit('updateClientPhoneTwo', '');\n        context.commit('updateClientEmailOne', '');\n        context.commit('updateClientEmailTwo', '');\n        context.commit('updateEmpty', false);\n      }\n    },\n    getExpedientInfo: function getExpedientInfo(context, payload) {\n      var expedientId = payload;\n      context.commit('updateLoading', true);\n\n      if (expedientId !== '') {\n        var uri = '/api/internal_expedients/show/' + expedientId;\n\n        var inicialization = {\n          withCredentials: false\n        };\n\n        axios.get(uri, inicialization).then(function (response) {\n          return response.data[0];\n        }).catch(function (error) {\n          return console.log(error);\n        }).then(function (response) {\n          context.commit('updateClientID', response.id || '');\n          context.commit('updateClientExpedientKey', response.expedient_key || '');\n          context.commit('updateClientExpedientNumber', response.expedient_number || '');\n          context.commit('updateClientExpedientYear', response.expedient_year || '');\n          context.commit('updateClientFirstName', response.client.first_name || '');\n          context.commit('updateClientLastName', response.client.last_name || '');\n          context.commit('updateClientPhoneOne', response.client.phone_1 || '');\n          context.commit('updateClientPhoneTwo', response.client.phone_2 || '');\n          context.commit('updateClientBusiness', response.client.business || '');\n          context.commit('updateClientEmailOne', response.client.email_1 || '');\n          context.commit('updateClientEmailTwo', response.client.email_2 || '');\n          context.commit('updateClientReference', response.client.reference || '');\n          context.commit('updateLoading', false);\n          context.commit('updateEmpty', false);\n        }).catch(function (error) {\n          return console.log(error);\n        });\n      } else {\n        context.commit('updateClientID', '');\n        context.commit('updateClientFirstName', '');\n        context.commit('updateClientLastName', '');\n        context.commit('updateClientPhoneOne', '');\n        context.commit('updateClientPhoneTwo', '');\n        context.commit('updateClientEmailOne', '');\n        context.commit('updateClientEmailTwo', '');\n        context.commit('updateLoading', false);\n        context.commit('updateEmpty', true);\n      }\n    }\n  }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (store);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(\"./node_modules/vue/dist/vue.common.js\"), __webpack_require__(\"./node_modules/axios/index.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/js/store/sale/ClosingContractStore.js\n");

/***/ }),

/***/ "./resources/assets/js/store/sale/index.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Vue, axios) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(\"./node_modules/vuex/dist/vuex.esm.js\");\n\n\nVue.use(__WEBPACK_IMPORTED_MODULE_0_vuex__[\"default\"]);\n\nvar store = new __WEBPACK_IMPORTED_MODULE_0_vuex__[\"default\"].Store({\n  state: {\n    client: {\n      id: '',\n      firstName: '',\n      lastName: '',\n      expedient: {\n        key: '',\n        number: '',\n        year: ''\n      },\n      phoneOne: '',\n      phoneTwo: '',\n      business: '',\n      emailOne: '',\n      emailTwo: '',\n      reference: ''\n    },\n    sale: {\n      seller: {\n        deed: false,\n        water: false,\n        predial: false,\n        light: false,\n        birth_certificate: false,\n        ID: false,\n        CURP: '',\n        RFC: '',\n        account_status: false,\n        email: false,\n        phone: false,\n        civil_status: ''\n      }\n    },\n    loading: false,\n    empty: true\n  },\n  getters: {\n    sellerIsComplete: function sellerIsComplete(state) {\n      return state.sale.seller.deed || state.sale.seller.water || state.sale.seller.predial || state.sale.seller.light || state.sale.seller.birth_certificate || state.sale.seller.ID || state.sale.seller.CURP !== '' || state.sale.seller.RFC !== '' || state.sale.seller.account_status || state.sale.seller.email || state.sale.seller.phone || state.sale.seller.civil_status !== '';\n    },\n    hasClient: function hasClient(state) {\n      return state.client.phoneOne.length !== 0 || state.client.phoneTwo.length !== 0 || state.client.emailOne.length !== 0 || state.client.emailTwo.length !== 0;\n    },\n    hasExpedient: function hasExpedient(state) {\n      return state.client.reference.length !== 0;\n    },\n    getFullName: function getFullName(state) {\n      return state.client.firstName + ' ' + state.client.lastName;\n    },\n    getExpedient: function getExpedient(state) {\n      return state.client.expedient.key + '/' + state.client.expedient.number + '/' + state.client.expedient.year;\n    }\n  },\n  mutations: {\n    updateLoading: function updateLoading(state, payload) {\n      state.loading = payload;\n    },\n    updateEmpty: function updateEmpty(state, payload) {\n      state.empty = payload;\n    },\n    updateClientID: function updateClientID(state, payload) {\n      state.client.id = payload;\n    },\n    updateClientFirstName: function updateClientFirstName(state, payload) {\n      state.client.firstName = payload;\n    },\n    updateClientLastName: function updateClientLastName(state, payload) {\n      state.client.lastName = payload;\n    },\n    updateClientExpedientKey: function updateClientExpedientKey(state, payload) {\n      state.client.expedient.key = payload;\n    },\n    updateClientExpedientNumber: function updateClientExpedientNumber(state, payload) {\n      state.client.expedient.number = payload;\n    },\n    updateClientExpedientYear: function updateClientExpedientYear(state, payload) {\n      state.client.expedient.year = payload;\n    },\n    updateClientPhoneOne: function updateClientPhoneOne(state, payload) {\n      state.client.phoneOne = payload;\n    },\n    updateClientPhoneTwo: function updateClientPhoneTwo(state, payload) {\n      state.client.phoneTwo = payload;\n    },\n    updateClientBusiness: function updateClientBusiness(state, payload) {\n      state.client.business = payload;\n    },\n    updateClientEmailOne: function updateClientEmailOne(state, payload) {\n      state.client.emailOne = payload;\n    },\n    updateClientEmailTwo: function updateClientEmailTwo(state, payload) {\n      state.client.emailTwo = payload;\n    },\n    updateClientReference: function updateClientReference(state, payload) {\n      state.client.reference = payload;\n    },\n    updateSellerDeed: function updateSellerDeed(state, payload) {\n      state.sale.seller.deed = payload;\n    },\n    updateSellerWater: function updateSellerWater(state, payload) {\n      state.sale.seller.water = payload;\n    },\n    updateSellerPredial: function updateSellerPredial(state, payload) {\n      state.sale.seller.predial = payload;\n    },\n    updateSellerLight: function updateSellerLight(state, payload) {\n      state.sale.seller.light = payload;\n    },\n    updateSellerBirthCertificate: function updateSellerBirthCertificate(state, payload) {\n      state.sale.seller.birth_certificate = payload;\n    },\n    updateSellerID: function updateSellerID(state, payload) {\n      state.sale.seller.ID = payload;\n    },\n    updateSellerCURP: function updateSellerCURP(state, payload) {\n      state.sale.seller.CURP = payload;\n    },\n    updateSellerRFC: function updateSellerRFC(state, payload) {\n      state.sale.seller.RFC = payload;\n    },\n    updateSellerAccountStatus: function updateSellerAccountStatus(state, payload) {\n      state.sale.seller.account_status = payload;\n    },\n    updateSellerEmail: function updateSellerEmail(state, payload) {\n      state.sale.seller.email = payload;\n    },\n    updateSellerPhone: function updateSellerPhone(state, payload) {\n      state.sale.seller.phone = payload;\n    },\n    updateSellerCivilStatus: function updateSellerCivilStatus(state, payload) {\n      state.sale.seller.civil_status = payload;\n    }\n  },\n  actions: {\n    getClientInfo: function getClientInfo(context, payload) {\n      var clientId = context.state.client.id;\n      context.commit('updateLoading', true);\n\n      if (clientId.trim().length !== 0 && clientId !== '') {\n        var uri = '/api/clients/show/' + clientId;\n\n        var inicialization = {\n          withCredentials: false\n        };\n\n        axios.get(uri, inicialization).then(function (response) {\n          return response.data[0];\n        }).catch(function (error) {\n          return console.log(error);\n        }).then(function (response) {\n          console.log('Response: ' + response);\n          context.commit('updateLoading', false);\n          context.commit('updateClientID', response.id || '');\n          context.commit('updateClientFirstName', response.first_name || '');\n          context.commit('updateClientLastName', response.last_name || '');\n          context.commit('updateClientPhoneOne', response.phone_1 || '');\n          context.commit('updateClientPhoneTwo', response.phone_2 || '');\n          context.commit('updateClientBusiness', response.business || '');\n          context.commit('updateClientEmailOne', response.email_1 || '');\n          context.commit('updateClientEmailTwo', response.email_2 || '');\n          context.commit('updateClientReference', response.reference || '');\n          context.commit('updateEmpty', false);\n        }).catch(function (error) {\n          return console.log(error);\n        });\n      } else {\n        context.commit('updateLoading', false);\n        context.commit('updateClientID', '');\n        context.commit('updateClientFirstName', '');\n        context.commit('updateClientLastName', '');\n        context.commit('updateClientPhoneOne', '');\n        context.commit('updateClientPhoneTwo', '');\n        context.commit('updateClientEmailOne', '');\n        context.commit('updateClientEmailTwo', '');\n        context.commit('updateEmpty', false);\n      }\n    },\n    getExpedientInfo: function getExpedientInfo(context, payload) {\n      var expedientId = payload;\n      context.commit('updateLoading', true);\n\n      if (expedientId !== '') {\n        var uri = '/api/internal_expedients/show/' + expedientId;\n\n        var inicialization = {\n          withCredentials: false\n        };\n\n        axios.get(uri, inicialization).then(function (response) {\n          return response.data[0];\n        }).catch(function (error) {\n          return console.log(error);\n        }).then(function (response) {\n          context.commit('updateClientID', response.id || '');\n          context.commit('updateClientExpedientKey', response.expedient_key || '');\n          context.commit('updateClientExpedientNumber', response.expedient_number || '');\n          context.commit('updateClientExpedientYear', response.expedient_year || '');\n          context.commit('updateClientFirstName', response.client.first_name || '');\n          context.commit('updateClientLastName', response.client.last_name || '');\n          context.commit('updateClientPhoneOne', response.client.phone_1 || '');\n          context.commit('updateClientPhoneTwo', response.client.phone_2 || '');\n          context.commit('updateClientBusiness', response.client.business || '');\n          context.commit('updateClientEmailOne', response.client.email_1 || '');\n          context.commit('updateClientEmailTwo', response.client.email_2 || '');\n          context.commit('updateClientReference', response.client.reference || '');\n          context.commit('updateLoading', false);\n          context.commit('updateEmpty', false);\n        }).catch(function (error) {\n          return console.log(error);\n        });\n      } else {\n        context.commit('updateClientID', '');\n        context.commit('updateClientFirstName', '');\n        context.commit('updateClientLastName', '');\n        context.commit('updateClientPhoneOne', '');\n        context.commit('updateClientPhoneTwo', '');\n        context.commit('updateClientEmailOne', '');\n        context.commit('updateClientEmailTwo', '');\n        context.commit('updateLoading', false);\n        context.commit('updateEmpty', true);\n      }\n    }\n  }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (store);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(\"./node_modules/vue/dist/vue.common.js\"), __webpack_require__(\"./node_modules/axios/index.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2pzL3N0b3JlL3NhbGUvaW5kZXguanM/Y2EwOCJdLCJuYW1lcyI6WyJWdWUiLCJ1c2UiLCJzdG9yZSIsIlZ1ZXgiLCJTdG9yZSIsInN0YXRlIiwiY2xpZW50IiwiaWQiLCJmaXJzdE5hbWUiLCJsYXN0TmFtZSIsImV4cGVkaWVudCIsImtleSIsIm51bWJlciIsInllYXIiLCJwaG9uZU9uZSIsInBob25lVHdvIiwiYnVzaW5lc3MiLCJlbWFpbE9uZSIsImVtYWlsVHdvIiwicmVmZXJlbmNlIiwic2FsZSIsInNlbGxlciIsImRlZWQiLCJ3YXRlciIsInByZWRpYWwiLCJsaWdodCIsImJpcnRoX2NlcnRpZmljYXRlIiwiSUQiLCJDVVJQIiwiUkZDIiwiYWNjb3VudF9zdGF0dXMiLCJlbWFpbCIsInBob25lIiwiY2l2aWxfc3RhdHVzIiwibG9hZGluZyIsImVtcHR5IiwiZ2V0dGVycyIsInNlbGxlcklzQ29tcGxldGUiLCJoYXNDbGllbnQiLCJsZW5ndGgiLCJoYXNFeHBlZGllbnQiLCJnZXRGdWxsTmFtZSIsImdldEV4cGVkaWVudCIsIm11dGF0aW9ucyIsInVwZGF0ZUxvYWRpbmciLCJwYXlsb2FkIiwidXBkYXRlRW1wdHkiLCJ1cGRhdGVDbGllbnRJRCIsInVwZGF0ZUNsaWVudEZpcnN0TmFtZSIsInVwZGF0ZUNsaWVudExhc3ROYW1lIiwidXBkYXRlQ2xpZW50RXhwZWRpZW50S2V5IiwidXBkYXRlQ2xpZW50RXhwZWRpZW50TnVtYmVyIiwidXBkYXRlQ2xpZW50RXhwZWRpZW50WWVhciIsInVwZGF0ZUNsaWVudFBob25lT25lIiwidXBkYXRlQ2xpZW50UGhvbmVUd28iLCJ1cGRhdGVDbGllbnRCdXNpbmVzcyIsInVwZGF0ZUNsaWVudEVtYWlsT25lIiwidXBkYXRlQ2xpZW50RW1haWxUd28iLCJ1cGRhdGVDbGllbnRSZWZlcmVuY2UiLCJ1cGRhdGVTZWxsZXJEZWVkIiwidXBkYXRlU2VsbGVyV2F0ZXIiLCJ1cGRhdGVTZWxsZXJQcmVkaWFsIiwidXBkYXRlU2VsbGVyTGlnaHQiLCJ1cGRhdGVTZWxsZXJCaXJ0aENlcnRpZmljYXRlIiwidXBkYXRlU2VsbGVySUQiLCJ1cGRhdGVTZWxsZXJDVVJQIiwidXBkYXRlU2VsbGVyUkZDIiwidXBkYXRlU2VsbGVyQWNjb3VudFN0YXR1cyIsInVwZGF0ZVNlbGxlckVtYWlsIiwidXBkYXRlU2VsbGVyUGhvbmUiLCJ1cGRhdGVTZWxsZXJDaXZpbFN0YXR1cyIsImFjdGlvbnMiLCJnZXRDbGllbnRJbmZvIiwiY29udGV4dCIsImNsaWVudElkIiwiY29tbWl0IiwidHJpbSIsInVyaSIsImluaWNpYWxpemF0aW9uIiwid2l0aENyZWRlbnRpYWxzIiwiYXhpb3MiLCJnZXQiLCJ0aGVuIiwicmVzcG9uc2UiLCJkYXRhIiwiY2F0Y2giLCJjb25zb2xlIiwibG9nIiwiZXJyb3IiLCJmaXJzdF9uYW1lIiwibGFzdF9uYW1lIiwicGhvbmVfMSIsInBob25lXzIiLCJlbWFpbF8xIiwiZW1haWxfMiIsImdldEV4cGVkaWVudEluZm8iLCJleHBlZGllbnRJZCIsImV4cGVkaWVudF9rZXkiLCJleHBlZGllbnRfbnVtYmVyIiwiZXhwZWRpZW50X3llYXIiXSwibWFwcGluZ3MiOiI7QUFBQTs7QUFFQUEsSUFBSUMsR0FBSixDQUFRLDZDQUFSOztBQUVBLElBQUlDLFFBQVEsSUFBSSw2Q0FBQUMsQ0FBS0MsS0FBVCxDQUFlO0FBQ3pCQyxTQUFPO0FBQ0xDLFlBQVE7QUFDTkMsVUFBSSxFQURFO0FBRU5DLGlCQUFXLEVBRkw7QUFHTkMsZ0JBQVUsRUFISjtBQUlOQyxpQkFBVztBQUNUQyxhQUFLLEVBREk7QUFFVEMsZ0JBQVEsRUFGQztBQUdUQyxjQUFNO0FBSEcsT0FKTDtBQVNOQyxnQkFBVSxFQVRKO0FBVU5DLGdCQUFVLEVBVko7QUFXTkMsZ0JBQVUsRUFYSjtBQVlOQyxnQkFBVSxFQVpKO0FBYU5DLGdCQUFVLEVBYko7QUFjTkMsaUJBQVc7QUFkTCxLQURIO0FBaUJMQyxVQUFNO0FBQ0pDLGNBQVE7QUFDTkMsY0FBTSxLQURBO0FBRU5DLGVBQU8sS0FGRDtBQUdOQyxpQkFBUyxLQUhIO0FBSU5DLGVBQU8sS0FKRDtBQUtOQywyQkFBbUIsS0FMYjtBQU1OQyxZQUFJLEtBTkU7QUFPTkMsY0FBTSxFQVBBO0FBUU5DLGFBQUssRUFSQztBQVNOQyx3QkFBZ0IsS0FUVjtBQVVOQyxlQUFPLEtBVkQ7QUFXTkMsZUFBTyxLQVhEO0FBWU5DLHNCQUFjO0FBWlI7QUFESixLQWpCRDtBQWlDTEMsYUFBUyxLQWpDSjtBQWtDTEMsV0FBTztBQWxDRixHQURrQjtBQXFDekJDLFdBQVM7QUFDUEMsb0JBRE8sNEJBQ1doQyxLQURYLEVBQ2tCO0FBQ3ZCLGFBQ0VBLE1BQU1lLElBQU4sQ0FBV0MsTUFBWCxDQUFrQkMsSUFBbEIsSUFDQWpCLE1BQU1lLElBQU4sQ0FBV0MsTUFBWCxDQUFrQkUsS0FEbEIsSUFFQWxCLE1BQU1lLElBQU4sQ0FBV0MsTUFBWCxDQUFrQkcsT0FGbEIsSUFHQW5CLE1BQU1lLElBQU4sQ0FBV0MsTUFBWCxDQUFrQkksS0FIbEIsSUFJQXBCLE1BQU1lLElBQU4sQ0FBV0MsTUFBWCxDQUFrQkssaUJBSmxCLElBS0FyQixNQUFNZSxJQUFOLENBQVdDLE1BQVgsQ0FBa0JNLEVBTGxCLElBTUF0QixNQUFNZSxJQUFOLENBQVdDLE1BQVgsQ0FBa0JPLElBQWxCLEtBQTJCLEVBTjNCLElBT0F2QixNQUFNZSxJQUFOLENBQVdDLE1BQVgsQ0FBa0JRLEdBQWxCLEtBQTBCLEVBUDFCLElBUUF4QixNQUFNZSxJQUFOLENBQVdDLE1BQVgsQ0FBa0JTLGNBUmxCLElBU0F6QixNQUFNZSxJQUFOLENBQVdDLE1BQVgsQ0FBa0JVLEtBVGxCLElBVUExQixNQUFNZSxJQUFOLENBQVdDLE1BQVgsQ0FBa0JXLEtBVmxCLElBV0EzQixNQUFNZSxJQUFOLENBQVdDLE1BQVgsQ0FBa0JZLFlBQWxCLEtBQW1DLEVBWnJDO0FBY0QsS0FoQk07QUFpQlBLLGFBakJPLHFCQWlCSWpDLEtBakJKLEVBaUJXO0FBQ2hCLGFBQ0VBLE1BQU1DLE1BQU4sQ0FBYVEsUUFBYixDQUFzQnlCLE1BQXRCLEtBQWlDLENBQWpDLElBQ0FsQyxNQUFNQyxNQUFOLENBQWFTLFFBQWIsQ0FBc0J3QixNQUF0QixLQUFpQyxDQURqQyxJQUVBbEMsTUFBTUMsTUFBTixDQUFhVyxRQUFiLENBQXNCc0IsTUFBdEIsS0FBaUMsQ0FGakMsSUFHQWxDLE1BQU1DLE1BQU4sQ0FBYVksUUFBYixDQUFzQnFCLE1BQXRCLEtBQWlDLENBSm5DO0FBTUQsS0F4Qk07QUF5QlBDLGdCQXpCTyx3QkF5Qk9uQyxLQXpCUCxFQXlCYztBQUNuQixhQUNFQSxNQUFNQyxNQUFOLENBQWFhLFNBQWIsQ0FBdUJvQixNQUF2QixLQUFrQyxDQURwQztBQUdELEtBN0JNO0FBOEJQRSxlQTlCTyx1QkE4Qk1wQyxLQTlCTixFQThCYTtBQUNsQixhQUFVQSxNQUFNQyxNQUFOLENBQWFFLFNBQXZCLFNBQW9DSCxNQUFNQyxNQUFOLENBQWFHLFFBQWpEO0FBQ0QsS0FoQ007QUFpQ1BpQyxnQkFqQ08sd0JBaUNPckMsS0FqQ1AsRUFpQ2M7QUFDbkIsYUFBVUEsTUFBTUMsTUFBTixDQUFhSSxTQUFiLENBQXVCQyxHQUFqQyxTQUF3Q04sTUFBTUMsTUFBTixDQUFhSSxTQUFiLENBQXVCRSxNQUEvRCxTQUF5RVAsTUFBTUMsTUFBTixDQUFhSSxTQUFiLENBQXVCRyxJQUFoRztBQUNEO0FBbkNNLEdBckNnQjtBQTBFekI4QixhQUFXO0FBQ1RDLGlCQURTLHlCQUNNdkMsS0FETixFQUNhd0MsT0FEYixFQUNzQjtBQUM3QnhDLFlBQU02QixPQUFOLEdBQWdCVyxPQUFoQjtBQUNELEtBSFE7QUFJVEMsZUFKUyx1QkFJSXpDLEtBSkosRUFJV3dDLE9BSlgsRUFJb0I7QUFDM0J4QyxZQUFNOEIsS0FBTixHQUFjVSxPQUFkO0FBQ0QsS0FOUTtBQU9URSxrQkFQUywwQkFPTzFDLEtBUFAsRUFPY3dDLE9BUGQsRUFPdUI7QUFDOUJ4QyxZQUFNQyxNQUFOLENBQWFDLEVBQWIsR0FBa0JzQyxPQUFsQjtBQUNELEtBVFE7QUFVVEcseUJBVlMsaUNBVWMzQyxLQVZkLEVBVXFCd0MsT0FWckIsRUFVOEI7QUFDckN4QyxZQUFNQyxNQUFOLENBQWFFLFNBQWIsR0FBeUJxQyxPQUF6QjtBQUNELEtBWlE7QUFhVEksd0JBYlMsZ0NBYWE1QyxLQWJiLEVBYW9Cd0MsT0FicEIsRUFhNkI7QUFDcEN4QyxZQUFNQyxNQUFOLENBQWFHLFFBQWIsR0FBd0JvQyxPQUF4QjtBQUNELEtBZlE7QUFnQlRLLDRCQWhCUyxvQ0FnQmlCN0MsS0FoQmpCLEVBZ0J3QndDLE9BaEJ4QixFQWdCaUM7QUFDeEN4QyxZQUFNQyxNQUFOLENBQWFJLFNBQWIsQ0FBdUJDLEdBQXZCLEdBQTZCa0MsT0FBN0I7QUFDRCxLQWxCUTtBQW1CVE0sK0JBbkJTLHVDQW1Cb0I5QyxLQW5CcEIsRUFtQjJCd0MsT0FuQjNCLEVBbUJvQztBQUMzQ3hDLFlBQU1DLE1BQU4sQ0FBYUksU0FBYixDQUF1QkUsTUFBdkIsR0FBZ0NpQyxPQUFoQztBQUNELEtBckJRO0FBc0JUTyw2QkF0QlMscUNBc0JrQi9DLEtBdEJsQixFQXNCeUJ3QyxPQXRCekIsRUFzQmtDO0FBQ3pDeEMsWUFBTUMsTUFBTixDQUFhSSxTQUFiLENBQXVCRyxJQUF2QixHQUE4QmdDLE9BQTlCO0FBQ0QsS0F4QlE7QUF5QlRRLHdCQXpCUyxnQ0F5QmFoRCxLQXpCYixFQXlCb0J3QyxPQXpCcEIsRUF5QjZCO0FBQ3BDeEMsWUFBTUMsTUFBTixDQUFhUSxRQUFiLEdBQXdCK0IsT0FBeEI7QUFDRCxLQTNCUTtBQTRCVFMsd0JBNUJTLGdDQTRCYWpELEtBNUJiLEVBNEJvQndDLE9BNUJwQixFQTRCNkI7QUFDcEN4QyxZQUFNQyxNQUFOLENBQWFTLFFBQWIsR0FBd0I4QixPQUF4QjtBQUNELEtBOUJRO0FBK0JUVSx3QkEvQlMsZ0NBK0JhbEQsS0EvQmIsRUErQm9Cd0MsT0EvQnBCLEVBK0I2QjtBQUNwQ3hDLFlBQU1DLE1BQU4sQ0FBYVUsUUFBYixHQUF3QjZCLE9BQXhCO0FBQ0QsS0FqQ1E7QUFrQ1RXLHdCQWxDUyxnQ0FrQ2FuRCxLQWxDYixFQWtDb0J3QyxPQWxDcEIsRUFrQzZCO0FBQ3BDeEMsWUFBTUMsTUFBTixDQUFhVyxRQUFiLEdBQXdCNEIsT0FBeEI7QUFDRCxLQXBDUTtBQXFDVFksd0JBckNTLGdDQXFDYXBELEtBckNiLEVBcUNvQndDLE9BckNwQixFQXFDNkI7QUFDcEN4QyxZQUFNQyxNQUFOLENBQWFZLFFBQWIsR0FBd0IyQixPQUF4QjtBQUNELEtBdkNRO0FBd0NUYSx5QkF4Q1MsaUNBd0NjckQsS0F4Q2QsRUF3Q3FCd0MsT0F4Q3JCLEVBd0M4QjtBQUNyQ3hDLFlBQU1DLE1BQU4sQ0FBYWEsU0FBYixHQUF5QjBCLE9BQXpCO0FBQ0QsS0ExQ1E7QUEyQ1RjLG9CQTNDUyw0QkEyQ1N0RCxLQTNDVCxFQTJDZ0J3QyxPQTNDaEIsRUEyQ3lCO0FBQ2hDeEMsWUFBTWUsSUFBTixDQUFXQyxNQUFYLENBQWtCQyxJQUFsQixHQUF5QnVCLE9BQXpCO0FBQ0QsS0E3Q1E7QUE4Q1RlLHFCQTlDUyw2QkE4Q1V2RCxLQTlDVixFQThDaUJ3QyxPQTlDakIsRUE4QzBCO0FBQ2pDeEMsWUFBTWUsSUFBTixDQUFXQyxNQUFYLENBQWtCRSxLQUFsQixHQUEwQnNCLE9BQTFCO0FBQ0QsS0FoRFE7QUFpRFRnQix1QkFqRFMsK0JBaURZeEQsS0FqRFosRUFpRG1Cd0MsT0FqRG5CLEVBaUQ0QjtBQUNuQ3hDLFlBQU1lLElBQU4sQ0FBV0MsTUFBWCxDQUFrQkcsT0FBbEIsR0FBNEJxQixPQUE1QjtBQUNELEtBbkRRO0FBb0RUaUIscUJBcERTLDZCQW9EVXpELEtBcERWLEVBb0RpQndDLE9BcERqQixFQW9EMEI7QUFDakN4QyxZQUFNZSxJQUFOLENBQVdDLE1BQVgsQ0FBa0JJLEtBQWxCLEdBQTBCb0IsT0FBMUI7QUFDRCxLQXREUTtBQXVEVGtCLGdDQXZEUyx3Q0F1RHFCMUQsS0F2RHJCLEVBdUQ0QndDLE9BdkQ1QixFQXVEcUM7QUFDNUN4QyxZQUFNZSxJQUFOLENBQVdDLE1BQVgsQ0FBa0JLLGlCQUFsQixHQUFzQ21CLE9BQXRDO0FBQ0QsS0F6RFE7QUEwRFRtQixrQkExRFMsMEJBMERPM0QsS0ExRFAsRUEwRGN3QyxPQTFEZCxFQTBEdUI7QUFDOUJ4QyxZQUFNZSxJQUFOLENBQVdDLE1BQVgsQ0FBa0JNLEVBQWxCLEdBQXVCa0IsT0FBdkI7QUFDRCxLQTVEUTtBQTZEVG9CLG9CQTdEUyw0QkE2RFM1RCxLQTdEVCxFQTZEZ0J3QyxPQTdEaEIsRUE2RHlCO0FBQ2hDeEMsWUFBTWUsSUFBTixDQUFXQyxNQUFYLENBQWtCTyxJQUFsQixHQUF5QmlCLE9BQXpCO0FBQ0QsS0EvRFE7QUFnRVRxQixtQkFoRVMsMkJBZ0VRN0QsS0FoRVIsRUFnRWV3QyxPQWhFZixFQWdFd0I7QUFDL0J4QyxZQUFNZSxJQUFOLENBQVdDLE1BQVgsQ0FBa0JRLEdBQWxCLEdBQXdCZ0IsT0FBeEI7QUFDRCxLQWxFUTtBQW1FVHNCLDZCQW5FUyxxQ0FtRWtCOUQsS0FuRWxCLEVBbUV5QndDLE9BbkV6QixFQW1Fa0M7QUFDekN4QyxZQUFNZSxJQUFOLENBQVdDLE1BQVgsQ0FBa0JTLGNBQWxCLEdBQW1DZSxPQUFuQztBQUNELEtBckVRO0FBc0VUdUIscUJBdEVTLDZCQXNFVS9ELEtBdEVWLEVBc0VpQndDLE9BdEVqQixFQXNFMEI7QUFDakN4QyxZQUFNZSxJQUFOLENBQVdDLE1BQVgsQ0FBa0JVLEtBQWxCLEdBQTBCYyxPQUExQjtBQUNELEtBeEVRO0FBeUVUd0IscUJBekVTLDZCQXlFVWhFLEtBekVWLEVBeUVpQndDLE9BekVqQixFQXlFMEI7QUFDakN4QyxZQUFNZSxJQUFOLENBQVdDLE1BQVgsQ0FBa0JXLEtBQWxCLEdBQTBCYSxPQUExQjtBQUNELEtBM0VRO0FBNEVUeUIsMkJBNUVTLG1DQTRFZ0JqRSxLQTVFaEIsRUE0RXVCd0MsT0E1RXZCLEVBNEVnQztBQUN2Q3hDLFlBQU1lLElBQU4sQ0FBV0MsTUFBWCxDQUFrQlksWUFBbEIsR0FBaUNZLE9BQWpDO0FBQ0Q7QUE5RVEsR0ExRWM7QUEwSnpCMEIsV0FBUztBQUNQQyxpQkFETyx5QkFDUUMsT0FEUixFQUNpQjVCLE9BRGpCLEVBQzBCO0FBQy9CLFVBQU02QixXQUFXRCxRQUFRcEUsS0FBUixDQUFjQyxNQUFkLENBQXFCQyxFQUF0QztBQUNBa0UsY0FBUUUsTUFBUixDQUFlLGVBQWYsRUFBZ0MsSUFBaEM7O0FBRUEsVUFBSUQsU0FBU0UsSUFBVCxHQUFnQnJDLE1BQWhCLEtBQTJCLENBQTNCLElBQWdDbUMsYUFBYSxFQUFqRCxFQUFxRDtBQUNuRCxZQUFNRyw2QkFBMkJILFFBQWpDOztBQUVBLFlBQU1JLGlCQUFpQjtBQUNyQkMsMkJBQWlCO0FBREksU0FBdkI7O0FBSUFDLGNBQU1DLEdBQU4sQ0FBVUosR0FBVixFQUFlQyxjQUFmLEVBQ0dJLElBREgsQ0FDUTtBQUFBLGlCQUFZQyxTQUFTQyxJQUFULENBQWMsQ0FBZCxDQUFaO0FBQUEsU0FEUixFQUVHQyxLQUZILENBRVM7QUFBQSxpQkFBU0MsUUFBUUMsR0FBUixDQUFZQyxLQUFaLENBQVQ7QUFBQSxTQUZULEVBR0dOLElBSEgsQ0FHUSxvQkFBWTtBQUNoQkksa0JBQVFDLEdBQVIsQ0FBWSxlQUFlSixRQUEzQjtBQUNBVixrQkFBUUUsTUFBUixDQUFlLGVBQWYsRUFBZ0MsS0FBaEM7QUFDQUYsa0JBQVFFLE1BQVIsQ0FBZSxnQkFBZixFQUFpQ1EsU0FBUzVFLEVBQVQsSUFBZSxFQUFoRDtBQUNBa0Usa0JBQVFFLE1BQVIsQ0FBZSx1QkFBZixFQUF3Q1EsU0FBU00sVUFBVCxJQUF1QixFQUEvRDtBQUNBaEIsa0JBQVFFLE1BQVIsQ0FBZSxzQkFBZixFQUF1Q1EsU0FBU08sU0FBVCxJQUFzQixFQUE3RDtBQUNBakIsa0JBQVFFLE1BQVIsQ0FBZSxzQkFBZixFQUF1Q1EsU0FBU1EsT0FBVCxJQUFvQixFQUEzRDtBQUNBbEIsa0JBQVFFLE1BQVIsQ0FBZSxzQkFBZixFQUF1Q1EsU0FBU1MsT0FBVCxJQUFvQixFQUEzRDtBQUNBbkIsa0JBQVFFLE1BQVIsQ0FBZSxzQkFBZixFQUF1Q1EsU0FBU25FLFFBQVQsSUFBcUIsRUFBNUQ7QUFDQXlELGtCQUFRRSxNQUFSLENBQWUsc0JBQWYsRUFBdUNRLFNBQVNVLE9BQVQsSUFBb0IsRUFBM0Q7QUFDQXBCLGtCQUFRRSxNQUFSLENBQWUsc0JBQWYsRUFBdUNRLFNBQVNXLE9BQVQsSUFBb0IsRUFBM0Q7QUFDQXJCLGtCQUFRRSxNQUFSLENBQWUsdUJBQWYsRUFBd0NRLFNBQVNoRSxTQUFULElBQXNCLEVBQTlEO0FBQ0FzRCxrQkFBUUUsTUFBUixDQUFlLGFBQWYsRUFBOEIsS0FBOUI7QUFDRCxTQWhCSCxFQWlCR1UsS0FqQkgsQ0FpQlM7QUFBQSxpQkFBU0MsUUFBUUMsR0FBUixDQUFZQyxLQUFaLENBQVQ7QUFBQSxTQWpCVDtBQWtCRCxPQXpCRCxNQXlCTztBQUNMZixnQkFBUUUsTUFBUixDQUFlLGVBQWYsRUFBZ0MsS0FBaEM7QUFDQUYsZ0JBQVFFLE1BQVIsQ0FBZSxnQkFBZixFQUFpQyxFQUFqQztBQUNBRixnQkFBUUUsTUFBUixDQUFlLHVCQUFmLEVBQXdDLEVBQXhDO0FBQ0FGLGdCQUFRRSxNQUFSLENBQWUsc0JBQWYsRUFBdUMsRUFBdkM7QUFDQUYsZ0JBQVFFLE1BQVIsQ0FBZSxzQkFBZixFQUF1QyxFQUF2QztBQUNBRixnQkFBUUUsTUFBUixDQUFlLHNCQUFmLEVBQXVDLEVBQXZDO0FBQ0FGLGdCQUFRRSxNQUFSLENBQWUsc0JBQWYsRUFBdUMsRUFBdkM7QUFDQUYsZ0JBQVFFLE1BQVIsQ0FBZSxzQkFBZixFQUF1QyxFQUF2QztBQUNBRixnQkFBUUUsTUFBUixDQUFlLGFBQWYsRUFBOEIsS0FBOUI7QUFDRDtBQUNGLEtBekNNO0FBMENQb0Isb0JBMUNPLDRCQTBDV3RCLE9BMUNYLEVBMENvQjVCLE9BMUNwQixFQTBDNkI7QUFDbEMsVUFBTW1ELGNBQWNuRCxPQUFwQjtBQUNBNEIsY0FBUUUsTUFBUixDQUFlLGVBQWYsRUFBZ0MsSUFBaEM7O0FBRUEsVUFBSXFCLGdCQUFnQixFQUFwQixFQUF3QjtBQUN0QixZQUFNbkIseUNBQXVDbUIsV0FBN0M7O0FBRUEsWUFBTWxCLGlCQUFpQjtBQUNyQkMsMkJBQWlCO0FBREksU0FBdkI7O0FBSUFDLGNBQU1DLEdBQU4sQ0FBVUosR0FBVixFQUFlQyxjQUFmLEVBQ0dJLElBREgsQ0FDUTtBQUFBLGlCQUFZQyxTQUFTQyxJQUFULENBQWMsQ0FBZCxDQUFaO0FBQUEsU0FEUixFQUVHQyxLQUZILENBRVM7QUFBQSxpQkFBU0MsUUFBUUMsR0FBUixDQUFZQyxLQUFaLENBQVQ7QUFBQSxTQUZULEVBR0dOLElBSEgsQ0FHUSxvQkFBWTtBQUNoQlQsa0JBQVFFLE1BQVIsQ0FBZSxnQkFBZixFQUFpQ1EsU0FBUzVFLEVBQVQsSUFBZSxFQUFoRDtBQUNBa0Usa0JBQVFFLE1BQVIsQ0FBZSwwQkFBZixFQUEyQ1EsU0FBU2MsYUFBVCxJQUEwQixFQUFyRTtBQUNBeEIsa0JBQVFFLE1BQVIsQ0FBZSw2QkFBZixFQUE4Q1EsU0FBU2UsZ0JBQVQsSUFBNkIsRUFBM0U7QUFDQXpCLGtCQUFRRSxNQUFSLENBQWUsMkJBQWYsRUFBNENRLFNBQVNnQixjQUFULElBQTJCLEVBQXZFO0FBQ0ExQixrQkFBUUUsTUFBUixDQUFlLHVCQUFmLEVBQXdDUSxTQUFTN0UsTUFBVCxDQUFnQm1GLFVBQWhCLElBQThCLEVBQXRFO0FBQ0FoQixrQkFBUUUsTUFBUixDQUFlLHNCQUFmLEVBQXVDUSxTQUFTN0UsTUFBVCxDQUFnQm9GLFNBQWhCLElBQTZCLEVBQXBFO0FBQ0FqQixrQkFBUUUsTUFBUixDQUFlLHNCQUFmLEVBQXVDUSxTQUFTN0UsTUFBVCxDQUFnQnFGLE9BQWhCLElBQTJCLEVBQWxFO0FBQ0FsQixrQkFBUUUsTUFBUixDQUFlLHNCQUFmLEVBQXVDUSxTQUFTN0UsTUFBVCxDQUFnQnNGLE9BQWhCLElBQTJCLEVBQWxFO0FBQ0FuQixrQkFBUUUsTUFBUixDQUFlLHNCQUFmLEVBQXVDUSxTQUFTN0UsTUFBVCxDQUFnQlUsUUFBaEIsSUFBNEIsRUFBbkU7QUFDQXlELGtCQUFRRSxNQUFSLENBQWUsc0JBQWYsRUFBdUNRLFNBQVM3RSxNQUFULENBQWdCdUYsT0FBaEIsSUFBMkIsRUFBbEU7QUFDQXBCLGtCQUFRRSxNQUFSLENBQWUsc0JBQWYsRUFBdUNRLFNBQVM3RSxNQUFULENBQWdCd0YsT0FBaEIsSUFBMkIsRUFBbEU7QUFDQXJCLGtCQUFRRSxNQUFSLENBQWUsdUJBQWYsRUFBd0NRLFNBQVM3RSxNQUFULENBQWdCYSxTQUFoQixJQUE2QixFQUFyRTtBQUNBc0Qsa0JBQVFFLE1BQVIsQ0FBZSxlQUFmLEVBQWdDLEtBQWhDO0FBQ0FGLGtCQUFRRSxNQUFSLENBQWUsYUFBZixFQUE4QixLQUE5QjtBQUNELFNBbEJILEVBbUJHVSxLQW5CSCxDQW1CUztBQUFBLGlCQUFTQyxRQUFRQyxHQUFSLENBQVlDLEtBQVosQ0FBVDtBQUFBLFNBbkJUO0FBb0JELE9BM0JELE1BMkJPO0FBQ0xmLGdCQUFRRSxNQUFSLENBQWUsZ0JBQWYsRUFBaUMsRUFBakM7QUFDQUYsZ0JBQVFFLE1BQVIsQ0FBZSx1QkFBZixFQUF3QyxFQUF4QztBQUNBRixnQkFBUUUsTUFBUixDQUFlLHNCQUFmLEVBQXVDLEVBQXZDO0FBQ0FGLGdCQUFRRSxNQUFSLENBQWUsc0JBQWYsRUFBdUMsRUFBdkM7QUFDQUYsZ0JBQVFFLE1BQVIsQ0FBZSxzQkFBZixFQUF1QyxFQUF2QztBQUNBRixnQkFBUUUsTUFBUixDQUFlLHNCQUFmLEVBQXVDLEVBQXZDO0FBQ0FGLGdCQUFRRSxNQUFSLENBQWUsc0JBQWYsRUFBdUMsRUFBdkM7QUFDQUYsZ0JBQVFFLE1BQVIsQ0FBZSxlQUFmLEVBQWdDLEtBQWhDO0FBQ0FGLGdCQUFRRSxNQUFSLENBQWUsYUFBZixFQUE4QixJQUE5QjtBQUNEO0FBQ0Y7QUFwRk07QUExSmdCLENBQWYsQ0FBWjs7QUFrUEEseURBQWV6RSxLQUFmLEUiLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL2pzL3N0b3JlL3NhbGUvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVnVleCwgeyBtYXBTdGF0ZSwgbWFwR2V0dGVycywgbWFwQWN0aW9ucyB9IGZyb20gJ3Z1ZXgnXG5cblZ1ZS51c2UoVnVleClcblxubGV0IHN0b3JlID0gbmV3IFZ1ZXguU3RvcmUoe1xuICBzdGF0ZToge1xuICAgIGNsaWVudDoge1xuICAgICAgaWQ6ICcnLFxuICAgICAgZmlyc3ROYW1lOiAnJyxcbiAgICAgIGxhc3ROYW1lOiAnJyxcbiAgICAgIGV4cGVkaWVudDoge1xuICAgICAgICBrZXk6ICcnLFxuICAgICAgICBudW1iZXI6ICcnLFxuICAgICAgICB5ZWFyOiAnJ1xuICAgICAgfSxcbiAgICAgIHBob25lT25lOiAnJyxcbiAgICAgIHBob25lVHdvOiAnJyxcbiAgICAgIGJ1c2luZXNzOiAnJyxcbiAgICAgIGVtYWlsT25lOiAnJyxcbiAgICAgIGVtYWlsVHdvOiAnJyxcbiAgICAgIHJlZmVyZW5jZTogJydcbiAgICB9LFxuICAgIHNhbGU6IHtcbiAgICAgIHNlbGxlcjoge1xuICAgICAgICBkZWVkOiBmYWxzZSxcbiAgICAgICAgd2F0ZXI6IGZhbHNlLFxuICAgICAgICBwcmVkaWFsOiBmYWxzZSxcbiAgICAgICAgbGlnaHQ6IGZhbHNlLFxuICAgICAgICBiaXJ0aF9jZXJ0aWZpY2F0ZTogZmFsc2UsXG4gICAgICAgIElEOiBmYWxzZSxcbiAgICAgICAgQ1VSUDogJycsXG4gICAgICAgIFJGQzogJycsXG4gICAgICAgIGFjY291bnRfc3RhdHVzOiBmYWxzZSxcbiAgICAgICAgZW1haWw6IGZhbHNlLFxuICAgICAgICBwaG9uZTogZmFsc2UsXG4gICAgICAgIGNpdmlsX3N0YXR1czogJydcbiAgICAgIH0sXG4gICAgfSxcbiAgICBsb2FkaW5nOiBmYWxzZSxcbiAgICBlbXB0eTogdHJ1ZSxcbiAgfSxcbiAgZ2V0dGVyczoge1xuICAgIHNlbGxlcklzQ29tcGxldGUgKHN0YXRlKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICBzdGF0ZS5zYWxlLnNlbGxlci5kZWVkIHx8XG4gICAgICAgIHN0YXRlLnNhbGUuc2VsbGVyLndhdGVyIHx8XG4gICAgICAgIHN0YXRlLnNhbGUuc2VsbGVyLnByZWRpYWwgfHxcbiAgICAgICAgc3RhdGUuc2FsZS5zZWxsZXIubGlnaHQgfHxcbiAgICAgICAgc3RhdGUuc2FsZS5zZWxsZXIuYmlydGhfY2VydGlmaWNhdGUgfHxcbiAgICAgICAgc3RhdGUuc2FsZS5zZWxsZXIuSUQgfHxcbiAgICAgICAgc3RhdGUuc2FsZS5zZWxsZXIuQ1VSUCAhPT0gJycgfHxcbiAgICAgICAgc3RhdGUuc2FsZS5zZWxsZXIuUkZDICE9PSAnJyB8fFxuICAgICAgICBzdGF0ZS5zYWxlLnNlbGxlci5hY2NvdW50X3N0YXR1cyB8fFxuICAgICAgICBzdGF0ZS5zYWxlLnNlbGxlci5lbWFpbCB8fFxuICAgICAgICBzdGF0ZS5zYWxlLnNlbGxlci5waG9uZSB8fFxuICAgICAgICBzdGF0ZS5zYWxlLnNlbGxlci5jaXZpbF9zdGF0dXMgIT09ICcnXG4gICAgICApXG4gICAgfSxcbiAgICBoYXNDbGllbnQgKHN0YXRlKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICBzdGF0ZS5jbGllbnQucGhvbmVPbmUubGVuZ3RoICE9PSAwIHx8XG4gICAgICAgIHN0YXRlLmNsaWVudC5waG9uZVR3by5sZW5ndGggIT09IDAgfHxcbiAgICAgICAgc3RhdGUuY2xpZW50LmVtYWlsT25lLmxlbmd0aCAhPT0gMCB8fFxuICAgICAgICBzdGF0ZS5jbGllbnQuZW1haWxUd28ubGVuZ3RoICE9PSAwXG4gICAgICApXG4gICAgfSxcbiAgICBoYXNFeHBlZGllbnQgKHN0YXRlKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICBzdGF0ZS5jbGllbnQucmVmZXJlbmNlLmxlbmd0aCAhPT0gMFxuICAgICAgKVxuICAgIH0sXG4gICAgZ2V0RnVsbE5hbWUgKHN0YXRlKSB7XG4gICAgICByZXR1cm4gYCR7c3RhdGUuY2xpZW50LmZpcnN0TmFtZX0gJHtzdGF0ZS5jbGllbnQubGFzdE5hbWV9YFxuICAgIH0sXG4gICAgZ2V0RXhwZWRpZW50IChzdGF0ZSkge1xuICAgICAgcmV0dXJuIGAke3N0YXRlLmNsaWVudC5leHBlZGllbnQua2V5fS8ke3N0YXRlLmNsaWVudC5leHBlZGllbnQubnVtYmVyfS8ke3N0YXRlLmNsaWVudC5leHBlZGllbnQueWVhcn1gXG4gICAgfVxuICB9LFxuICBtdXRhdGlvbnM6IHtcbiAgICB1cGRhdGVMb2FkaW5nIChzdGF0ZSwgcGF5bG9hZCkge1xuICAgICAgc3RhdGUubG9hZGluZyA9IHBheWxvYWRcbiAgICB9LFxuICAgIHVwZGF0ZUVtcHR5IChzdGF0ZSwgcGF5bG9hZCkge1xuICAgICAgc3RhdGUuZW1wdHkgPSBwYXlsb2FkXG4gICAgfSxcbiAgICB1cGRhdGVDbGllbnRJRCAoc3RhdGUsIHBheWxvYWQpIHtcbiAgICAgIHN0YXRlLmNsaWVudC5pZCA9IHBheWxvYWRcbiAgICB9LFxuICAgIHVwZGF0ZUNsaWVudEZpcnN0TmFtZSAoc3RhdGUsIHBheWxvYWQpIHtcbiAgICAgIHN0YXRlLmNsaWVudC5maXJzdE5hbWUgPSBwYXlsb2FkXG4gICAgfSxcbiAgICB1cGRhdGVDbGllbnRMYXN0TmFtZSAoc3RhdGUsIHBheWxvYWQpIHtcbiAgICAgIHN0YXRlLmNsaWVudC5sYXN0TmFtZSA9IHBheWxvYWRcbiAgICB9LFxuICAgIHVwZGF0ZUNsaWVudEV4cGVkaWVudEtleSAoc3RhdGUsIHBheWxvYWQpIHtcbiAgICAgIHN0YXRlLmNsaWVudC5leHBlZGllbnQua2V5ID0gcGF5bG9hZFxuICAgIH0sXG4gICAgdXBkYXRlQ2xpZW50RXhwZWRpZW50TnVtYmVyIChzdGF0ZSwgcGF5bG9hZCkge1xuICAgICAgc3RhdGUuY2xpZW50LmV4cGVkaWVudC5udW1iZXIgPSBwYXlsb2FkXG4gICAgfSxcbiAgICB1cGRhdGVDbGllbnRFeHBlZGllbnRZZWFyIChzdGF0ZSwgcGF5bG9hZCkge1xuICAgICAgc3RhdGUuY2xpZW50LmV4cGVkaWVudC55ZWFyID0gcGF5bG9hZFxuICAgIH0sXG4gICAgdXBkYXRlQ2xpZW50UGhvbmVPbmUgKHN0YXRlLCBwYXlsb2FkKSB7XG4gICAgICBzdGF0ZS5jbGllbnQucGhvbmVPbmUgPSBwYXlsb2FkXG4gICAgfSxcbiAgICB1cGRhdGVDbGllbnRQaG9uZVR3byAoc3RhdGUsIHBheWxvYWQpIHtcbiAgICAgIHN0YXRlLmNsaWVudC5waG9uZVR3byA9IHBheWxvYWRcbiAgICB9LFxuICAgIHVwZGF0ZUNsaWVudEJ1c2luZXNzIChzdGF0ZSwgcGF5bG9hZCkge1xuICAgICAgc3RhdGUuY2xpZW50LmJ1c2luZXNzID0gcGF5bG9hZFxuICAgIH0sXG4gICAgdXBkYXRlQ2xpZW50RW1haWxPbmUgKHN0YXRlLCBwYXlsb2FkKSB7XG4gICAgICBzdGF0ZS5jbGllbnQuZW1haWxPbmUgPSBwYXlsb2FkXG4gICAgfSxcbiAgICB1cGRhdGVDbGllbnRFbWFpbFR3byAoc3RhdGUsIHBheWxvYWQpIHtcbiAgICAgIHN0YXRlLmNsaWVudC5lbWFpbFR3byA9IHBheWxvYWRcbiAgICB9LFxuICAgIHVwZGF0ZUNsaWVudFJlZmVyZW5jZSAoc3RhdGUsIHBheWxvYWQpIHtcbiAgICAgIHN0YXRlLmNsaWVudC5yZWZlcmVuY2UgPSBwYXlsb2FkXG4gICAgfSxcbiAgICB1cGRhdGVTZWxsZXJEZWVkIChzdGF0ZSwgcGF5bG9hZCkge1xuICAgICAgc3RhdGUuc2FsZS5zZWxsZXIuZGVlZCA9IHBheWxvYWRcbiAgICB9LFxuICAgIHVwZGF0ZVNlbGxlcldhdGVyIChzdGF0ZSwgcGF5bG9hZCkge1xuICAgICAgc3RhdGUuc2FsZS5zZWxsZXIud2F0ZXIgPSBwYXlsb2FkXG4gICAgfSxcbiAgICB1cGRhdGVTZWxsZXJQcmVkaWFsIChzdGF0ZSwgcGF5bG9hZCkge1xuICAgICAgc3RhdGUuc2FsZS5zZWxsZXIucHJlZGlhbCA9IHBheWxvYWRcbiAgICB9LFxuICAgIHVwZGF0ZVNlbGxlckxpZ2h0IChzdGF0ZSwgcGF5bG9hZCkge1xuICAgICAgc3RhdGUuc2FsZS5zZWxsZXIubGlnaHQgPSBwYXlsb2FkXG4gICAgfSxcbiAgICB1cGRhdGVTZWxsZXJCaXJ0aENlcnRpZmljYXRlIChzdGF0ZSwgcGF5bG9hZCkge1xuICAgICAgc3RhdGUuc2FsZS5zZWxsZXIuYmlydGhfY2VydGlmaWNhdGUgPSBwYXlsb2FkXG4gICAgfSxcbiAgICB1cGRhdGVTZWxsZXJJRCAoc3RhdGUsIHBheWxvYWQpIHtcbiAgICAgIHN0YXRlLnNhbGUuc2VsbGVyLklEID0gcGF5bG9hZFxuICAgIH0sXG4gICAgdXBkYXRlU2VsbGVyQ1VSUCAoc3RhdGUsIHBheWxvYWQpIHtcbiAgICAgIHN0YXRlLnNhbGUuc2VsbGVyLkNVUlAgPSBwYXlsb2FkXG4gICAgfSxcbiAgICB1cGRhdGVTZWxsZXJSRkMgKHN0YXRlLCBwYXlsb2FkKSB7XG4gICAgICBzdGF0ZS5zYWxlLnNlbGxlci5SRkMgPSBwYXlsb2FkXG4gICAgfSxcbiAgICB1cGRhdGVTZWxsZXJBY2NvdW50U3RhdHVzIChzdGF0ZSwgcGF5bG9hZCkge1xuICAgICAgc3RhdGUuc2FsZS5zZWxsZXIuYWNjb3VudF9zdGF0dXMgPSBwYXlsb2FkXG4gICAgfSxcbiAgICB1cGRhdGVTZWxsZXJFbWFpbCAoc3RhdGUsIHBheWxvYWQpIHtcbiAgICAgIHN0YXRlLnNhbGUuc2VsbGVyLmVtYWlsID0gcGF5bG9hZFxuICAgIH0sXG4gICAgdXBkYXRlU2VsbGVyUGhvbmUgKHN0YXRlLCBwYXlsb2FkKSB7XG4gICAgICBzdGF0ZS5zYWxlLnNlbGxlci5waG9uZSA9IHBheWxvYWRcbiAgICB9LFxuICAgIHVwZGF0ZVNlbGxlckNpdmlsU3RhdHVzIChzdGF0ZSwgcGF5bG9hZCkge1xuICAgICAgc3RhdGUuc2FsZS5zZWxsZXIuY2l2aWxfc3RhdHVzID0gcGF5bG9hZFxuICAgIH1cbiAgfSxcbiAgYWN0aW9uczoge1xuICAgIGdldENsaWVudEluZm8gKGNvbnRleHQsIHBheWxvYWQpIHtcbiAgICAgIGNvbnN0IGNsaWVudElkID0gY29udGV4dC5zdGF0ZS5jbGllbnQuaWRcbiAgICAgIGNvbnRleHQuY29tbWl0KCd1cGRhdGVMb2FkaW5nJywgdHJ1ZSlcblxuICAgICAgaWYgKGNsaWVudElkLnRyaW0oKS5sZW5ndGggIT09IDAgJiYgY2xpZW50SWQgIT09ICcnKSB7XG4gICAgICAgIGNvbnN0IHVyaSA9IGAvYXBpL2NsaWVudHMvc2hvdy8ke2NsaWVudElkfWBcblxuICAgICAgICBjb25zdCBpbmljaWFsaXphdGlvbiA9IHtcbiAgICAgICAgICB3aXRoQ3JlZGVudGlhbHM6IGZhbHNlXG4gICAgICAgIH1cblxuICAgICAgICBheGlvcy5nZXQodXJpLCBpbmljaWFsaXphdGlvbilcbiAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS5kYXRhWzBdKVxuICAgICAgICAgIC5jYXRjaChlcnJvciA9PiBjb25zb2xlLmxvZyhlcnJvcikpXG4gICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ1Jlc3BvbnNlOiAnICsgcmVzcG9uc2UpO1xuICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ3VwZGF0ZUxvYWRpbmcnLCBmYWxzZSlcbiAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCd1cGRhdGVDbGllbnRJRCcsIHJlc3BvbnNlLmlkIHx8ICcnKVxuICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ3VwZGF0ZUNsaWVudEZpcnN0TmFtZScsIHJlc3BvbnNlLmZpcnN0X25hbWUgfHwgJycpXG4gICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgndXBkYXRlQ2xpZW50TGFzdE5hbWUnLCByZXNwb25zZS5sYXN0X25hbWUgfHwgJycpXG4gICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgndXBkYXRlQ2xpZW50UGhvbmVPbmUnLCByZXNwb25zZS5waG9uZV8xIHx8ICcnKVxuICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ3VwZGF0ZUNsaWVudFBob25lVHdvJywgcmVzcG9uc2UucGhvbmVfMiB8fCAnJylcbiAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCd1cGRhdGVDbGllbnRCdXNpbmVzcycsIHJlc3BvbnNlLmJ1c2luZXNzIHx8ICcnKVxuICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ3VwZGF0ZUNsaWVudEVtYWlsT25lJywgcmVzcG9uc2UuZW1haWxfMSB8fCAnJylcbiAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCd1cGRhdGVDbGllbnRFbWFpbFR3bycsIHJlc3BvbnNlLmVtYWlsXzIgfHwgJycpXG4gICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgndXBkYXRlQ2xpZW50UmVmZXJlbmNlJywgcmVzcG9uc2UucmVmZXJlbmNlIHx8ICcnKVxuICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ3VwZGF0ZUVtcHR5JywgZmFsc2UpXG4gICAgICAgICAgfSlcbiAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4gY29uc29sZS5sb2coZXJyb3IpKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29udGV4dC5jb21taXQoJ3VwZGF0ZUxvYWRpbmcnLCBmYWxzZSlcbiAgICAgICAgY29udGV4dC5jb21taXQoJ3VwZGF0ZUNsaWVudElEJywgJycpXG4gICAgICAgIGNvbnRleHQuY29tbWl0KCd1cGRhdGVDbGllbnRGaXJzdE5hbWUnLCAnJylcbiAgICAgICAgY29udGV4dC5jb21taXQoJ3VwZGF0ZUNsaWVudExhc3ROYW1lJywgJycpXG4gICAgICAgIGNvbnRleHQuY29tbWl0KCd1cGRhdGVDbGllbnRQaG9uZU9uZScsICcnKVxuICAgICAgICBjb250ZXh0LmNvbW1pdCgndXBkYXRlQ2xpZW50UGhvbmVUd28nLCAnJylcbiAgICAgICAgY29udGV4dC5jb21taXQoJ3VwZGF0ZUNsaWVudEVtYWlsT25lJywgJycpXG4gICAgICAgIGNvbnRleHQuY29tbWl0KCd1cGRhdGVDbGllbnRFbWFpbFR3bycsICcnKVxuICAgICAgICBjb250ZXh0LmNvbW1pdCgndXBkYXRlRW1wdHknLCBmYWxzZSlcbiAgICAgIH1cbiAgICB9LFxuICAgIGdldEV4cGVkaWVudEluZm8gKGNvbnRleHQsIHBheWxvYWQpIHtcbiAgICAgIGNvbnN0IGV4cGVkaWVudElkID0gcGF5bG9hZFxuICAgICAgY29udGV4dC5jb21taXQoJ3VwZGF0ZUxvYWRpbmcnLCB0cnVlKVxuXG4gICAgICBpZiAoZXhwZWRpZW50SWQgIT09ICcnKSB7XG4gICAgICAgIGNvbnN0IHVyaSA9IGAvYXBpL2ludGVybmFsX2V4cGVkaWVudHMvc2hvdy8ke2V4cGVkaWVudElkfWBcblxuICAgICAgICBjb25zdCBpbmljaWFsaXphdGlvbiA9IHtcbiAgICAgICAgICB3aXRoQ3JlZGVudGlhbHM6IGZhbHNlXG4gICAgICAgIH1cblxuICAgICAgICBheGlvcy5nZXQodXJpLCBpbmljaWFsaXphdGlvbilcbiAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS5kYXRhWzBdKVxuICAgICAgICAgIC5jYXRjaChlcnJvciA9PiBjb25zb2xlLmxvZyhlcnJvcikpXG4gICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ3VwZGF0ZUNsaWVudElEJywgcmVzcG9uc2UuaWQgfHwgJycpXG4gICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgndXBkYXRlQ2xpZW50RXhwZWRpZW50S2V5JywgcmVzcG9uc2UuZXhwZWRpZW50X2tleSB8fCAnJylcbiAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCd1cGRhdGVDbGllbnRFeHBlZGllbnROdW1iZXInLCByZXNwb25zZS5leHBlZGllbnRfbnVtYmVyIHx8ICcnKVxuICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ3VwZGF0ZUNsaWVudEV4cGVkaWVudFllYXInLCByZXNwb25zZS5leHBlZGllbnRfeWVhciB8fCAnJylcbiAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCd1cGRhdGVDbGllbnRGaXJzdE5hbWUnLCByZXNwb25zZS5jbGllbnQuZmlyc3RfbmFtZSB8fCAnJylcbiAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCd1cGRhdGVDbGllbnRMYXN0TmFtZScsIHJlc3BvbnNlLmNsaWVudC5sYXN0X25hbWUgfHwgJycpXG4gICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgndXBkYXRlQ2xpZW50UGhvbmVPbmUnLCByZXNwb25zZS5jbGllbnQucGhvbmVfMSB8fCAnJylcbiAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCd1cGRhdGVDbGllbnRQaG9uZVR3bycsIHJlc3BvbnNlLmNsaWVudC5waG9uZV8yIHx8ICcnKVxuICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ3VwZGF0ZUNsaWVudEJ1c2luZXNzJywgcmVzcG9uc2UuY2xpZW50LmJ1c2luZXNzIHx8ICcnKVxuICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ3VwZGF0ZUNsaWVudEVtYWlsT25lJywgcmVzcG9uc2UuY2xpZW50LmVtYWlsXzEgfHwgJycpXG4gICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgndXBkYXRlQ2xpZW50RW1haWxUd28nLCByZXNwb25zZS5jbGllbnQuZW1haWxfMiB8fCAnJylcbiAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCd1cGRhdGVDbGllbnRSZWZlcmVuY2UnLCByZXNwb25zZS5jbGllbnQucmVmZXJlbmNlIHx8ICcnKVxuICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ3VwZGF0ZUxvYWRpbmcnLCBmYWxzZSlcbiAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCd1cGRhdGVFbXB0eScsIGZhbHNlKVxuICAgICAgICAgIH0pXG4gICAgICAgICAgLmNhdGNoKGVycm9yID0+IGNvbnNvbGUubG9nKGVycm9yKSlcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnRleHQuY29tbWl0KCd1cGRhdGVDbGllbnRJRCcsICcnKVxuICAgICAgICBjb250ZXh0LmNvbW1pdCgndXBkYXRlQ2xpZW50Rmlyc3ROYW1lJywgJycpXG4gICAgICAgIGNvbnRleHQuY29tbWl0KCd1cGRhdGVDbGllbnRMYXN0TmFtZScsICcnKVxuICAgICAgICBjb250ZXh0LmNvbW1pdCgndXBkYXRlQ2xpZW50UGhvbmVPbmUnLCAnJylcbiAgICAgICAgY29udGV4dC5jb21taXQoJ3VwZGF0ZUNsaWVudFBob25lVHdvJywgJycpXG4gICAgICAgIGNvbnRleHQuY29tbWl0KCd1cGRhdGVDbGllbnRFbWFpbE9uZScsICcnKVxuICAgICAgICBjb250ZXh0LmNvbW1pdCgndXBkYXRlQ2xpZW50RW1haWxUd28nLCAnJylcbiAgICAgICAgY29udGV4dC5jb21taXQoJ3VwZGF0ZUxvYWRpbmcnLCBmYWxzZSlcbiAgICAgICAgY29udGV4dC5jb21taXQoJ3VwZGF0ZUVtcHR5JywgdHJ1ZSlcbiAgICAgIH1cbiAgICB9XG4gIH1cbn0pXG5cbmV4cG9ydCBkZWZhdWx0IHN0b3JlXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvYXNzZXRzL2pzL3N0b3JlL3NhbGUvaW5kZXguanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/assets/js/store/sale/index.js\n");

/***/ }),

/***/ 0:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("./resources/assets/js/app.js");


/***/ })

},[0]);